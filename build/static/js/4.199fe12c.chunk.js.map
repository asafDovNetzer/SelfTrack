{"version":3,"sources":["Components/Tracker/Stopwatch/Stopwatch.module.css","Components/Tracker/Rater/Rater.module.css","Components/Tracker/Counter/Counter.module.css","Components/TrackersForm/StopwatchForm/TrackerForm.module.css","Components/SurveyForm/SurveyForm.module.css","Containers/TrackerContainer/Trackers.module.css","Components/Entries/StopwatchEntries/StopwatchEntries.module.css","Components/Charts/BarChart/BarChartPreAmp.module.css","Components/Charts/BarChart/BarChart.module.css","Components/Entries/StopwatchEntries/EntryEditForm.module.css","Components/Tracker/Checker/Checker.module.css","Containers/DataPanel/DataPanel.module.css","Components/TrackerSelector/TrackerSelector.module.css","Components/TrackerSelector/Label/Label.module.css","Components/TimeRange/RangeSelector.module.css","Components/Charts/BarLineChart/BarLineChart.module.css","HalperFunctions/CreateTrackers.tsx","Components/TrackersForm/FakeTracker/FakeTracker.tsx","Components/TrackersForm/TrackersFormModal.tsx","Components/SurveyForm/SurveyForm.tsx","HalperFunctions/HandleStopwatches.tsx","Components/Clock/Clock.tsx","Components/Charts/BarChart/BarChart.tsx","Components/Charts/BarChart/BarChartPreAmp.tsx","HalperFunctions/ArrangeEntries.tsx","Components/Entries/StopwatchEntries/EntryEditForm.tsx","Components/Entries/EntryEditModal/EntryEditModal.tsx","Components/Entries/StopwatchEntries/StopwatchEntries.tsx","Components/Tracker/Stopwatch/Stopwatch.tsx","Components/Tracker/Rater/Rater.tsx","Components/Tracker/Checker/Checker.tsx","Components/Tracker/Counter/Counter.tsx","Containers/TrackerContainer/TrackerContainer.tsx","Components/TrackerSelector/Label/Label.tsx","Components/TrackerSelector/TrackerSelector.tsx","Components/TimeRange/RangeSelector.tsx","Components/Charts/BarLineChart/BarLineChart.tsx","Components/Charts/BarLineChart/BarLineChartPreAmp.tsx","Components/Charts/ChartSelect.tsx","Containers/DataPanel/DataPanel.tsx","FakeData/GenarateFakeData.tsx","Control.tsx"],"names":["module","exports","Stopwatch","name","description","color","id","type","size","this","nanoid","Checker","Counter","Rater","trackerConverter","toFirestore","tracker","fromFirestore","snapshot","data","FakeTracker","React","memo","trackerElement","useState","count","setCount","console","log","className","stopwatchClasses","Content","MainButton","width","height","fill","href","icons","style","margin","display","textAlign","raterClasses","Checkbox","checked","counterClasses","ButtonGroup","onClick","disabled","Rating","defaultValue","borderLeftColor","TrackersFormModal","show","selected","closeHandler","page","setPage","pages","setPages","setColor","errors","setErrors","setName","setDescription","setSize","userDb","useContext","DbContext","useEffect","toString","closeForm","saveForm","collection","doc","withConverter","set","then","catch","err","createNewTracker","update","updateTracker","handleChangeComplete","hex","changeSize","event","target","value","initialValues","formElement","onSubmit","validate","values","length","classes","Form","Field","placeholder","Divider","variant","as","onChangeComplete","TextField","onChange","Modal","onHide","Header","Body","Footer","Button","Pagination","not","a","b","filter","includes","intersection","SurveyFormModal","checkers","raters","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","expanded","setExpanded","handleToggle","currentIndex","indexOf","newChecked","push","splice","numberOfChecked","items","handleToggleAll","expand","nodeIds","customList","title","Card","CardHeader","avatar","indeterminate","subheader","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","TreeItem","nodeId","label","map","rater","ListItem","role","button","ListItemIcon","disableRipple","ListItemText","primary","checker","required","error","Transfer","Movers","concat","add","trackers","reletiveTimestampToString","timestamp","outputInSeconds","Math","round","seconds","padStart","minutes","floor","hours","absoluteTimestampToString","date","Date","getSeconds","getMinutes","getHours","Clock","accum","isRunning","lastEntry","output","setOutput","gap","setGap","tick","useCallback","now","interval","window","setInterval","clearInterval","outputString","fontWeight","BarChart","chartData","chartRef","useRef","canvasCallback","canvas","ctx","getContext","current","Chart","datasets","options","aspectRatio","scales","x","stacked","max","grid","ticks","stepSize","callback","y","indexAxis","e","chart","config","_config","dataset","_active","datasetIndex","index","elements","bar","borderWidth","barThickness","responsive","plugins","legend","tooltip","enabled","labels","ref","BarChartPreamp","stopwatch","entries","nowTimestamp","setNowTimestamp","setDatasets","datasetsArray","dayStart","getFullYear","getMonth","getDate","getTime","dayEnd","stopwatchEntries","entry","currentTimestamp","forEach","setBackgroundColor","backgroundColor","barChart","dates","promises","dailyEntries","createPromise","year","month","day","Promise","all","responses","res","docs","where","orderBy","get","EntryEditForm","submitHandler","from","newFrom","setNewFrom","to","newTo","setNewTo","newSubTotal","setNewSubTotal","fromInitValue","toInitValue","fromHour","fromMinute","fromSecond","toHour","toMinute","toSecond","fromInputTimestamp","stringPlusDayToTimestamp","toInputTimestamp","isFromBiggerThanLimit","limit","isFromSmallerThanTo","isToSmallerThanLimit","isToBiggerThanFrom","borderColor","min","Limit","timeStringFromTimestamp","EntryEditModal","editHandler","newEntryHandler","changeEntry","batch","db","fromRef","toRef","Entries","arrangedEntries","setArrangedEntries","selectionModel","setSelectionModel","modalDisplay","setModalDisplay","EntryToEdit","setEntryToEdit","todaysDate","DateContext","rows","setRows","pairs","stopwatchId","today","biEntries","fromLimit","pop","subTotal","entryId","biEntry","total","endOfDay","reversed","reverse","toLimit","rawEntriesToPairs","pair","realIndex","entriesIds","delete","commit","startOfDay","entryToEdit","rowHeight","columns","field","headerName","sortable","filterable","editable","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","headerHeight","trackerId","connector","connect","state","user","props","setAccum","setIsRunning","setLastEntry","setEntries","entriesRef","q","query","onSnapshot","newEntries","even","entriesTimestamps","firstEntry","closest","selector","borderRightColor","isSelected","borderTopColor","borderBottomColor","ExpandButton","StopwatchEntries","setValue","setEntry","precision","isChecked","setIsChecked","newIsChecked","counter","changeCount","newCount","Buttons","Trackers","stopwatches","counters","modalTrackerDisplay","setModalTrackerDisplay","modalSurveyDisplay","setModalSurveyDisplay","anchorEl","setAnchorEl","displayMenu","setDisplayMenu","setType","setSelected","setDate","handleChoose","outerText","toLowerCase","selectHandler","ControlPanel","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","onClose","MenuItem","ids","promise","deleteEntries","deleteTracker","maxDate","locale","clearIcon","SurveyForm","Label","TrackerSelector","handler","selectedTrackers","onNodeSelect","RangeSelector","dateRange","setDateRange","Selector","zIndex","Calender","BarLineChartPreAmp","raterEntries","dateStrings","counterEntries","checkerEntries","trackerDatasets","setTrackerDatasets","setOptions","newOptions","point","radius","interaction","mode","intersect","position","y1","suggestedMax","text","drawOnChartArea","displayColors","stepped","order","yAxisID","tension","totals","filteredEntries","isToday","fakeLastEntry","newTimeStamp","createFakeLastEntry","unshift","filteredEntry","rgb","hexRgb","red","green","blue","flexFlow","BarLineChart","ChartSelect","Map","setStopwatchEntries","setCheckerEntries","setRaterEntries","setCounterEntries","setDateStrings","barLineChart","pieChart","setPieChart","fromTimestamp","toTimestamp","days","i","newDate","newDay","newMonth","newYear","createDatesFromRange","weekMapStopwatch","weekMapRater","weekMapChecker","weekMapCounter","getEntries","marginLeft","DataPanel","setPosition","setSelectedTrackers","transform","newTrackers","GenarateFakeData","setNewDay","empty","numberOfEntries","trunc","random","timeOfEntry","setStopwatches","setRaters","setCheckers","setCounters","unsubscribe","dataPanel","trackersEl","LoginModal","handleClose"],"mappings":"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","file":"static/js/4.199fe12c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stopwatch\":\"Stopwatch_Stopwatch__1Sm-9\",\"ExpandButton\":\"Stopwatch_ExpandButton__3TVfW\",\"Content\":\"Stopwatch_Content__3seJN\",\"Details\":\"Stopwatch_Details__YDYYc\",\"Accordion\":\"Stopwatch_Accordion__2RGPL\",\"MainButton\":\"Stopwatch_MainButton__Xtp0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rater\":\"Rater_Rater__Rw26d\",\"Content\":\"Rater_Content__3fnIG\",\"Details\":\"Rater_Details__3xoiD\",\"Accordion\":\"Rater_Accordion__1KrNl\",\"Rating\":\"Rater_Rating__fa4Sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Counter_Content__3GsA1\",\"Buttons\":\"Counter_Buttons__36Npi\",\"Counter\":\"Counter_Counter__18qwd\",\"Details\":\"Counter_Details__38vm4\",\"Accordion\":\"Counter_Accordion__2uY5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"TrackerForm_Field__3zk3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardHeader\":\"SurveyForm_CardHeader__3GZP2\",\"List\":\"SurveyForm_List__3VN1A\",\"Transfer\":\"SurveyForm_Transfer__NIDYV\",\"Movers\":\"SurveyForm_Movers__ZnRYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trackers\":\"Trackers_Trackers__1zNZe\",\"ControlPanel\":\"Trackers_ControlPanel__2Ru5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Entries\":\"StopwatchEntries_Entries__trl9H\",\"NewEntryButton\":\"StopwatchEntries_NewEntryButton__25tlb\",\"Tablehead\":\"StopwatchEntries_Tablehead__1t_kg\",\"ListItem\":\"StopwatchEntries_ListItem__3ni0F\",\"Dropdown\":\"StopwatchEntries_Dropdown__24rx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChartPreAmp\":\"BarChartPreAmp_BarChartPreAmp__3-nTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarChart_BarChart__3cQVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"EntryEditForm_Field__3Tdcb\",\"Limit\":\"EntryEditForm_Limit__3WxXf\",\"Form\":\"EntryEditForm_Form__3lfW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checker\":\"Checker_Checker__2Ib52\",\"Content\":\"Checker_Content__34-M0\",\"Details\":\"Checker_Details__21oGr\",\"Accordion\":\"Checker_Accordion__ruJdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataPanel\":\"DataPanel_DataPanel__2TvCl\",\"Chart\":\"DataPanel_Chart__2NxcX\",\"Divider\":\"DataPanel_Divider__2LcUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerSelector\":\"TrackerSelector_TrackerSelector__13Imw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__1Ou9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"RangeSelector_Selector__1o0hR\",\"Calender\":\"RangeSelector_Calender__3YZIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarLineChart_BarChart__UHoXd\"};","import { nanoid } from \"nanoid\";\r\nimport * as types from \"../Types\";\r\n\r\nexport class Stopwatch {\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  id: string;\r\n  type: string;\r\n  size: number;\r\n\r\n  constructor(name: string, description: string, color: string, id?: string) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.color = color;\r\n    this.type = `stopwatch`;\r\n    this.id = id ? id : nanoid();\r\n    this.size = 0;\r\n  }\r\n}\r\n\r\nexport class Checker {\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  id: string;\r\n  type: string;\r\n  size: number;\r\n\r\n  constructor(name: string, description: string, color: string, id?: string) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.color = color;\r\n    this.id = id ? id : nanoid();\r\n    this.type = `checker`;\r\n    this.size = 0;\r\n  }\r\n}\r\n\r\nexport class Counter {\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  id: string;\r\n  type: string;\r\n  size: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    description: string,\r\n    color: string,\r\n    size: number,\r\n    id?: string\r\n  ) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.color = color;\r\n    this.id = id ? id : nanoid();\r\n    this.type = `counter`;\r\n    this.size = size;\r\n  }\r\n}\r\n\r\nexport class Rater {\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  id: string;\r\n  type: string;\r\n  size: number;\r\n\r\n  constructor(name: string, description: string, color: string, id?: string) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.color = color;\r\n    this.id = id ? id : nanoid();\r\n    this.type = `rater`;\r\n    this.size = 0;\r\n  }\r\n}\r\n\r\nexport const trackerConverter = {\r\n  toFirestore: (tracker: types.Tracker) => {\r\n    return {\r\n      name: tracker.name,\r\n      description: tracker.description,\r\n      color: tracker.color,\r\n      id: tracker.id,\r\n      type: tracker.type,\r\n      size: tracker.size,\r\n    };\r\n  },\r\n  fromFirestore: (snapshot: any) => {\r\n    const data = snapshot.data();\r\n\r\n    let tracker: types.Tracker;\r\n    switch (data.type) {\r\n      case `stopwatch`:\r\n        tracker = new Stopwatch(\r\n          data.name,\r\n          data.description,\r\n          data.color,\r\n          data.id\r\n        );\r\n        break;\r\n      case `rater`:\r\n        tracker = new Rater(data.name, data.description, data.color, data.id);\r\n        break;\r\n      case `counter`:\r\n        tracker = new Counter(\r\n          data.name,\r\n          data.description,\r\n          data.color,\r\n          data.size,\r\n          data.id\r\n        );\r\n        break;\r\n      default:\r\n        tracker = new Checker(data.name, data.description, data.color, data.id);\r\n        break;\r\n    }\r\n    return tracker!;\r\n  },\r\n};\r\n\r\nexport const createNewTracker = (\r\n  userDb: types.DbRef,\r\n  type: string,\r\n  name: string,\r\n  description: string,\r\n  color: string,\r\n  size: string\r\n) => {\r\n  let tracker: types.Tracker;\r\n\r\n  switch (type) {\r\n    case `stopwatch`:\r\n      tracker = new Stopwatch(name, description, color);\r\n      break;\r\n    case `checker`:\r\n      tracker = new Checker(name, description, color);\r\n      break;\r\n    case `counter`:\r\n      tracker = new Counter(name, description, color, +size);\r\n      break;\r\n    default:\r\n      tracker = new Rater(name, description, color);\r\n      break;\r\n  }\r\n\r\n  userDb!\r\n    .collection(`trackers`)\r\n    .doc(tracker!.id)\r\n    .withConverter(trackerConverter)\r\n    .set(tracker!)\r\n    .then(() => {})\r\n    .catch((err: any) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const updateTracker = (\r\n  userDb: types.DbRef,\r\n  id: string,\r\n  name: string,\r\n  description: string,\r\n  color: string,\r\n  size: string\r\n) => {\r\n  console.log(id);\r\n  userDb!\r\n    .collection(`trackers`)\r\n    .doc(id)\r\n    .update({\r\n      name: name,\r\n      description: description,\r\n      color: color,\r\n      size: +size,\r\n    })\r\n    .then(() => {})\r\n    .catch((err: any) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const deleteTracker = (userDb: types.DbRef, tracker: types.Tracker) => {\r\n  userDb!\r\n    .collection(`trackers`)\r\n    .doc(tracker.id)\r\n    .delete()\r\n    .then(() => {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .where(\"trackerId\", \"==\", tracker.id)\r\n        .get()\r\n        .then((res: any) => {\r\n          const ids: string[] = [];\r\n\r\n          res.forEach((entry: any) => {\r\n            ids.push(entry.id);\r\n          });\r\n          console.log(ids);\r\n\r\n          const deleteEntries = async function () {\r\n            const promises: Promise<any>[] = [];\r\n\r\n            ids.forEach((id) => {\r\n              const promise = userDb!.collection(`entries`).doc(id).delete();\r\n\r\n              promises.push(promise);\r\n            });\r\n\r\n            const responses = await Promise.all(promises);\r\n\r\n            return responses;\r\n          };\r\n\r\n          deleteEntries()\r\n            .then(() => {})\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        })\r\n        .catch((err: any) => {\r\n          console.log(err);\r\n        });\r\n    })\r\n    .catch((err: any) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport stopwatchClasses from \"../../Tracker/Stopwatch/Stopwatch.module.css\";\r\nimport raterClasses from \"../../Tracker/Rater/Rater.module.css\";\r\nimport counterClasses from \"../../Tracker/Counter/Counter.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { Checkbox, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst FakeTracker: React.FC<{\r\n  type: string;\r\n  color: string;\r\n  name: string;\r\n  size: number;\r\n}> = React.memo(({ type, color, name, size }) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  let trackerElement: JSX.Element;\r\n\r\n  console.log(type);\r\n\r\n  switch (type) {\r\n    case `stopwatch`:\r\n      trackerElement = (\r\n        <div className={stopwatchClasses.Content}>\r\n          <button className={`${stopwatchClasses.MainButton}     main-button`}>\r\n            <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n              <use href={`${icons}#play-circle`} />\r\n            </svg>\r\n          </button>\r\n          <h5 style={{ color: `grey` }}>{name}</h5>\r\n          <h3\r\n            style={{\r\n              margin: `auto auto`,\r\n              display: `block`,\r\n              textAlign: `center`,\r\n            }}\r\n          >\r\n            00:00:00\r\n          </h3>\r\n        </div>\r\n      );\r\n      break;\r\n    case `checker`:\r\n      trackerElement = (\r\n        <div className={raterClasses.Content}>\r\n          <h5 style={{ color: `grey ` }}>{name}</h5>\r\n          <Checkbox\r\n            checked={true}\r\n            // onChange={checkerHandler}\r\n            className=\"main-button\"\r\n            color=\"primary\"\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    case `counter`:\r\n      trackerElement = (\r\n        <div className={counterClasses.Content}>\r\n          <h5 style={{ color: `grey ` }}>{name}</h5>\r\n          <ButtonGroup color=\"primary\">\r\n            <Button onClick={() => setCount(count + size)}>\r\n              <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n                <use href={`${icons}#plus`} />\r\n              </svg>\r\n            </Button>\r\n            <Button color=\"primary\">{count}</Button>\r\n            <Button\r\n              onClick={() => setCount(count - size < 0 ? 0 : count - size)}\r\n              disabled={count === 0}\r\n            >\r\n              <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n                <use href={`${icons}#dash`} />\r\n              </svg>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      trackerElement = (\r\n        <div className={raterClasses.Content}>\r\n          <h5 style={{ color: `grey ` }}>{name}</h5>\r\n          <Rating\r\n            className={raterClasses.Rating}\r\n            name=\"stars\"\r\n            defaultValue={3}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={raterClasses.Rater} style={{ borderLeftColor: color }}>\r\n      {trackerElement}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FakeTracker;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Tracker } from \"../../Types\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport classes from \"./StopwatchForm/TrackerForm.module.css\";\r\nimport { SliderPicker } from \"react-color\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  createNewTracker,\r\n  updateTracker,\r\n} from \"../../HalperFunctions/CreateTrackers\";\r\nimport FakeTracker from \"./FakeTracker/FakeTracker\";\r\nimport { MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nconst TrackersFormModal: React.FC<{\r\n  show: boolean;\r\n  selected: Tracker | null;\r\n  closeHandler: () => void;\r\n  type: string;\r\n}> = React.memo(({ show, selected, closeHandler, type }) => {\r\n  const [page, setPage] = useState<number>(1);\r\n  const [pages, setPages] = useState<number>(1);\r\n  const [color, setColor] = useState<string>(`#000000`);\r\n  const [errors, setErrors] = useState<any>({});\r\n  const [name, setName] = useState<string>(`Give me a cool name`);\r\n  const [description, setDescription] = useState<string>(``);\r\n  const [size, setSize] = useState<string>(`1`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (selected) {\r\n      setName(selected.name);\r\n      setColor(selected.color);\r\n      setDescription(selected.description);\r\n      setSize(selected.size ? selected.size.toString() : `1`);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (type !== `counter`) {\r\n      setPages(1);\r\n      // setSize(`1`);\r\n    } else {\r\n      setPages(2);\r\n    }\r\n  }, [type]);\r\n\r\n  const changePage = (event: any, page: number) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setColor(`#000000`);\r\n    setName(`Give me a cool name`);\r\n    setSize(`1`);\r\n    setDescription(``);\r\n    setErrors({});\r\n    setPage(1);\r\n    closeHandler();\r\n  };\r\n\r\n  const saveForm = () => {\r\n    // console.log(values);\r\n\r\n    if (!selected) {\r\n      createNewTracker(userDb, type, name, description, color, size);\r\n    }\r\n\r\n    if (selected) {\r\n      updateTracker(userDb, selected.id, name, description, color, size);\r\n    }\r\n\r\n    closeForm();\r\n  };\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const changeSize = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSize(event.target.value);\r\n  };\r\n\r\n  const initialValues: any = {\r\n    name: selected ? selected.name : ``,\r\n    description: selected ? selected.description : ``,\r\n  };\r\n\r\n  const formElement: JSX.Element = (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={() => {\r\n        saveForm();\r\n      }}\r\n      validate={(values) => {\r\n        const errors: any = {};\r\n\r\n        if (!values.name) {\r\n          errors.name = `Required`;\r\n          setName(`Give me a cool name`);\r\n        } else if (values.name.length > 15) {\r\n          errors.name = \"Must be 15 characters or less\";\r\n        } else if (values.name.length < 4) {\r\n          errors.name = \"Must be 4 characters or more\";\r\n        }\r\n        setErrors(errors);\r\n        setName(values.name);\r\n        setDescription(values.description);\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form className={classes.Form}>\r\n          <div style={{ display: page === 1 ? `unset` : `none` }}>\r\n            <div className={classes.Field}>\r\n              <label>Name:</label>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"e.g Watching T.V...\"\r\n              />\r\n            </div>\r\n            <p style={{ color: `red` }}>{errors.name}</p>\r\n            <Divider variant=\"middle\" />\r\n            <div className={classes.Field}>\r\n              <label>Description:</label>\r\n              <Field\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                name=\"description\"\r\n                placeholder=\"e.g The amount of time i spend on watching T.V...\"\r\n              />\r\n            </div>\r\n            <Divider variant=\"middle\" />\r\n            <SliderPicker\r\n              onChangeComplete={handleChangeComplete}\r\n              color={color}\r\n            />\r\n          </div>\r\n          <div style={{ display: page === 2 ? `unset` : `none` }}>\r\n            <div className={classes.Field}>\r\n              <label>Choose a step size:</label>\r\n              <TextField\r\n                value={size}\r\n                onChange={changeSize}\r\n                id=\"standard-number\"\r\n                type=\"number\"\r\n                // defaultValue={size}\r\n                variant=\"outlined\"\r\n                style={{ width: `100px` }}\r\n              />\r\n            </div>\r\n            <p style={{ color: `red` }}>{errors.name}</p>\r\n            <Divider variant=\"middle\" />\r\n            {/* <Divider variant=\"middle\" /> */}\r\n            {/* <div className={classes.Field}>\r\n              <label>Is it a part of a Survey?</label>\r\n              <Select value=\"\" onChange={() => {}}>\r\n                <MenuItem value=\"group1\">survey 1</MenuItem>\r\n                <MenuItem\r\n                  value=\"\r\n                survey2\"\r\n                >\r\n                  survey 2\r\n                </MenuItem>\r\n              </Select>\r\n            </div> */}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeForm}>\r\n      <Modal.Header>\r\n        <FakeTracker type={type} color={color} name={name} size={+size!} />\r\n      </Modal.Header>\r\n      <Modal.Body>{formElement}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeForm} variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Pagination count={pages} page={page} onChange={changePage} />\r\n        <Button\r\n          disabled={!!errors.name || color === `#000000`}\r\n          variant=\"primary\"\r\n          onClick={saveForm}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default TrackersFormModal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Tracker, CheckerType, RaterType } from \"../../Types\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classes from \"./SurveyForm.module.css\";\r\n// import { Formik, Form, Field } from \"formik\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  TextField,\r\n  Divider,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst not = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => !b.includes(value));\r\n};\r\n\r\nconst intersection = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => b.includes(value));\r\n};\r\n\r\nconst union = (a: Tracker[], b: Tracker[]) => {\r\n  return [...a, ...not(b, a)];\r\n};\r\n\r\nconst SurveyFormModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  checkers: CheckerType[];\r\n  raters: RaterType[];\r\n}> = React.memo(({ show, closeHandler, checkers, raters }) => {\r\n  const [checked, setChecked] = useState<Tracker[]>([]);\r\n  const [left, setLeft] = useState<Tracker[]>([...checkers, ...raters]);\r\n  const [right, setRight] = useState<Tracker[]>([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n  const [expanded, setExpanded] = useState<string[]>([`raters`, `checkers`]);\r\n  const [name, setName] = useState(\"\");\r\n  const userDb = useContext(DbContext);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    closeHandler();\r\n  };\r\n\r\n  const saveForm = () => {\r\n    userDb!\r\n      .collection(`surveys`)\r\n      .add({\r\n        name: name,\r\n        trackers: right.map((tracker) => tracker.id),\r\n      })\r\n      .then(() => {\r\n        closeForm();\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleToggle = (value: Tracker) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const numberOfChecked = (items: Tracker[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: Tracker[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const expand = (event: any, nodeIds: string[]) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: Tracker[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.CardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <TreeView\r\n        defaultCollapseIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-up`} />\r\n          </svg>\r\n        }\r\n        defaultExpandIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-down`} />\r\n          </svg>\r\n        }\r\n        expanded={expanded}\r\n        onNodeToggle={expand}\r\n      >\r\n        <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `rater`)\r\n            .map((rater) => {\r\n              return (\r\n                <ListItem\r\n                  key={rater.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(rater)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox checked={checked.includes(rater)} disableRipple />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={rater.id} primary={rater.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `checker`)\r\n            .map((checker) => {\r\n              return (\r\n                <ListItem\r\n                  key={checker.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(checker)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      checked={checked.includes(checker)}\r\n                      disableRipple\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={checker.id} primary={checker.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Card>\r\n  );\r\n\r\n  const formElement: JSX.Element = (\r\n    <form className={classes.Form}>\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Name\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        error={name.length < 4 && name.length > 0}\r\n      />\r\n      <div className={classes.Transfer}>\r\n        {customList(\"Choices\", left)}\r\n        <div className={classes.Movers}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </div>\r\n        {customList(\"Chosen\", right)}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeForm}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Body>{formElement}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeForm}>Close</Button>\r\n        <Button onClick={saveForm}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default SurveyFormModal;\r\n","// import * as types from \"./CreateTrackers\";\r\n\r\nexport const reletiveTimestampToString = (timestamp: number) => {\r\n  if (timestamp < 0) return `--:--:--`;\r\n\r\n  const outputInSeconds: number = Math.round(timestamp / 1000);\r\n\r\n  const seconds = (outputInSeconds! % 60).toString().padStart(2, `0`);\r\n  const minutes = Math.floor((outputInSeconds! / 60) % 60)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n  const hours = Math.floor(outputInSeconds! / 3600)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n\r\nexport const absoluteTimestampToString = (timestamp: number) => {\r\n  const date = new Date(timestamp);\r\n\r\n  const seconds = date.getSeconds().toString().padStart(2, `0`);\r\n  const minutes = date.getMinutes().toString().padStart(2, `0`);\r\n  const hours = date.getHours().toString().padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { reletiveTimestampToString } from \"../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst Clock: React.FC<{\r\n  accum: number;\r\n  isRunning: boolean;\r\n  lastEntry: number;\r\n}> = ({ accum, isRunning, lastEntry }) => {\r\n  const [output, setOutput] = useState<string>(`00:00:00`);\r\n  const [gap, setGap] = useState<number>(0);\r\n\r\n  const tick = useCallback(() => {\r\n    setGap(Date.now() - lastEntry);\r\n  }, [lastEntry]);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (!isRunning) {\r\n      setGap(0);\r\n    }\r\n\r\n    if (isRunning) {\r\n      tick();\r\n\r\n      interval = window.setInterval(function () {\r\n        tick();\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    };\r\n  }, [isRunning, tick]);\r\n\r\n  useEffect(() => {\r\n    const outputInMilliSecs: number = gap + accum;\r\n\r\n    const outputString = reletiveTimestampToString(outputInMilliSecs);\r\n\r\n    setOutput(outputString);\r\n  }, [accum, lastEntry, gap]);\r\n\r\n  return (\r\n    <div>\r\n      <h3\r\n        style={{\r\n          margin: `auto auto`,\r\n          display: `block`,\r\n          textAlign: `center`,\r\n          fontWeight: \"lighter\",\r\n        }}\r\n      >\r\n        {output}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  chartData: types.Datasets;\r\n}> = React.memo(({ chartData }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n        options: {\r\n          aspectRatio: 8,\r\n          scales: {\r\n            x: {\r\n              stacked: true,\r\n              max: 24,\r\n              grid: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                stepSize: 4,\r\n                callback: (value: string) => {\r\n                  console.log(value);\r\n                  return `${value}:00`;\r\n                },\r\n              },\r\n            },\r\n            y: {\r\n              stacked: true,\r\n            },\r\n          },\r\n          indexAxis: \"y\",\r\n          onClick: (e: any) => {\r\n            const data: any = e.chart.config._config.data.datasets;\r\n            console.log(data);\r\n            const dataset: number = e.chart._active[0]?.datasetIndex;\r\n            if (!dataset) return;\r\n            const index: number = e.chart._active[0]?.index;\r\n            console.log(dataset);\r\n            console.log(index);\r\n\r\n            console.log(data[dataset].data[index]);\r\n          },\r\n          elements: {\r\n            bar: {\r\n              borderWidth: 1,\r\n              barThickness: 2,\r\n            },\r\n          },\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(`current`);\r\n      chartRef.current.data = {\r\n        labels: [``],\r\n        datasets: chartData,\r\n      };\r\n      chartRef.current.update();\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./BarChartPreAmp.module.css\";\r\nimport { Stopwatch } from \"../../../HalperFunctions/CreateTrackers\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst BarChartPreamp: React.FC<{\r\n  stopwatch: Stopwatch;\r\n  entries: types.StopwatchEntry[];\r\n  date: Date;\r\n}> = React.memo(({ stopwatch, entries, date }) => {\r\n  const [nowTimestamp, setNowTimestamp] = useState<number>(Date.now());\r\n  const [datasets, setDatasets] = useState<types.Datasets | null>(null);\r\n\r\n  useEffect(() => {\r\n    const datasetsArray: types.Datasets = [];\r\n\r\n    const dayStart = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const dayEnd = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + 1\r\n    ).getTime();\r\n\r\n    const stopwatchEntries = [\r\n      dayStart,\r\n      ...entries.map((entry) => entry.timestamp),\r\n    ];\r\n\r\n    console.log(stopwatchEntries);\r\n    const currentTimestamp: number = nowTimestamp;\r\n\r\n    stopwatchEntries.push(\r\n      currentTimestamp < dayEnd ? currentTimestamp : dayEnd\r\n    );\r\n\r\n    const data: number[] = [];\r\n    let a: number | null = null;\r\n\r\n    stopwatchEntries.forEach((entry) => {\r\n      if (a) {\r\n        data.push((entry - a) / (1000 * 60 * 60));\r\n      }\r\n      a = entry;\r\n    });\r\n\r\n    // console.log(data);\r\n\r\n    const setBackgroundColor = (index: number) => {\r\n      let color: string = `rgb(225, 225, 225)`;\r\n\r\n      if (index % 2) {\r\n        color = stopwatch.color;\r\n      }\r\n\r\n      return color;\r\n    };\r\n\r\n    data.forEach((entry, index) => {\r\n      datasetsArray.push({\r\n        data: [entry],\r\n        backgroundColor: setBackgroundColor(index),\r\n      });\r\n    });\r\n\r\n    console.log(datasetsArray);\r\n\r\n    setDatasets(datasetsArray);\r\n  }, [stopwatch, entries, date, nowTimestamp]);\r\n\r\n  const tick = useCallback(() => {\r\n    // console.log(`tick`);\r\n    setNowTimestamp(Date.now());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (!isRunning) return;\r\n\r\n    const interval = setInterval(() => {\r\n      tick();\r\n    }, 1000 * 60);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [tick]);\r\n\r\n  let barChart = <p>loading...</p>;\r\n\r\n  if (datasets) {\r\n    barChart = (\r\n      <div className={classes.BarChartPreamp}>\r\n        <BarChart chartData={datasets} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return barChart;\r\n});\r\n\r\nexport default BarChartPreamp;\r\n","import * as types from \"../Types\";\r\n\r\nexport const rawEntriesToPairs = (\r\n  entries: types.StopwatchEntry[],\r\n  stopwatchId: string,\r\n  today: Date,\r\n  date: Date\r\n) => {\r\n  const biEntries: types.ArrangedEntries = [];\r\n\r\n  // const dayStart = new Date(\r\n  //   entries[0].year,\r\n  //   entries[0].month,\r\n  //   entries[0].day,\r\n  //   0\r\n  // ).getTime();\r\n  const dayStart = date.getTime();\r\n\r\n  const dayEnd = new Date(\r\n    entries[0].year,\r\n    entries[0].month,\r\n    entries[0].day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  let a: types.StopwatchEntry | null = null;\r\n  let accum: number = 0;\r\n  let fromLimit: number = dayStart;\r\n  let count: number = 0;\r\n\r\n  entries.forEach((entry, index) => {\r\n    //   console.log(entry);\r\n\r\n    if (index % 2) {\r\n      biEntries.pop();\r\n      const subTotal = entry.timestamp - a!.timestamp;\r\n      accum += subTotal;\r\n\r\n      const from = {\r\n        timestamp: a!.timestamp,\r\n        id: a!.entryId,\r\n        limit: fromLimit,\r\n      };\r\n      const to = {\r\n        timestamp: entry.timestamp,\r\n        id: entry.entryId,\r\n        limit: null,\r\n      };\r\n\r\n      fromLimit = to.timestamp;\r\n\r\n      const biEntry: types.CompleteEntry = {\r\n        stopwatchId: stopwatchId,\r\n        from: from,\r\n        to: to,\r\n        subTotal: subTotal,\r\n        total: accum,\r\n        index: count,\r\n      };\r\n      biEntries.push(biEntry);\r\n    }\r\n\r\n    if (!(index % 2)) {\r\n      a = entry;\r\n      count++;\r\n\r\n      if (date.getTime() === today.getTime()) {\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: 0,\r\n          },\r\n          to: {\r\n            timestamp: 0,\r\n            id: ``,\r\n            limit: 0,\r\n          },\r\n          subTotal: 0,\r\n          total: 0,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n      if (date.getTime() !== today.getTime()) {\r\n        const endOfDay: number = new Date(\r\n          date.getFullYear(),\r\n          date.getMonth(),\r\n          date.getDate() + 1,\r\n          0,\r\n          0,\r\n          -1\r\n        ).getTime();\r\n\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: date.getTime(),\r\n          },\r\n          to: {\r\n            timestamp: endOfDay,\r\n            id: ``,\r\n            limit: endOfDay,\r\n          },\r\n          subTotal: endOfDay - entry.timestamp,\r\n          total: accum + endOfDay - entry.timestamp,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n    }\r\n  });\r\n\r\n  const reversed = biEntries.reverse();\r\n  let toLimit: number = dayEnd;\r\n\r\n  reversed.forEach((entry) => {\r\n    // entry.to!.limit = toLimit;\r\n    if (entry.to) {\r\n      entry.to.limit = toLimit;\r\n    }\r\n\r\n    toLimit = entry.from.timestamp;\r\n  });\r\n\r\n  return reversed;\r\n};\r\n\r\nexport const createFakeLastEntry = (entry: types.StopwatchEntry) => {\r\n  const newTimeStamp: number = new Date(\r\n    entry.year,\r\n    entry.month,\r\n    entry.day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  const newEntry = {\r\n    ...entry,\r\n    timestamp: newTimeStamp,\r\n  };\r\n\r\n  return newEntry;\r\n};\r\n\r\nexport async function getEntries(userDb: any, dates: types.CustomDate[]) {\r\n  const promises: Promise<any>[] = [];\r\n\r\n  dates.forEach((date) => {\r\n    const dailyEntries = createPromise(userDb, date.year, date.month, date.day);\r\n\r\n    promises.push(dailyEntries);\r\n  });\r\n\r\n  const responses = await Promise.all(promises);\r\n\r\n  return responses.map((res) => res.docs);\r\n}\r\n\r\nconst createPromise = (\r\n  userDb: any,\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n) => {\r\n  return userDb!\r\n    .collection(`entries`)\r\n    .where(\"year\", \"==\", year)\r\n    .where(\"month\", \"==\", month)\r\n    .where(\"day\", \"==\", day)\r\n    .orderBy(\"timestamp\", \"asc\")\r\n    .get();\r\n};\r\n\r\nexport function createDates(startDate: Date, days: number) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = startDate.getFullYear();\r\n  const month: number = startDate.getMonth();\r\n\r\n  for (let i = 0; i < days; i++) {\r\n    const day: number = startDate.getDate() - i;\r\n\r\n    if (day > 0) {\r\n      dates.push({\r\n        year: year,\r\n        month: month,\r\n        day: day,\r\n      });\r\n    }\r\n\r\n    if (day <= 0) {\r\n      const newDate: Date = new Date(year, month, day);\r\n\r\n      const newDay: number = newDate.getDate();\r\n      const newMonth: number = newDate.getMonth();\r\n      const newYear: number = newDate.getFullYear();\r\n\r\n      dates.push({\r\n        year: newYear,\r\n        month: newMonth,\r\n        day: newDay,\r\n      });\r\n    }\r\n  }\r\n\r\n  return dates;\r\n}\r\n\r\nexport function createDatesFromRange(dateRange: Date[]) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = dateRange[1].getFullYear();\r\n  const month: number = dateRange[1].getMonth();\r\n\r\n  // console.log(dateRange[0]);\r\n  // console.log(dateRange[1]);\r\n\r\n  const days: number =\r\n    (dateRange[1].getTime() - dateRange[0].getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n  // console.log(Math.round(days));\r\n\r\n  for (let i = 0; i < Math.round(days); i++) {\r\n    const day: number = dateRange[1].getDate() - i;\r\n\r\n    const newDate: Date = new Date(year, month, day);\r\n\r\n    const newDay: number = newDate.getDate();\r\n    const newMonth: number = newDate.getMonth();\r\n    const newYear: number = newDate.getFullYear();\r\n\r\n    dates.push({\r\n      year: newYear,\r\n      month: newMonth,\r\n      day: newDay,\r\n    });\r\n    // }\r\n  }\r\n\r\n  return dates;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./EntryEditForm.module.css\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as types from \"../../../Types\";\r\nimport {\r\n  timeStringFromTimestamp,\r\n  stringPlusDayToTimestamp,\r\n} from \"../../../HalperFunctions/General\";\r\nimport { reletiveTimestampToString } from \"../../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst EntryEditForm: React.FC<{\r\n  entry: types.CompleteEntry | null;\r\n  submitHandler: (newFrom: number, newTo: number) => void;\r\n}> = React.memo(({ entry, submitHandler }) => {\r\n  const [newFrom, setNewFrom] = useState<number>(entry!.from.timestamp);\r\n  const [newTo, setNewTo] = useState<number>(entry!.to.timestamp);\r\n  const [newSubTotal, setNewSubTotal] = useState<number>(newTo - newFrom);\r\n\r\n  const fromInitValue = new Date(entry!.from.timestamp);\r\n  const toInitValue = new Date(entry!.to.timestamp);\r\n\r\n  const initialValues: any = {\r\n    fromHour: fromInitValue.getHours(),\r\n    fromMinute: fromInitValue.getMinutes(),\r\n    fromSecond: fromInitValue.getSeconds(),\r\n    toHour: toInitValue.getHours(),\r\n    toMinute: toInitValue.getMinutes(),\r\n    toSecond: toInitValue.getSeconds(),\r\n  };\r\n\r\n  // console.log(`rendering form`, entry);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={(values) => {}}\r\n        validate={(values) => {\r\n          const errors: types.inputEditError = {\r\n            to: false,\r\n            from: false,\r\n          };\r\n\r\n          const fromInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.fromHour,\r\n            values.fromMinute,\r\n            values.fromSecond,\r\n            entry!.from.timestamp\r\n          );\r\n\r\n          const toInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.toHour,\r\n            values.toMinute,\r\n            values.toSecond,\r\n            entry!.to.timestamp\r\n          );\r\n\r\n          const isFromBiggerThanLimit: boolean =\r\n            fromInputTimestamp >= entry!.from.limit!;\r\n\r\n          const isFromSmallerThanTo: boolean =\r\n            fromInputTimestamp <= toInputTimestamp;\r\n\r\n          const isToSmallerThanLimit: boolean =\r\n            toInputTimestamp <= entry!.to.limit!;\r\n\r\n          const isToBiggerThanFrom: boolean =\r\n            toInputTimestamp > fromInputTimestamp;\r\n\r\n          if (!isFromBiggerThanLimit || !isFromSmallerThanTo) {\r\n            errors.from = true;\r\n          }\r\n\r\n          if (!isToBiggerThanFrom || !isToSmallerThanLimit) {\r\n            errors.to = true;\r\n          }\r\n\r\n          setNewFrom(fromInputTimestamp);\r\n          setNewTo(toInputTimestamp);\r\n          setNewSubTotal(toInputTimestamp - fromInputTimestamp);\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        {({ errors, values }) => (\r\n          <Form className={classes.Form}>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.from ? `red` : `green` }}\r\n            >\r\n              <label>From:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"fromHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                entry!.from.limit!\r\n              )} and ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.toHour,\r\n                  values.toMinute,\r\n                  values.toSecond,\r\n                  entry!.to.timestamp\r\n                )\r\n              )}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.to ? `red` : `green` }}\r\n            >\r\n              <label>To:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"toHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.fromHour,\r\n                  values.fromMinute,\r\n                  values.fromSecond,\r\n                  entry!.from.timestamp\r\n                )\r\n              )} and ${timeStringFromTimestamp(entry!.to.limit!)}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{\r\n                width: `100%`,\r\n                borderColor: errors.from ? `red` : `green`,\r\n              }}\r\n            >\r\n              <p style={{ fontWeight: \"normal\", width: `100%` }}>\r\n                Sub-Total: {reletiveTimestampToString(newSubTotal)}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => submitHandler(newFrom, newTo)}\r\n              type=\"submit\"\r\n              disabled={!!errors.to || !!errors.from}\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default EntryEditForm;\r\n","import React, { useContext } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport * as types from \"../../../Types\";\r\nimport EntryEditForm from \"../StopwatchEntries/EntryEditForm\";\r\nimport { db } from \"../../../Firebase\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\n// import DateContext from \"../../../Context/DateContext\";\r\n\r\nconst EntryEditModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  entry: types.CompleteEntry | null;\r\n  newEntryHandler: (timestamp: number) => void;\r\n  editHandler: (batch: types.Batch) => void;\r\n}> = ({ show, closeHandler, editHandler, entry, newEntryHandler }) => {\r\n  const userDb = useContext(DbContext);\r\n\r\n  // console.log(`rendering entry edit modal`, entry);\r\n\r\n  const submit = (from: number, to: number) => {\r\n    if (!entry?.index) {\r\n      newEntryHandler(from);\r\n      newEntryHandler(to);\r\n    } else {\r\n      changeEntry(from, to);\r\n    }\r\n  };\r\n\r\n  const changeEntry = (from: number, to: number) => {\r\n    console.log(`change`);\r\n\r\n    const batch = db.batch();\r\n\r\n    const fromRef = userDb!.collection(`entries`).doc(entry!.from.id);\r\n    batch.update(fromRef, { timestamp: from });\r\n\r\n    if (entry!.to.id) {\r\n      const toRef = userDb!.collection(`entries`).doc(entry!.to.id);\r\n      batch.update(toRef, { timestamp: to });\r\n    }\r\n\r\n    if (!entry!.to.id) {\r\n      console.log(`do something else`);\r\n      newEntryHandler(to);\r\n    }\r\n\r\n    editHandler(batch);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <Modal.Header>Change the beginning and ending</Modal.Header>\r\n      <Modal.Body>\r\n        <EntryEditForm entry={entry} submitHandler={submit} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EntryEditModal;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport { db } from \"../../../Firebase\";\r\nimport classes from \"./StopwatchEntries.module.css\";\r\n// import Entry from \"./StopwatchEntry/StopwatchEntry\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport BarChartPreamp from \"../../Charts/BarChart/BarChartPreAmp\";\r\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { rawEntriesToPairs } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport {\r\n  absoluteTimestampToString,\r\n  reletiveTimestampToString,\r\n} from \"../../../HalperFunctions/HandleStopwatches\";\r\nimport EntryEditModal from \"../EntryEditModal/EntryEditModal\";\r\n\r\nconst Entries: React.FC<{\r\n  show: boolean;\r\n  entries: types.StopwatchEntry[];\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  closeHandler: () => void;\r\n}> = React.memo(({ entries, stopwatch, date, show, closeHandler }) => {\r\n  const [arrangedEntries, setArrangedEntries] = useState<types.ArrangedEntries>(\r\n    []\r\n  );\r\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\r\n\r\n  const [modalDisplay, setModalDisplay] = useState<boolean>(false);\r\n\r\n  const [EntryToEdit, setEntryToEdit] = useState<types.CompleteEntry | null>(\r\n    null\r\n  );\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  const [rows, setRows] = useState<any[]>([]);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Index\",\r\n      width: 30,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"from\",\r\n      headerName: \"From\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"to\",\r\n      headerName: \"To\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"subTotal\",\r\n      headerName: \"Sub-Total\",\r\n      width: 120,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      width: 100,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n  ];\r\n\r\n  // console.log(`rendering stopwatch entries`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setArrangedEntries([]);\r\n      setRows([]);\r\n      return;\r\n    }\r\n    const pairs = rawEntriesToPairs(entries, stopwatch.id, todaysDate!, date);\r\n    setArrangedEntries(pairs);\r\n    setRows(\r\n      pairs.map((pair, index) => {\r\n        if (!!pair.to.timestamp) {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: absoluteTimestampToString(pair.to.timestamp),\r\n            subTotal: reletiveTimestampToString(pair.subTotal),\r\n            total: reletiveTimestampToString(pair.total),\r\n          };\r\n        } else {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: `now`,\r\n            subTotal: `--:--:--`,\r\n            total: `--:--:--`,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }, [entries, stopwatch, todaysDate, date]);\r\n\r\n  const deleteHandler = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n\r\n    const entriesIds: string[] = [];\r\n    entriesIds.push(arrangedEntries[realIndex].from.id);\r\n\r\n    if (!!arrangedEntries[realIndex].to.id) {\r\n      entriesIds.push(arrangedEntries[realIndex].to!.id);\r\n    }\r\n\r\n    const batch: types.Batch = db.batch();\r\n\r\n    entriesIds.forEach((id) => {\r\n      const ref = userDb!.collection(`entries`).doc(id);\r\n\r\n      batch.delete(ref);\r\n    });\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`deleted`);\r\n        setSelectionModel([]);\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (batch: types.Batch) => {\r\n    console.log(batch);\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`we did it!`);\r\n        setModalDisplay(false);\r\n      })\r\n      .catch((err: any) => {\r\n        if (err) console.log(`try again`, err);\r\n      });\r\n  };\r\n\r\n  const newEntryHandler = (timestamp: number) => {\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const newEntryHandler1 = (from: number, to: number) => {\r\n    let fromSuccess: boolean = false;\r\n    let toSuccess: boolean = false;\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: from,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {\r\n        fromSuccess = true;\r\n        if (toSuccess) {\r\n          setModalDisplay(false);\r\n        }\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: to,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {\r\n        toSuccess = true;\r\n        if (fromSuccess) {\r\n          setModalDisplay(false);\r\n        }\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n    setEntryToEdit(arrangedEntries[realIndex] as types.CompleteEntry);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalDisplay(false);\r\n  };\r\n\r\n  const addNewEntry = () => {\r\n    if (!!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0) return;\r\n\r\n    // console.log(`new`);\r\n    const startOfDay: number = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const endOfDay: number =\r\n      date.getTime() !== todaysDate!.getTime()\r\n        ? new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate() + 1\r\n          ).getTime()\r\n        : Date.now();\r\n\r\n    const from: number = !!arrangedEntries[0]\r\n      ? arrangedEntries[0].to.timestamp\r\n      : startOfDay;\r\n\r\n    const entryToEdit: types.CompleteEntry = {\r\n      stopwatchId: stopwatch.id,\r\n      from: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: from,\r\n      },\r\n      to: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: endOfDay,\r\n      },\r\n      subTotal: 0,\r\n      total: 0,\r\n      index: 0,\r\n    };\r\n\r\n    setEntryToEdit(entryToEdit);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"xl\" show={show} onHide={closeHandler}>\r\n      <Modal.Header>\r\n        <BarChartPreamp entries={entries} stopwatch={stopwatch} date={date} />\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className={classes.Entries}>\r\n          <ButtonGroup variant=\"text\" color=\"primary\">\r\n            <Button\r\n              disabled={selectionModel.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button disabled={selectionModel.length !== 1} onClick={handleOpen}>\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={addNewEntry}\r\n              disabled={\r\n                !!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0\r\n              }\r\n            >\r\n              New Entry\r\n            </Button>\r\n          </ButtonGroup>\r\n          <DataGrid\r\n            rows={rows}\r\n            rowHeight={30}\r\n            columns={columns}\r\n            pageSize={6}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              setSelectionModel(newSelectionModel);\r\n            }}\r\n            selectionModel={selectionModel}\r\n            // disableColumnFilter\r\n            // disableColumnMenu\r\n            headerHeight={40}\r\n          />\r\n          <EntryEditModal\r\n            show={modalDisplay}\r\n            entry={EntryToEdit}\r\n            closeHandler={handleClose}\r\n            newEntryHandler={newEntryHandler}\r\n            editHandler={editHandler}\r\n          />\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default Entries;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./Stopwatch.module.css\";\r\nimport Clock from \"../../Clock/Clock\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport StopwatchEntries from \"../../Entries/StopwatchEntries/StopwatchEntries\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst Stopwatch = (props: Props) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [accum, setAccum] = useState<number>(0);\r\n  const [isRunning, setIsRunning] = useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = useState<number>(Date.now());\r\n\r\n  const todaysDate = useContext(DateContext);\r\n  const userDb = useContext(DbContext);\r\n\r\n  const [entries, setEntries] = useState<types.StopwatchEntry[]>([]);\r\n\r\n  useEffect(() => {\r\n    setEntries([]);\r\n    setIsRunning(false);\r\n    setAccum(0);\r\n\r\n    console.log(userDb, props.user);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.stopwatch.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      const newEntries: types.StopwatchEntry[] = [];\r\n\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `stopwatchEntry`,\r\n        };\r\n        newEntries.push(entry);\r\n      });\r\n\r\n      setEntries(newEntries);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.stopwatch.id, props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setIsRunning(false);\r\n      setAccum(0);\r\n      return;\r\n    }\r\n\r\n    const even: boolean = !(entries.length % 2);\r\n    setIsRunning(!even);\r\n\r\n    const entriesTimestamps: number[] = entries.map((entry) => entry.timestamp);\r\n\r\n    if (!even) {\r\n      // console.log(`i shouldn't see this`);\r\n      if (props.date.getTime() === todaysDate!.getTime()) {\r\n        // console.log(`today`);\r\n        const firstEntry = entriesTimestamps.pop();\r\n        setLastEntry(firstEntry!);\r\n      }\r\n\r\n      if (props.date.getTime() !== todaysDate!.getTime()) {\r\n        setIsRunning(false);\r\n        entriesTimestamps.push(\r\n          new Date(\r\n            props.date.getFullYear(),\r\n            props.date.getMonth(),\r\n            props.date.getDate() + 1,\r\n            0,\r\n            0,\r\n            -1\r\n          ).getTime()\r\n        );\r\n      }\r\n    }\r\n\r\n    // console.log(entriesTimestamps);\r\n\r\n    let accum: number = 0;\r\n\r\n    entriesTimestamps.forEach((entry, index) => {\r\n      if (!(index % 2)) {\r\n        accum -= entry;\r\n      } else {\r\n        accum += entry;\r\n      }\r\n    });\r\n\r\n    setAccum(accum);\r\n  }, [entries, props.date, todaysDate]);\r\n\r\n  const mainButtonHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: props.stopwatch.id,\r\n        year: todaysDate!.getFullYear(),\r\n        month: todaysDate!.getMonth(),\r\n        day: todaysDate!.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.stopwatch.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={classes.Stopwatch}\r\n      style={{\r\n        borderRightColor: props.isSelected\r\n          ? props.stopwatch.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderTopColor: props.isSelected\r\n          ? props.stopwatch.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderBottomColor: props.isSelected\r\n          ? props.stopwatch.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderLeftColor: props.stopwatch.color,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <button\r\n          className={`${classes.MainButton}     main-button`}\r\n          onClick={mainButtonHandler}\r\n          disabled={props.date.getTime() !== todaysDate!.getTime()}\r\n        >\r\n          <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n            <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n          </svg>\r\n        </button>\r\n        <h5>{props.stopwatch.name}</h5>\r\n        <Clock isRunning={isRunning} accum={accum} lastEntry={lastEntry} />\r\n        <button\r\n          onClick={() => setExpanded(!expanded)}\r\n          className={`${classes.ExpandButton}     nothing`}\r\n        >\r\n          <svg width=\"24\" height=\"24\" fill=\"currentColor\">\r\n            <use href={`${icons}#list-ul`} />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <StopwatchEntries\r\n        show={expanded}\r\n        entries={entries}\r\n        stopwatch={props.stopwatch}\r\n        date={props.date}\r\n        closeHandler={() => setExpanded(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Stopwatch);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport classes from \"./Rater.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nconst Rater = (props: Props) => {\r\n  const [value, setValue] = useState<number | null>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.RaterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setValue(0);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.rater.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          value: data.value,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `raterEntry`,\r\n        };\r\n        setEntry(entry);\r\n        setValue(entry.value);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.rater.id, props.user]);\r\n\r\n  const rateHandler = (event: React.ChangeEvent<{}>, value: number | null) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          value: value,\r\n          timestamp: timestamp,\r\n          trackerId: props.rater.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `raterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ value: value })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.rater.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      style={{\r\n        borderRightColor: props.isSelected\r\n          ? props.rater.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderTopColor: props.isSelected\r\n          ? props.rater.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderBottomColor: props.isSelected\r\n          ? props.rater.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderLeftColor: props.rater.color,\r\n      }}\r\n      className={classes.Rater}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5>{props.rater.name}</h5>\r\n        <Rating\r\n          className={classes.Rating}\r\n          name={props.rater.id}\r\n          value={value}\r\n          onChange={rateHandler}\r\n          size=\"large\"\r\n          precision={0.5}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  rater: types.RaterType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Rater);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./Checker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nconst Checker = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CheckerEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setIsChecked(false);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.checker.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `checkerEntry`,\r\n          checked: data.checked,\r\n        };\r\n\r\n        setEntry(entry);\r\n        setIsChecked(data.checked);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.checker.id, props.user]);\r\n\r\n  const checkerHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    const newIsChecked: boolean = isChecked ? false : true;\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timestamp,\r\n          trackerId: props.checker.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `checkerEntry`,\r\n          checked: newIsChecked,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ checked: newIsChecked })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n\r\n    props.selector(props.checker.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={classes.Checker}\r\n      style={{\r\n        borderRightColor: props.isSelected\r\n          ? props.checker.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderTopColor: props.isSelected\r\n          ? props.checker.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderBottomColor: props.isSelected\r\n          ? props.checker.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderLeftColor: props.checker.color,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5>{props.checker.name}</h5>\r\n        <Checkbox\r\n          checked={isChecked}\r\n          onChange={checkerHandler}\r\n          className=\"main-button\"\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  checker: types.CheckerType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Checker);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport classes from \"./Counter.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n// import Aux from \"../../../hoc/Auxiliary\";\r\n\r\nconst Counter = (props: Props) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CounterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setCount(0);\r\n    setEntry(null);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.counter.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          count: data.count,\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `counterEntry`,\r\n        };\r\n        setCount(data.count);\r\n        setEntry(entry);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.counter.id, props.user]);\r\n\r\n  const changeCount = (event: any) => {\r\n    const isPlus = !!event.target.closest(`.plus`);\r\n\r\n    let newCount: number;\r\n\r\n    if (isPlus) {\r\n      newCount = count + props.counter.size;\r\n    } else {\r\n      newCount =\r\n        count - props.counter.size < 0 ? 0 : count - props.counter.size;\r\n    }\r\n\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          count: newCount,\r\n          timestamp: timestamp,\r\n          trackerId: props.counter.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `counterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ count: newCount })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.counter.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={classes.Counter}\r\n      style={{\r\n        borderRightColor: props.isSelected\r\n          ? props.counter.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderTopColor: props.isSelected\r\n          ? props.counter.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderBottomColor: props.isSelected\r\n          ? props.counter.color\r\n          : `rgb(128, 128, 128)`,\r\n        borderLeftColor: props.counter.color,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5>{props.counter.name}</h5>\r\n        <ButtonGroup className={classes.Buttons} color=\"primary\">\r\n          <Button className=\"main-button   plus\" onClick={changeCount}>\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#plus`} />\r\n            </svg>\r\n          </Button>\r\n          <Button className=\"main-button\" color=\"primary\">\r\n            {count}\r\n          </Button>\r\n          <Button\r\n            className=\"main-button   minus\"\r\n            onClick={changeCount}\r\n            disabled={count === 0}\r\n          >\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#dash`} />\r\n            </svg>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  counter: types.CounterType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Counter);\r\n","import React, { useState, useContext } from \"react\";\r\nimport TrackersFormModal from \"../../Components/TrackersForm/TrackersFormModal\";\r\nimport SurveyFormModal from \"../../Components/SurveyForm/SurveyForm\";\r\nimport classes from \"./Trackers.module.css\";\r\nimport StopwatchElement from \"../../Components/Tracker/Stopwatch/Stopwatch\";\r\nimport RaterElement from \"../../Components/Tracker/Rater/Rater\";\r\nimport CheckerElement from \"../../Components/Tracker/Checker/Checker\";\r\nimport CounterElement from \"../../Components/Tracker/Counter/Counter\";\r\nimport * as types from \"../../Types\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport { deleteTracker } from \"../../HalperFunctions/CreateTrackers\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport { Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\n\r\n// import Surveys from \"../../Components/Surveys/Surveys\";\r\n\r\nconst Trackers: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const [modalTrackerDisplay, setModalTrackerDisplay] =\r\n    useState<boolean>(false);\r\n  const [modalSurveyDisplay, setModalSurveyDisplay] = useState<boolean>(false);\r\n  const todaysDate = useContext(DateContext);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [displayMenu, setDisplayMenu] = useState<boolean>(false);\r\n\r\n  const [type, setType] = useState<string>(``);\r\n  const [selected, setSelected] = useState<types.Tracker | null>(null);\r\n  const [date, setDate] = useState<Date>(todaysDate!);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDate(todaysDate!);\r\n  }, [todaysDate]);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setDisplayMenu(true);\r\n  };\r\n\r\n  const handleChoose = (event: any) => {\r\n    const type: string = event.target!.outerText.toLowerCase();\r\n    setDisplayMenu(false);\r\n    setType(type);\r\n    setSelected(null);\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalTrackerDisplay(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteTracker(userDb!, selected!);\r\n    setSelected(null);\r\n  };\r\n\r\n  const selectHandler = (id: string) => {\r\n    if (id === selected?.id) {\r\n      setSelected(null);\r\n      return;\r\n    }\r\n    const trackers: types.Tracker[] = [\r\n      ...stopwatches,\r\n      ...counters,\r\n      ...raters,\r\n      ...checkers,\r\n    ];\r\n    const tracker: types.Tracker = trackers.filter(\r\n      (tracker) => tracker.id === id\r\n    )[0];\r\n    setSelected(tracker);\r\n    setType(tracker.type);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.ControlPanel}>\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n        >\r\n          New\r\n        </Button>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={displayMenu}\r\n          onClose={() => setDisplayMenu(false)}\r\n        >\r\n          <MenuItem onClick={handleChoose}>Stopwatch</MenuItem>\r\n          <MenuItem onClick={handleChoose}>Checker</MenuItem>\r\n          <MenuItem onClick={handleChoose}>Rater</MenuItem>\r\n          <MenuItem onClick={handleChoose}>Counter</MenuItem>\r\n        </Menu>\r\n        <Button onClick={handleEdit} disabled={!selected}>\r\n          Edit\r\n        </Button>\r\n        <Button onClick={handleDelete} disabled={!selected}>\r\n          Delete\r\n        </Button>\r\n        <DatePicker\r\n          maxDate={todaysDate!}\r\n          value={date}\r\n          locale=\"en-EN\"\r\n          onChange={setDate}\r\n          clearIcon={null}\r\n        />\r\n      </div>\r\n      <div className={classes.Trackers}>\r\n        {stopwatches.map((stopwatch) => (\r\n          <StopwatchElement\r\n            key={stopwatch.id}\r\n            stopwatch={stopwatch}\r\n            date={date}\r\n            selector={selectHandler}\r\n            isSelected={selected?.id === stopwatch.id}\r\n          />\r\n        ))}\r\n        {raters.map((rater) => (\r\n          <RaterElement\r\n            isSelected={selected?.id === rater.id}\r\n            key={rater.id}\r\n            rater={rater}\r\n            selector={selectHandler}\r\n            date={date}\r\n          />\r\n        ))}\r\n        {checkers.map((checker) => (\r\n          <CheckerElement\r\n            selector={selectHandler}\r\n            isSelected={selected?.id === checker.id}\r\n            key={checker.id}\r\n            checker={checker}\r\n            date={date}\r\n          />\r\n        ))}\r\n        {counters.map((counter) => (\r\n          <CounterElement\r\n            key={counter.id}\r\n            selector={selectHandler}\r\n            isSelected={selected?.id === counter.id}\r\n            counter={counter}\r\n            date={date}\r\n          />\r\n        ))}\r\n        <TrackersFormModal\r\n          selected={selected}\r\n          show={modalTrackerDisplay}\r\n          closeHandler={handleClose}\r\n          type={type}\r\n        />\r\n        <SurveyFormModal\r\n          show={modalSurveyDisplay}\r\n          closeHandler={() => setModalSurveyDisplay(false)}\r\n          checkers={checkers}\r\n          raters={raters}\r\n        />\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default Trackers;\r\n","import React from \"react\";\r\nimport classes from \"./Label.module.css\";\r\n\r\nconst Label: React.FC<{\r\n  color: string;\r\n  name: string;\r\n  id: string;\r\n  selected: boolean;\r\n  selectHandler: (stopwatchId: string) => void;\r\n}> = React.memo(({ color, name, selectHandler, id, selected }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectHandler(id)}\r\n      className={classes.Label}\r\n      // style={{ transform: selected ? `translateX(20px)` : `none` }}\r\n    >\r\n      <div\r\n        // className=\"select\"\r\n        style={{\r\n          backgroundColor: selected ? color : `transparent`,\r\n          borderColor: color,\r\n        }}\r\n      ></div>\r\n      <p>{name}</p>\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Label;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./TrackerSelector.module.css\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Label from \"./Label/Label\";\r\nimport {\r\n  RaterType,\r\n  StopwatchType,\r\n  CheckerType,\r\n  Tracker,\r\n  CounterType,\r\n} from \"../../Types\";\r\n\r\nconst TrackerSelector: React.FC<{\r\n  raters: RaterType[];\r\n  stopwatches: StopwatchType[];\r\n  checkers: CheckerType[];\r\n  counters: CounterType[];\r\n  selectedTrackers: Tracker[];\r\n  handler: (trackerId: string) => void;\r\n}> = React.memo(\r\n  ({ checkers, raters, stopwatches, handler, selectedTrackers, counters }) => {\r\n    const [expanded, setExpanded] = useState<string[]>([\r\n      // `stopwatches`,\r\n      `raters`,\r\n      // `checkers`,\r\n      // `counters`,\r\n    ]);\r\n\r\n    const handleToggle = (event: any, nodeIds: string[]) => {\r\n      setExpanded(nodeIds);\r\n    };\r\n\r\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\r\n      // console.log(nodeIds);\r\n      handler(nodeIds as unknown as string);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.TrackerSelector}>\r\n        <TreeView\r\n          defaultCollapseIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-up`} />\r\n            </svg>\r\n          }\r\n          defaultExpandIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-down`} />\r\n            </svg>\r\n          }\r\n          expanded={expanded}\r\n          selected={selectedTrackers.map((tracker) => tracker.id)}\r\n          onNodeToggle={handleToggle}\r\n          onNodeSelect={handleSelect}\r\n        >\r\n          <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n            {raters.map((rater) => (\r\n              <Label\r\n                key={rater.id}\r\n                color={rater.color}\r\n                name={rater.name}\r\n                id={rater.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(rater.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!raters.length ? <p>no raters yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"stopwatches\" label=\"Stopwatches\">\r\n            {stopwatches.map((stopwatch) => (\r\n              <Label\r\n                key={stopwatch.id}\r\n                color={stopwatch.color}\r\n                name={stopwatch.name}\r\n                id={stopwatch.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(stopwatch.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!stopwatches.length ? <p>no stopwatches yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n            {checkers.map((checker) => (\r\n              <Label\r\n                key={checker.id}\r\n                color={checker.color}\r\n                name={checker.name}\r\n                id={checker.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(checker.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!checkers.length ? <p>no checkers yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"counters\" label=\"Counters\">\r\n            {counters.map((counter) => (\r\n              <Label\r\n                key={counter.id}\r\n                color={counter.color}\r\n                name={counter.name}\r\n                id={counter.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(counter.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!counters.length ? <p>no counters yet...</p> : null}\r\n          </TreeItem>\r\n        </TreeView>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrackerSelector;\r\n","import React from \"react\";\r\nimport classes from \"./RangeSelector.module.css\";\r\n// import { Tabs, Tab } from \"react-bootstrap\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n// import { StopwatchType } from \"../../../../Types\";\r\n\r\nconst RangeSelector: React.FC<{\r\n  dateRange: Date[];\r\n  setDateRange: (Dates: Date[]) => void;\r\n  todaysDate: Date;\r\n}> = React.memo(({ dateRange, setDateRange, todaysDate }) => {\r\n  return (\r\n    <div className={classes.Selector} style={{ zIndex: 10000 }}>\r\n      <DateRangePicker\r\n        value={dateRange}\r\n        maxDate={todaysDate}\r\n        locale=\"en-EN\"\r\n        onChange={setDateRange}\r\n        clearIcon={null}\r\n        className={classes.Calender}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RangeSelector;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarLineChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  datasets: types.BarChartDataset[];\r\n  labels: string[];\r\n  options: any;\r\n}> = React.memo(({ labels, datasets, options }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(datasets);\r\n      chartRef.current.data = {\r\n        labels: labels,\r\n        datasets: datasets,\r\n      };\r\n\r\n      chartRef.current.options = options;\r\n\r\n      chartRef.current.update();\r\n    }\r\n  }, [datasets, labels, options]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport BarLineChart from \"./BarLineChart\";\r\nimport { createFakeLastEntry } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport hexRgb from \"hex-rgb\";\r\n\r\n// import Checks from \"../../Checks/Checks\";\r\n\r\nconst BarLineChartPreAmp: React.FC<{\r\n  dateStrings: string[];\r\n  stopwatches: types.StopwatchType[];\r\n  stopwatchEntries: Map<string, types.StopwatchEntry[]>;\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  counterEntries: Map<string, types.CounterEntry[]>;\r\n  checkerEntries: Map<string, types.CheckerEntry[]>;\r\n  selectedTrackers: types.Tracker[];\r\n  raterEntries: Map<string, types.RaterEntry[]>;\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    selectedTrackers,\r\n    stopwatchEntries,\r\n    raters,\r\n    raterEntries,\r\n    dateStrings,\r\n    checkers,\r\n    counters,\r\n    counterEntries,\r\n    checkerEntries,\r\n  }) => {\r\n    const [trackerDatasets, setTrackerDatasets] = useState<\r\n      types.BarChartDataset[]\r\n    >([]);\r\n\r\n    const [options, setOptions] = useState<any>({});\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    useEffect(() => {\r\n      const newOptions: any = {\r\n        elements: {\r\n          point: {\r\n            radius: 1,\r\n          },\r\n        },\r\n        interaction: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        stacked: false,\r\n        scales: {\r\n          y: {\r\n            type: \"linear\",\r\n            display: false,\r\n            position: \"left\",\r\n            title: {\r\n              display: false,\r\n              // text: `Hours`,\r\n            },\r\n          },\r\n          y1: {\r\n            suggestedMax: 5,\r\n            ticks: {\r\n              stepSize: 1,\r\n            },\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"right\",\r\n            title: {\r\n              display: true,\r\n              text: `Rating`,\r\n            },\r\n            grid: {\r\n              drawOnChartArea: true,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            enabled: false,\r\n            displayColors: false,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      if (!selectedTrackers.length) {\r\n        setTrackerDatasets([\r\n          {\r\n            data: [0, 0, 0, 0, 0, 0, 0],\r\n            backgroundColor: `black`,\r\n            borderColor: `black`,\r\n            type: `bar`,\r\n            stepped: false,\r\n            order: 1,\r\n            yAxisID: \"y\",\r\n            tension: 1,\r\n          },\r\n        ]);\r\n        setOptions(newOptions);\r\n        return;\r\n      }\r\n\r\n      const datasets: types.BarChartDataset[] = [];\r\n\r\n      stopwatches.forEach((stopwatch) => {\r\n        if (\r\n          !selectedTrackers.map((tracker) => tracker.id).includes(stopwatch.id)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        newOptions.scales.y.display = true;\r\n        newOptions.scales.y.suggestedMax = 4;\r\n        newOptions.scales.y.title = {\r\n          display: true,\r\n          text: `Hours`,\r\n        };\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        stopwatchEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === stopwatch.id\r\n          );\r\n\r\n          if (filteredEntries.length % 2) {\r\n            const lastEntry: types.StopwatchEntry =\r\n              filteredEntries[filteredEntries.length - 1];\r\n\r\n            const dayOfEntry: Date = new Date(\r\n              lastEntry.year,\r\n              lastEntry.month,\r\n              lastEntry.day\r\n            );\r\n\r\n            const isToday: boolean =\r\n              dayOfEntry.getTime() === todaysDate!.getTime();\r\n\r\n            if (!isToday) {\r\n              const fakeLastEntry: types.StopwatchEntry =\r\n                createFakeLastEntry(lastEntry);\r\n              filteredEntries.push(fakeLastEntry);\r\n            }\r\n\r\n            if (isToday) {\r\n              filteredEntries.push({\r\n                ...lastEntry,\r\n                timestamp: Date.now(),\r\n              });\r\n            }\r\n          }\r\n\r\n          let accum: number = 0;\r\n\r\n          filteredEntries.forEach((entry, index) => {\r\n            if (index % 2 === 0) {\r\n              accum -= entry.timestamp;\r\n            } else {\r\n              accum += entry.timestamp;\r\n            }\r\n          });\r\n\r\n          const hours: number = accum / (1000 * 60 * 60);\r\n\r\n          // days.unshift(key);\r\n          totals.unshift(hours);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: stopwatch.color,\r\n          borderColor: stopwatch.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      raters.forEach((rater) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(rater.id))\r\n          return;\r\n\r\n        const totals: (number | null)[] = [];\r\n\r\n        raterEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === rater.id\r\n          );\r\n\r\n          const value: number | undefined =\r\n            filteredEntries[filteredEntries.length - 1]?.value;\r\n          totals.unshift(value ? value : null);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: rater.color,\r\n          borderColor: rater.color,\r\n          type: `line`,\r\n          stepped: false,\r\n          order: 0,\r\n          yAxisID: \"y1\",\r\n          tension: 0.4,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      checkers.forEach((checker) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(checker.id))\r\n          return;\r\n        newOptions.scales.y.display = false;\r\n        newOptions.scales.y1.grid.drawOnChartArea = true;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        checkerEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === checker.id\r\n          )[0];\r\n          // days.unshift(key);\r\n          totals.unshift(filteredEntry?.checked ? 1 : 0);\r\n        });\r\n\r\n        const rgb = hexRgb(checker.color);\r\n        // console.log(rgb);\r\n\r\n        const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: color,\r\n          borderColor: checker.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      counters.forEach((counter) => {\r\n        newOptions.scales.y.display = true;\r\n\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(counter.id))\r\n          return;\r\n        newOptions.scales.y.suggestedMax = counter.size;\r\n        newOptions.scales.y.title.text = `Count`;\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        counterEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === counter.id\r\n          )[0];\r\n          const count: number | undefined = filteredEntry?.count;\r\n          totals.unshift(count ? count : 0);\r\n        });\r\n\r\n        // const rgb = hexRgb(counter.color);\r\n        // // console.log(rgb);\r\n\r\n        // const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: counter.color,\r\n          borderColor: counter.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n\r\n      setTrackerDatasets(datasets);\r\n      setOptions(newOptions);\r\n    }, [\r\n      stopwatchEntries,\r\n      selectedTrackers,\r\n      stopwatches,\r\n      raterEntries,\r\n      raters,\r\n      checkers,\r\n      checkerEntries,\r\n      counters,\r\n      counterEntries,\r\n      todaysDate,\r\n    ]);\r\n\r\n    return (\r\n      <div style={{ display: `flex`, flexFlow: `column` }}>\r\n        <BarLineChart\r\n          datasets={trackerDatasets}\r\n          labels={dateStrings}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BarLineChartPreAmp;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport * as types from \"../../Types\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport BarLineChartPreAmp from \"./BarLineChart/BarLineChartPreAmp\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport {\r\n  getEntries,\r\n  createDatesFromRange,\r\n} from \"../../HalperFunctions/ArrangeEntries\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import FormGroup from \"@material-ui/core/FormGroup\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst ChartSelect: React.FC<{\r\n  dateRange: Date[];\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  selectedTrackers: types.Tracker[];\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    checkers,\r\n    raters,\r\n    selectedTrackers,\r\n    dateRange,\r\n    counters,\r\n  }) => {\r\n    const [stopwatchEntries, setStopwatchEntries] = useState<\r\n      Map<string, types.StopwatchEntry[]>\r\n    >(new Map());\r\n    const [checkerEntries, setCheckerEntries] = useState<\r\n      Map<string, types.CheckerEntry[]>\r\n    >(new Map());\r\n    const [raterEntries, setRaterEntries] = useState<\r\n      Map<string, types.RaterEntry[]>\r\n    >(new Map());\r\n    const [counterEntries, setCounterEntries] = useState<\r\n      Map<string, types.CounterEntry[]>\r\n    >(new Map());\r\n    const [dateStrings, setDateStrings] = useState<string[]>([]);\r\n    const [barLineChart, setBarLineChart] = useState({\r\n      display: true,\r\n      disabled: false,\r\n    });\r\n    const [pieChart, setPieChart] = useState({\r\n      display: false,\r\n      disabled: true,\r\n    });\r\n    const [areaChart] = useState({\r\n      display: false,\r\n      disabled: true,\r\n    });\r\n\r\n    const userDb = useContext(DbContext);\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    console.log(`rendering chart selector`);\r\n\r\n    useEffect(() => {\r\n      const fromTimestamp: number = dateRange[0].getTime();\r\n      const toTimestamp: number = dateRange[1].getTime();\r\n      const dayLengthInMilli: number = 24 * 60 * 60 * 1000;\r\n\r\n      if (fromTimestamp + dayLengthInMilli > toTimestamp) {\r\n        setPieChart({\r\n          display: true,\r\n          disabled: false,\r\n        });\r\n      } else {\r\n        setPieChart({\r\n          display: false,\r\n          disabled: true,\r\n        });\r\n      }\r\n    }, [dateRange]);\r\n\r\n    useEffect(() => {\r\n      const dates = createDatesFromRange(dateRange);\r\n      const dateStrings = dates.map((date) => `${date.day}/${date.month + 1}`);\r\n\r\n      setDateStrings(dateStrings.reverse());\r\n\r\n      const weekMapStopwatch: Map<string, types.StopwatchEntry[]> = new Map();\r\n      const weekMapRater: Map<string, types.RaterEntry[]> = new Map();\r\n      const weekMapChecker: Map<string, types.CheckerEntry[]> = new Map();\r\n      const weekMapCounter: Map<string, types.CounterEntry[]> = new Map();\r\n\r\n      getEntries(userDb, dates).then((res) => {\r\n        res.forEach((day: any[], index) => {\r\n          const stopwatchEntries: types.StopwatchEntry[] = [];\r\n          const raterEntries: types.RaterEntry[] = [];\r\n          const checkerEntries: types.CheckerEntry[] = [];\r\n          const counterEntries: types.CounterEntry[] = [];\r\n\r\n          day.forEach((doc) => {\r\n            const entry: types.Entry = doc.data();\r\n\r\n            switch (entry.type) {\r\n              case `stopwatchEntry`:\r\n                stopwatchEntries.push(entry as types.StopwatchEntry);\r\n                break;\r\n              case `raterEntry`:\r\n                raterEntries.push(entry as types.RaterEntry);\r\n                break;\r\n              case `counterEntry`:\r\n                counterEntries.push(entry as types.CounterEntry);\r\n                break;\r\n              default:\r\n                checkerEntries.push(entry as types.CheckerEntry);\r\n                break;\r\n            }\r\n          });\r\n\r\n          weekMapStopwatch.set(dateStrings[index], stopwatchEntries);\r\n          weekMapRater.set(dateStrings[index], raterEntries);\r\n          weekMapChecker.set(dateStrings[index], checkerEntries);\r\n          weekMapCounter.set(dateStrings[index], counterEntries);\r\n        });\r\n\r\n        setStopwatchEntries(weekMapStopwatch);\r\n        setRaterEntries(weekMapRater);\r\n        setCheckerEntries(weekMapChecker);\r\n        setCounterEntries(weekMapCounter);\r\n      });\r\n    }, [todaysDate, userDb, dateRange]);\r\n\r\n    return (\r\n      <div style={{ marginLeft: `4px` }}>\r\n        {/* <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={barLineChart.display}\r\n                disabled={barLineChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: barLineChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"barLineChart\"\r\n              />\r\n            }\r\n            label=\"Bar Line Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={pieChart.display}\r\n                disabled={pieChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: pieChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"pieChart\"\r\n              />\r\n            }\r\n            label=\"Pie Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={areaChart.display}\r\n                disabled={areaChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: areaChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"areaChart\"\r\n              />\r\n            }\r\n            label=\"Area Chart\"\r\n          />\r\n        </FormGroup> */}\r\n        {barLineChart.display ? (\r\n          <BarLineChartPreAmp\r\n            stopwatchEntries={stopwatchEntries}\r\n            checkerEntries={checkerEntries}\r\n            raterEntries={raterEntries}\r\n            counterEntries={counterEntries}\r\n            stopwatches={stopwatches}\r\n            raters={raters}\r\n            checkers={checkers}\r\n            counters={counters}\r\n            selectedTrackers={selectedTrackers}\r\n            dateStrings={dateStrings}\r\n          />\r\n        ) : null}\r\n        {pieChart.display ? null : null}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ChartSelect;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport classes from \"./DataPanel.module.css\";\r\nimport * as types from \"../../Types\";\r\n\r\nimport TrackerSelector from \"../../Components/TrackerSelector/TrackerSelector\";\r\nimport RangeSelector from \"../../Components/TimeRange/RangeSelector\";\r\nimport ChartSelect from \"../../Components/Charts/ChartSelect\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst DataPanel: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const todaysDate = useContext(DateContext);\r\n  // console.log(checkers);\r\n  const [position, setPosition] = useState<string>(`left`);\r\n\r\n  const [selectedTrackers, setSelectedTrackers] = useState<types.Tracker[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!stopwatches.length || !raters.length) return;\r\n\r\n    setSelectedTrackers([raters[0], stopwatches[0]]);\r\n  }, [stopwatches, raters]);\r\n\r\n  // console.log(selectedTrackers);\r\n  const [dateRange, setDateRange] = useState<Date[]>([new Date(), new Date()]);\r\n\r\n  console.log(`rendering DataPanel`);\r\n\r\n  const changePosition = () => {\r\n    const newPosition = position === `left` ? `right` : `left`;\r\n\r\n    setPosition(newPosition);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDateRange([\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 7\r\n      ),\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate()\r\n      ),\r\n    ]);\r\n  }, [todaysDate]);\r\n\r\n  const selectTracker = (trackerId: string) => {\r\n    // console.log(trackerId);\r\n    let isSelected: boolean = false;\r\n    let newTrackers: types.Tracker[] = [];\r\n\r\n    const allTrackers: types.Tracker[] = [\r\n      ...stopwatches,\r\n      ...raters,\r\n      ...checkers,\r\n      ...counters,\r\n    ];\r\n\r\n    const tracker: types.Tracker = allTrackers.filter(\r\n      (tracker) => trackerId === tracker.id\r\n    )[0];\r\n\r\n    // console.log(tracker);\r\n\r\n    if (!tracker) return;\r\n\r\n    selectedTrackers.forEach((tracker) => {\r\n      if (tracker.id === trackerId) isSelected = true;\r\n    });\r\n\r\n    if (isSelected) {\r\n      newTrackers = selectedTrackers.filter(\r\n        (selected) => selected.id !== trackerId\r\n      );\r\n    }\r\n    if (!isSelected) {\r\n      newTrackers = [...selectedTrackers, tracker];\r\n\r\n      if (tracker.type === `stopwatch`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) => tracker.type !== `checker` && tracker.type !== `counter`\r\n        );\r\n      }\r\n\r\n      if (tracker.type === `checker`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `counter`\r\n        );\r\n      }\r\n      if (tracker.type === `counter`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `checker`\r\n        );\r\n      }\r\n    }\r\n    setSelectedTrackers(newTrackers);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.DataPanel}>\r\n      <div\r\n        className={classes.Chart}\r\n        style={{\r\n          transform: `translateX(-${position === `left` ? `0` : `186`}px)`,\r\n        }}\r\n      >\r\n        <TrackerSelector\r\n          raters={raters}\r\n          stopwatches={stopwatches}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          handler={selectTracker}\r\n          selectedTrackers={selectedTrackers}\r\n        />\r\n        <div onClick={changePosition} className={classes.Divider}>\r\n          <svg width=\"17\" height=\"17\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-compact-${position}`} />\r\n          </svg>\r\n        </div>\r\n        <div>\r\n          <RangeSelector\r\n            todaysDate={todaysDate!}\r\n            dateRange={dateRange}\r\n            setDateRange={setDateRange}\r\n          />\r\n          <ChartSelect\r\n            dateRange={dateRange}\r\n            stopwatches={stopwatches}\r\n            selectedTrackers={selectedTrackers}\r\n            raters={raters}\r\n            checkers={checkers}\r\n            counters={counters}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DataPanel;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as types from \"../Types\";\r\nimport DateContext from \"../Context/DateContext\";\r\nimport DbContext from \"../Context/DbContext\";\r\n\r\nconst GenarateFakeData: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const todaysDate = useContext(DateContext);\r\n  const userDb = useContext(DbContext);\r\n\r\n  const [newDay, setNewDay] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // console.log(userDb);\r\n    if (userDb?.id !== `3Y554SVOZxYagcpu9lTkeiWesKC3`) return;\r\n\r\n    // console.log(`isnt`);\r\n    userDb!\r\n      .collection(`entries`)\r\n      .where(\"year\", \"==\", todaysDate!.getFullYear())\r\n      .where(\"month\", \"==\", todaysDate!.getMonth())\r\n      .where(\"day\", \"==\", todaysDate!.getDate() - 1)\r\n      .onSnapshot((snapshot: any) => {\r\n        setNewDay(snapshot.empty);\r\n      });\r\n  }, [todaysDate, userDb]);\r\n\r\n  useEffect(() => {\r\n    if (!newDay) return;\r\n\r\n    console.log(`new data for today`);\r\n\r\n    stopwatches.forEach((stopwatch) => {\r\n      console.log(`!!!!!!!!!1`);\r\n      //   console.log(stopwatch);\r\n      const numberOfEntries: number = (1 + Math.trunc(Math.random() * 4)) * 2;\r\n      // console.log(numberOfEntries);\r\n\r\n      const startOfDay: number = new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 1,\r\n        8\r\n      ).getTime();\r\n\r\n      let accum: number = startOfDay;\r\n\r\n      for (let i = 0; i < numberOfEntries; i++) {\r\n        const hours: number = Math.trunc(Math.random() * 3);\r\n        const minutes: number = Math.trunc(Math.random() * 60);\r\n        const seconds: number = Math.trunc(Math.random() * 60);\r\n\r\n        //   console.log(`${hours}:${minutes}:${seconds}`);\r\n\r\n        const milli: number =\r\n          hours * 60 * 60 * 1000 + minutes * 60 * 1000 + seconds * 1000;\r\n\r\n        //   console.log(milli);\r\n        accum += milli;\r\n\r\n        const date: Date = new Date(accum);\r\n\r\n        userDb!\r\n          .collection(`entries`)\r\n          .add({\r\n            timestamp: accum,\r\n            trackerId: stopwatch.id,\r\n            year: date.getFullYear(),\r\n            month: date.getMonth(),\r\n            day: date.getDate(),\r\n            type: `stopwatchEntry`,\r\n          })\r\n          .then(() => {})\r\n          .catch((err: any) => console.log(err));\r\n      }\r\n    });\r\n\r\n    raters.forEach((rater) => {\r\n      //   console.log(rater);\r\n      const timeOfEntry: Date = new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 1,\r\n        8 + Math.trunc(Math.random() * 14),\r\n        Math.trunc(Math.random() * 60),\r\n        Math.trunc(Math.random() * 60)\r\n      );\r\n\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timeOfEntry.getTime(),\r\n          trackerId: rater.id,\r\n          year: timeOfEntry.getFullYear(),\r\n          month: timeOfEntry.getMonth(),\r\n          day: timeOfEntry.getDate(),\r\n          type: `raterEntry`,\r\n          value: 2 + Math.random() * 3,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    });\r\n\r\n    counters.forEach((counter) => {\r\n      const timeOfEntry: Date = new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 1,\r\n        8 + Math.trunc(Math.random() * 14),\r\n        Math.trunc(Math.random() * 60),\r\n        Math.trunc(Math.random() * 60)\r\n      );\r\n\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timeOfEntry.getTime(),\r\n          trackerId: counter.id,\r\n          year: timeOfEntry.getFullYear(),\r\n          month: timeOfEntry.getMonth(),\r\n          day: timeOfEntry.getDate(),\r\n          type: `counterEntry`,\r\n          count: Math.trunc(Math.random() * 4) * counter.size,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    });\r\n    checkers.forEach((checker) => {\r\n      const timeOfEntry: Date = new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 1,\r\n        8 + Math.trunc(Math.random() * 14),\r\n        Math.trunc(Math.random() * 60),\r\n        Math.trunc(Math.random() * 60)\r\n      );\r\n\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timeOfEntry.getTime(),\r\n          trackerId: checker.id,\r\n          year: timeOfEntry.getFullYear(),\r\n          month: timeOfEntry.getMonth(),\r\n          day: timeOfEntry.getDate(),\r\n          type: `checkerEntry`,\r\n          checked: !!Math.round(Math.random()),\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    });\r\n\r\n    setNewDay(false);\r\n  }, [stopwatches, todaysDate, userDb, raters, counters, checkers, newDay]);\r\n  return <div></div>;\r\n});\r\n\r\nexport default GenarateFakeData;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Trackers from \"./Containers/TrackerContainer/TrackerContainer\";\r\nimport { collection, onSnapshot } from \"firebase/firestore\";\r\nimport DataPanel from \"./Containers/DataPanel/DataPanel\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport { State } from \"./Types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Rater,\r\n  Stopwatch,\r\n  Checker,\r\n  Counter,\r\n  // trackerConverter,\r\n} from \"./HalperFunctions/CreateTrackers\";\r\nimport DbContext from \"./Context/DbContext\";\r\nimport DateContext from \"./Context/DateContext\";\r\nimport * as types from \"./Types\";\r\nimport GenarateFakeData from \"./FakeData/GenarateFakeData\";\r\nimport LoginModal from \"./Components/LoginModal/LoginModal\";\r\n\r\nconst Control = (props: PropsFromRedux) => {\r\n  const [stopwatches, setStopwatches] = useState<Stopwatch[]>([]);\r\n  const [raters, setRaters] = useState<Rater[]>([]);\r\n  const [checkers, setCheckers] = useState<Checker[]>([]);\r\n  const [counters, setCounters] = useState<Counter[]>([]);\r\n\r\n  const userDb = useContext(DbContext);\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(userDb!, \"trackers\"),\r\n      {},\r\n      (snapshot: any) => {\r\n        const stopwatches: Stopwatch[] = [];\r\n        const raters: Rater[] = [];\r\n        const checkers: Checker[] = [];\r\n        const counters: Counter[] = [];\r\n\r\n        snapshot.forEach((doc: any) => {\r\n          const tracker: types.Tracker = doc.data();\r\n\r\n          switch (tracker.type) {\r\n            case `stopwatch`:\r\n              stopwatches.push(tracker);\r\n              break;\r\n            case `rater`:\r\n              raters.push(tracker);\r\n              break;\r\n            case `counter`:\r\n              counters.push(tracker);\r\n              break;\r\n            default:\r\n              checkers.push(tracker);\r\n              break;\r\n          }\r\n        });\r\n        setStopwatches(stopwatches);\r\n        setCheckers(checkers);\r\n        setRaters(raters);\r\n        setCounters(counters);\r\n      }\r\n    );\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.user]);\r\n\r\n  let dataPanel = null;\r\n  let trackersEl = null;\r\n  let data = null;\r\n\r\n  if (!!todaysDate && props.user) {\r\n    dataPanel = (\r\n      <DataPanel\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n    trackersEl = (\r\n      <Trackers\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n    data = (\r\n      <GenarateFakeData\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Aux>\r\n      <LoginModal show={!props.user} handleClose={() => {}} />\r\n      {dataPanel}\r\n      {trackersEl}\r\n      {data}\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Control);\r\n"],"sourceRoot":""}