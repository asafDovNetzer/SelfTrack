{"version":3,"sources":["Components/UI/Divider.tsx","Components/Tracker/Tracker.module.css","Components/Tracker/Stopwatch/Stopwatch.module.css","Components/Tracker/Rater/Rater.module.css","Components/Tracker/Counter/Counter.module.css","Components/Tracker/Checker/Checker.module.css","Components/TrackersForm/TrackersForm.module.css","Components/Icons/Icons.module.css","Components/Clock/Clock.module.css","Components/SurveyForm/SurveyForm.module.css","Containers/TrackerContainer/Trackers.module.css","Components/Entries/StopwatchEntries/StopwatchEntries.module.css","Components/Charts/BarChart/BarChartPreAmp.module.css","Components/Charts/BarChart/BarChart.module.css","Components/Entries/StopwatchEntries/EntryEditForm.module.css","Components/NewTrackerGuide/NewTrackerGuide.module.css","Components/NewTracker/NewTracker.module.css","Components/Tracker/ExpandedTracker/ExpandedTracker.module.css","Components/FormElements/InputField/InputField.module.css","Components/UI/Box/Box.module.css","Components/FormElements/ColorPicker/ColorPicker.module.css","Components/UI/MessageModal/MessageModal.module.css","Containers/DataPanel/DataPanel.module.css","Components/TrackerSelector/TrackerSelector.module.css","Components/TrackerSelector/Label/Label.module.css","Components/TimeRange/RangeSelector.module.css","Components/Charts/BarLineChart/BarLineChart.module.css","Components/Icons/CounterIcon.tsx","HalperFunctions/HandleStopwatches.tsx","Components/Clock/Clock.tsx","Components/TrackersForm/FakeTracker/FakeTracker.tsx","Components/TrackersForm/TrackersForm.tsx","Components/SurveyForm/SurveyForm.tsx","Components/Charts/BarChart/BarChart.tsx","Components/Charts/BarChart/BarChartPreAmp.tsx","HalperFunctions/ArrangeEntries.tsx","Components/Entries/StopwatchEntries/EntryEditForm.tsx","Components/Entries/EntryEditModal/EntryEditModal.tsx","Components/Entries/StopwatchEntries/StopwatchEntries.tsx","Components/Tracker/Stopwatch/Stopwatch.tsx","Components/Tracker/Rater/Rater.tsx","Components/Tracker/Checker/Checker.tsx","Components/Tracker/Counter/Counter.tsx","Components/NewTrackerGuide/NewTrackerGuide.tsx","Components/NewTracker/NewTracker.tsx","Components/FormElements/InputField/InputField.tsx","Components/UI/Box/Box.tsx","Components/FormElements/ColorPicker/ColorPicker.tsx","Components/UI/MessageModal/MessageModal.tsx","Components/Tracker/ExpandedTracker/ExpandedTracker.tsx","Containers/TrackerContainer/TrackerContainer.tsx","Components/TrackerSelector/Label/Label.tsx","Components/TrackerSelector/TrackerSelector.tsx","Components/TimeRange/RangeSelector.tsx","Components/Charts/BarLineChart/BarLineChart.tsx","Components/Charts/BarLineChart/BarLineChartPreAmp.tsx","Components/Charts/ChartSelect.tsx","Containers/DataPanel/DataPanel.tsx","Control.tsx"],"names":["Divider","style","width","height","backgroundImage","module","exports","CounterIcon","props","className","classes","Counter","Left","onClick","plus","count","size","Count","disabled","Right","newValue","minus","reletiveTimestampToString","timestamp","outputInSeconds","Math","round","seconds","toString","padStart","minutes","floor","hours","absoluteTimestampToString","date","Date","getSeconds","getMinutes","getHours","Clock","accum","isRunning","lastEntry","useState","output","setOutput","gap","setGap","tick","useCallback","now","useEffect","interval","window","setInterval","clearInterval","outputString","FakeTracker","React","memo","type","color","name","setCount","check","setCheck","setAccum","setIsRunning","setLastEntry","console","log","trackerElement","stopwatchClasses","Content","MainButton","wasRunning","newAccum","fill","href","icons","trackerClasses","Header","checkerClasses","CheckBox","counterClasses","newCount","raterClasses","Rating","defaultValue","Tracker","borderColor","Expand","TrackersForm","setColor","activeStep","setActiveStep","choosenType","setType","finalStep","setFinalStep","userDb","useContext","DbContext","chooseColorBasedOnType","handleNext","formik","setFieldTouched","values","prevActiveStep","handleBack","useFormik","initialValues","description","validationSchema","yup","max","required","positive","onSubmit","attemptSubmition","createNewTracker","closeForm","steps","label","Auxiliary","TextField","id","variant","placeholder","value","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","maxRows","onChangeComplete","hex","onFinish","display","Modal","Selector","event","target","map","toLowerCase","slice","toUpperCase","Body","Stepper","orientation","step","index","Step","RedCircle","Circle","StepLabel","StepContent","Buttons","Button","submitForm","length","BackButton","submitionState","Spinner","mapDispatchToProps","actions","connector","connect","state","not","a","b","filter","includes","intersection","SurveyFormModal","show","closeHandler","checkers","raters","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","expanded","setExpanded","setName","handleToggle","currentIndex","indexOf","newChecked","push","splice","numberOfChecked","items","handleToggleAll","expand","nodeIds","customList","title","Card","CardHeader","avatar","Checkbox","indeterminate","subheader","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","TreeItem","nodeId","tracker","rater","ListItem","role","button","ListItemIcon","disableRipple","ListItemText","primary","checker","formElement","Form","Transfer","Movers","concat","onHide","Footer","collection","add","trackers","then","catch","err","BarChart","chartData","chartRef","useRef","canvasCallback","canvas","ctx","getContext","current","Chart","data","datasets","options","aspectRatio","scales","x","stacked","grid","ticks","stepSize","callback","y","indexAxis","e","chart","config","_config","dataset","_active","datasetIndex","elements","bar","borderWidth","barThickness","responsive","plugins","legend","tooltip","enabled","labels","update","ref","BarChartPreamp","stopwatch","entries","nowTimestamp","setNowTimestamp","setDatasets","datasetsArray","dayStart","getFullYear","getMonth","getDate","getTime","dayEnd","stopwatchEntries","entry","currentTimestamp","forEach","setBackgroundColor","backgroundColor","barChart","dates","promises","dailyEntries","createPromise","year","month","day","Promise","all","responses","res","docs","where","orderBy","get","EntryEditForm","submitHandler","from","newFrom","setNewFrom","to","newTo","setNewTo","newSubTotal","setNewSubTotal","fromInitValue","toInitValue","fromHour","fromMinute","fromSecond","toHour","toMinute","toSecond","validate","fromInputTimestamp","stringPlusDayToTimestamp","toInputTimestamp","isFromBiggerThanLimit","limit","isFromSmallerThanTo","isToSmallerThanLimit","isToBiggerThanFrom","Field","min","Limit","timeStringFromTimestamp","fontWeight","EntryEditModal","editHandler","newEntryHandler","changeEntry","batch","db","fromRef","doc","toRef","Entries","arrangedEntries","setArrangedEntries","selectionModel","setSelectionModel","modalDisplay","setModalDisplay","EntryToEdit","setEntryToEdit","todaysDate","DateContext","rows","setRows","pairs","stopwatchId","today","biEntries","fromLimit","pop","subTotal","entryId","biEntry","total","endOfDay","reversed","reverse","toLimit","rawEntriesToPairs","pair","body","ButtonGroup","realIndex","entriesIds","delete","commit","startOfDay","entryToEdit","rowHeight","columns","field","headerName","sortable","filterable","editable","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","headerHeight","trackerId","user","setEntries","entriesRef","q","query","onSnapshot","snapshot","newEntries","even","entriesTimestamps","firstEntry","selector","StopwatchEntries","setValue","setEntry","precision","isChecked","setIsChecked","newIsChecked","counter","changeCount","trackersArray","noActiveUser","onSignout","userName","setStep","line","setLine","answer1","setAnswer1","answer2","setAnswer2","Map","setTrackers","selected","setSelected","set","explanetion","Toggle","closest","Togglegroup","borderRadius","Arrow","marginTop","FormControl","component","RadioGroup","aria-label","RadioOptions","FormControlLabel","control","Radio","boxShadow","Options","order","trackerColor","Recommended","Possible","NotRec","Option","NewUser","ButtonPanel","Back","checkNext","Next","NewTracker","NotSure","Large","onNotSure","onNext","InputField","setTouched","setError","newError","validators","validator","readOnly","zIndex","preventDefault","Message","bottom","top","Save","Box","closable","onClose","Label","children","ColorPicker","Switch","Pickers","Slider","transform","Picker","MessageModal","Backdrop","main","sub","No","onNo","Yes","onYes","deleteTracker","deleteEntries","updateField","fieldInEdit","setFieldInEdit","setDescription","setStepSize","displayMessage","setDisplayMessage","trackersRef","unsubscribe","handleCloseBox","editField","submitChange","Container","undefined","HeaderType","Pen","Description","StepSize","Color","DeleteButton","Trackers","modalTrackerDisplay","setModalTrackerDisplay","modalSurveyDisplay","setModalSurveyDisplay","isEmpty","setIsEmpty","displayNewTracker","setDisplayNewTracker","setDate","expandedModalDisplay","setExpandedModalDiaplay","higherIsEmpty","handleClose","selectHandler","UpperContainer","DatePicker","maxDate","locale","clearIcon","NewTrackerButton","stopwatches","counters","SurveyForm","setValidateModal","NewTrackerGuide","message","func","errorMessage","TrackerSelector","handler","selectedTrackers","onNodeSelect","RangeSelector","dateRange","setDateRange","BarLineChartPreAmp","raterEntries","dateStrings","counterEntries","checkerEntries","trackerDatasets","setTrackerDatasets","setOptions","newOptions","point","radius","interaction","mode","intersect","position","y1","suggestedMax","text","drawOnChartArea","displayColors","stepped","yAxisID","tension","totals","filteredEntries","isToday","fakeLastEntry","newTimeStamp","createFakeLastEntry","unshift","filteredEntry","rgb","hexRgb","red","green","blue","flexFlow","BarLineChart","ChartSelect","setStopwatchEntries","setCheckerEntries","setRaterEntries","setCounterEntries","setDateStrings","days","i","newDate","newDay","newMonth","newYear","createDatesFromRange","weekMapStopwatch","weekMapRater","weekMapChecker","weekMapCounter","getEntries","marginLeft","DataPanel","setSelectedTrackers","Main","isSelected","newTrackers","selectedView","setStopwatches","setRaters","setCheckers","setCounters","empty","dataPanel","trackersEl","view","Background"],"mappings":"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","file":"static/js/4.7a4c03bc.chunk.js","sourcesContent":["const Divider = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `100%`,\r\n        height: `1px`,\r\n        backgroundImage: `linear-gradient(to right, white, grey, white)`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tracker\":\"Tracker_Tracker__3ovyp\",\"Expand\":\"Tracker_Expand__2hQt9\",\"Header\":\"Tracker_Header__2Z-aS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Stopwatch_Content__3seJN\",\"Header\":\"Stopwatch_Header__3WRJs\",\"MainButton\":\"Stopwatch_MainButton__Xtp0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Rater_Content__3fnIG\",\"Header\":\"Rater_Header__2iJvZ\",\"Rating\":\"Rater_Rating__fa4Sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Counter_Content__3GsA1\",\"Header\":\"Counter_Header__2uGCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBox\":\"Checker_CheckBox__8GKH-\",\"Content\":\"Checker_Content__34-M0\",\"Header\":\"Checker_Header__2TFSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"TrackersForm_Modal__Kik1V\",\"Header\":\"TrackersForm_Header__2Brvh\",\"Selector\":\"TrackersForm_Selector__3JBOO\",\"Body\":\"TrackersForm_Body__2wlBe\",\"Circle\":\"TrackersForm_Circle__2KvEL\",\"RedCircle\":\"TrackersForm_RedCircle__CI0z1\",\"Buttons\":\"TrackersForm_Buttons__1oy1z\",\"Button\":\"TrackersForm_Button__9d7Jf\",\"BackButton\":\"TrackersForm_BackButton__1Eb3b\",\"Form\":\"TrackersForm_Form__3LHZx\",\"Step\":\"TrackersForm_Step__3h1TQ\",\"StepContent\":\"TrackersForm_StepContent__2Z747\",\"ColorField\":\"TrackersForm_ColorField__17Ipo\",\"Field\":\"TrackersForm_Field__2PJ_4\",\"FloatingButton\":\"TrackersForm_FloatingButton__1LEwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Icons_Counter__NThdM\",\"Left\":\"Icons_Left__2w5Dn\",\"Right\":\"Icons_Right__AH45A\",\"Count\":\"Icons_Count__3HIsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__I3wu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardHeader\":\"SurveyForm_CardHeader__3GZP2\",\"List\":\"SurveyForm_List__3VN1A\",\"Transfer\":\"SurveyForm_Transfer__NIDYV\",\"Movers\":\"SurveyForm_Movers__ZnRYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trackers\":\"Trackers_Trackers__1zNZe\",\"NewTrackerButton\":\"Trackers_NewTrackerButton__3o3q4\",\"UpperContainer\":\"Trackers_UpperContainer__2wTXi\",\"Container\":\"Trackers_Container__2MFOo\",\"DatePicker\":\"Trackers_DatePicker__2s6lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Entries\":\"StopwatchEntries_Entries__trl9H\",\"Header\":\"StopwatchEntries_Header__28woA\",\"Body\":\"StopwatchEntries_Body__xnW4u\",\"NewEntryButton\":\"StopwatchEntries_NewEntryButton__25tlb\",\"Tablehead\":\"StopwatchEntries_Tablehead__1t_kg\",\"ListItem\":\"StopwatchEntries_ListItem__3ni0F\",\"Dropdown\":\"StopwatchEntries_Dropdown__24rx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChartPreAmp\":\"BarChartPreAmp_BarChartPreAmp__3-nTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarChart_BarChart__3cQVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"EntryEditForm_Field__3Tdcb\",\"Limit\":\"EntryEditForm_Limit__3WxXf\",\"Form\":\"EntryEditForm_Form__3lfW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewUser\":\"NewTrackerGuide_NewUser__12zqJ\",\"Form\":\"NewTrackerGuide_Form__ys7Wm\",\"RadioOptions\":\"NewTrackerGuide_RadioOptions__JoVOV\",\"Toggle\":\"NewTrackerGuide_Toggle__3SplK\",\"Togglegroup\":\"NewTrackerGuide_Togglegroup__L6eD4\",\"Arrow\":\"NewTrackerGuide_Arrow__9jM55\",\"Card\":\"NewTrackerGuide_Card__2sHIH\",\"Body\":\"NewTrackerGuide_Body__1p2yI\",\"Options\":\"NewTrackerGuide_Options__1ZUdn\",\"Option\":\"NewTrackerGuide_Option__hdPbm\",\"Recommended\":\"NewTrackerGuide_Recommended__3IdxW\",\"Possible\":\"NewTrackerGuide_Possible__34xLx\",\"NotRec\":\"NewTrackerGuide_NotRec__2Cy1-\",\"ButtonPanel\":\"NewTrackerGuide_ButtonPanel__2qAyC\",\"Next\":\"NewTrackerGuide_Next__2PBK2\",\"Back\":\"NewTrackerGuide_Back__2cL8a\",\"Header\":\"NewTrackerGuide_Header__KPT1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"NewTracker_Modal__K9oGT\",\"Header\":\"NewTracker_Header__32Omx\",\"Options\":\"NewTracker_Options__IKVm3\",\"Option\":\"NewTracker_Option__3iGNs\",\"Arrow\":\"NewTracker_Arrow__1bvLO\",\"NotSure\":\"NewTracker_NotSure__3am8Z\",\"Large\":\"NewTracker_Large__EpJVD\",\"Left\":\"NewTracker_Left__1bbZN\",\"Right\":\"NewTracker_Right__2Zzdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ExpandedTracker_Container__2qnHp\",\"Modal\":\"ExpandedTracker_Modal__YSemr\",\"Field\":\"ExpandedTracker_Field__2kjfR\",\"Backdrop\":\"ExpandedTracker_Backdrop__zrGCv\",\"Header\":\"ExpandedTracker_Header__18ZkH\",\"HeaderType\":\"ExpandedTracker_HeaderType__1v3G1\",\"Pen\":\"ExpandedTracker_Pen__33ZG8\",\"Color\":\"ExpandedTracker_Color__E2ssn\",\"Description\":\"ExpandedTracker_Description__2SFVy\",\"StepSize\":\"ExpandedTracker_StepSize__1U5BU\",\"ButtonPanel\":\"ExpandedTracker_ButtonPanel__3jrBp\",\"EditButton\":\"ExpandedTracker_EditButton__1RBfD\",\"DeleteButton\":\"ExpandedTracker_DeleteButton__3I1Av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputField_Form__2DsNl\",\"Save\":\"InputField_Save__DJ7ve\",\"Message\":\"InputField_Message__6gLWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__1uBEq\",\"Label\":\"Box_Label__37x2B\",\"Button\":\"Box_Button__31I1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPicker\":\"ColorPicker_ColorPicker__23cjM\",\"Switch\":\"ColorPicker_Switch__2NkF5\",\"Pickers\":\"ColorPicker_Pickers__3eE63\",\"Slider\":\"ColorPicker_Slider__AQqsv\",\"Picker\":\"ColorPicker_Picker__9EGeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"MessageModal_Modal__34v65\",\"Message\":\"MessageModal_Message__1WMYs\",\"ButtonPanel\":\"MessageModal_ButtonPanel__3SKYm\",\"Yes\":\"MessageModal_Yes__1LOfq\",\"No\":\"MessageModal_No__hCXI_\",\"Backdrop\":\"MessageModal_Backdrop__dGCPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataPanel\":\"DataPanel_DataPanel__2TvCl\",\"Main\":\"DataPanel_Main__3mO9g\",\"Chart\":\"DataPanel_Chart__2NxcX\",\"main\":\"DataPanel_main__1bcgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerSelector\":\"TrackerSelector_TrackerSelector__13Imw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__1Ou9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"RangeSelector_Selector__1o0hR\",\"Calender\":\"RangeSelector_Calender__3YZIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarLineChart_BarChart__UHoXd\"};","import React from \"react\";\r\nimport classes from \"./Icons.module.css\";\r\n\r\nconst CounterIcon = (props: Props) => {\r\n  const plus = () => {\r\n    props.plus(+props.count + props.size);\r\n  };\r\n\r\n  const minus = () => {\r\n    const newValue = props.count - props.size;\r\n    if (newValue < 0) return;\r\n\r\n    props.minus(newValue);\r\n  };\r\n\r\n  const checkDisabled = () => {\r\n    const newValue = props.count - props.size;\r\n\r\n    return newValue < 0;\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.Counter} main-button`}>\r\n      <button className={classes.Left} onClick={plus}>\r\n        +\r\n      </button>\r\n      <div className={classes.Count}>\r\n        <h3>{props.count}</h3>\r\n      </div>\r\n      <button\r\n        disabled={checkDisabled()}\r\n        className={classes.Right}\r\n        onClick={minus}\r\n      >\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  size: number;\r\n  count: number;\r\n  plus: (count: number) => void;\r\n  minus: (count: number) => void;\r\n};\r\n\r\nexport default CounterIcon;\r\n","// import * as types from \"./CreateTrackers\";\r\n\r\nexport const reletiveTimestampToString = (timestamp: number) => {\r\n  if (timestamp < 0) return `--:--:--`;\r\n\r\n  const outputInSeconds: number = Math.round(timestamp / 1000);\r\n\r\n  const seconds = (outputInSeconds! % 60).toString().padStart(2, `0`);\r\n  const minutes = Math.floor((outputInSeconds! / 60) % 60)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n  const hours = Math.floor(outputInSeconds! / 3600)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n\r\nexport const absoluteTimestampToString = (timestamp: number) => {\r\n  const date = new Date(timestamp);\r\n\r\n  const seconds = date.getSeconds().toString().padStart(2, `0`);\r\n  const minutes = date.getMinutes().toString().padStart(2, `0`);\r\n  const hours = date.getHours().toString().padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { reletiveTimestampToString } from \"../../HalperFunctions/HandleStopwatches\";\r\nimport classes from \"./Clock.module.css\";\r\n\r\nconst Clock: React.FC<{\r\n  accum: number;\r\n  isRunning: boolean;\r\n  lastEntry: number;\r\n}> = ({ accum, isRunning, lastEntry }) => {\r\n  const [output, setOutput] = useState<string>(`00:00:00`);\r\n  const [gap, setGap] = useState<number>(0);\r\n\r\n  const tick = useCallback(() => {\r\n    setGap(Date.now() - lastEntry);\r\n  }, [lastEntry]);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (!isRunning) {\r\n      setGap(0);\r\n    }\r\n\r\n    if (isRunning) {\r\n      tick();\r\n\r\n      interval = window.setInterval(function () {\r\n        tick();\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    };\r\n  }, [isRunning, tick]);\r\n\r\n  useEffect(() => {\r\n    const outputInMilliSecs: number = gap + accum;\r\n\r\n    const outputString = reletiveTimestampToString(outputInMilliSecs);\r\n\r\n    setOutput(outputString);\r\n  }, [accum, lastEntry, gap]);\r\n\r\n  return (\r\n    <div className={classes.Clock}>\r\n      <h3>{output}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport stopwatchClasses from \"../../Tracker/Stopwatch/Stopwatch.module.css\";\r\nimport raterClasses from \"../../Tracker/Rater/Rater.module.css\";\r\nimport counterClasses from \"../../Tracker/Counter/Counter.module.css\";\r\nimport checkerClasses from \"../../Tracker/Checker/Checker.module.css\";\r\nimport trackerClasses from \"../../Tracker/Tracker.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n// import { Checkbox } from \"@material-ui/core\";\r\nimport CounterIcon from \"../../Icons/CounterIcon\";\r\nimport Clock from \"../../Clock/Clock\";\r\n\r\nconst FakeTracker: React.FC<{\r\n  type: string;\r\n  color: string;\r\n  name: string;\r\n  size: number;\r\n}> = React.memo(({ type, color, name, size }) => {\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const [check, setCheck] = React.useState<boolean>(true);\r\n  const [accum, setAccum] = React.useState<number>(0);\r\n  const [isRunning, setIsRunning] = React.useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = React.useState<number>(Date.now());\r\n\r\n  console.log(size);\r\n\r\n  const checkerHandler = () => {\r\n    const newCheck = !check;\r\n    setCheck(newCheck);\r\n  };\r\n\r\n  const handleStopwatch = () => {\r\n    const wasRunning = isRunning;\r\n    setIsRunning(!wasRunning);\r\n    if (!wasRunning) {\r\n      setLastEntry(Date.now());\r\n    } else {\r\n      const newAccum = accum + Date.now() - lastEntry;\r\n      setAccum(newAccum);\r\n    }\r\n  };\r\n\r\n  let trackerElement: JSX.Element;\r\n\r\n  // console.log(type);\r\n\r\n  switch (type) {\r\n    case `stopwatch`:\r\n      trackerElement = (\r\n        <div className={stopwatchClasses.Content}>\r\n          <button\r\n            className={`${stopwatchClasses.MainButton}     main-button`}\r\n            onClick={handleStopwatch}\r\n          >\r\n            <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n              <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n            </svg>\r\n          </button>\r\n          <h5 className={trackerClasses.Header}>{name}</h5>\r\n          <Clock accum={accum} isRunning={isRunning} lastEntry={lastEntry} />\r\n        </div>\r\n      );\r\n      break;\r\n    case `checker`:\r\n      trackerElement = (\r\n        <div className={checkerClasses.Content}>\r\n          <h5 className={trackerClasses.Header}>{name}</h5>\r\n          <div className={checkerClasses.CheckBox}>\r\n            <svg\r\n              onClick={checkerHandler}\r\n              width=\"22\"\r\n              height=\"22\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <use href={`${icons}#${check ? `check-` : ``}square`} />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case `counter`:\r\n      trackerElement = (\r\n        <div className={counterClasses.Content}>\r\n          <h5 className={trackerClasses.Header}>{name}</h5>\r\n          <CounterIcon\r\n            count={count}\r\n            size={size}\r\n            plus={(newCount: number) => setCount(newCount)}\r\n            minus={(newCount: number) => setCount(newCount)}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      trackerElement = (\r\n        <div className={raterClasses.Content}>\r\n          <h5 className={trackerClasses.Header}>{name}</h5>\r\n          <Rating\r\n            className={raterClasses.Rating}\r\n            name=\"stars\"\r\n            defaultValue={3}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={trackerClasses.Tracker} style={{ borderColor: color }}>\r\n      {trackerElement}\r\n      <div className={trackerClasses.Expand}>\r\n        <svg width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FakeTracker;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DbRef, State } from \"../../Types\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n// import { Tracker } from \"../../Types\";\r\nimport classes from \"./TrackersForm.module.css\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport DbContext from \"../../Context/DbContext\";\r\n// import { updateTracker } from \"../../HalperFunctions/CreateTrackers\";\r\nimport Divider from \"../UI/Divider\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport FakeTracker from \"./FakeTracker/FakeTracker\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport StepContent from \"@mui/material/StepContent\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\n// import InputField from \"../FormElements/InputField/InputField\";\r\n\r\nconst TrackersForm = React.memo((props: Props) => {\r\n  const [color, setColor] = useState<string>(`#00bcd4`);\r\n  const [activeStep, setActiveStep] = React.useState<number>(0);\r\n  const [choosenType, setType] = React.useState<string>(``);\r\n  const [finalStep, setFinalStep] = React.useState<number>(2);\r\n  const types: string[] = [`Rater`, `Checker`, `Stopwatch`, `Counter`];\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  const chooseColorBasedOnType = React.useCallback((type) => {\r\n    let color: string;\r\n\r\n    switch (type) {\r\n      case `stopwatch`:\r\n        color = `rgb(152, 29, 135)`;\r\n        break;\r\n      case `rater`:\r\n        color = `rgb(12, 223, 238)`;\r\n        break;\r\n      case `checker`:\r\n        color = `rgb(12, 136, 238)`;\r\n        break;\r\n      default:\r\n        color = `rgb(236, 54, 141)`;\r\n    }\r\n\r\n    setColor(color);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setType(props.type);\r\n    setFinalStep(props.type === `counter` ? 3 : 2);\r\n    chooseColorBasedOnType(props.type);\r\n  }, [props, chooseColorBasedOnType]);\r\n\r\n  const checkNext = () => {\r\n    return activeStep === 0 && !!formik.errors.name;\r\n  };\r\n\r\n  const changeType = (event: any) => {\r\n    setType(event.target.value);\r\n    chooseColorBasedOnType(event.target.value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    formik.setFieldTouched(`name`, true, true);\r\n    if (!formik.values.name) return;\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: ``,\r\n      description: ``,\r\n      size: 1,\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .max(20, \"Name is too long\")\r\n        .required(\"Must have a name\"),\r\n      description: yup.string(),\r\n      size: yup.number().positive(\"Must be a possitive number\").required(\"\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      props.attemptSubmition();\r\n\r\n      props.createNewTracker(\r\n        userDb,\r\n        props.type,\r\n        values.name,\r\n        values.description,\r\n        color,\r\n        values.size\r\n      );\r\n\r\n      closeForm();\r\n    },\r\n  });\r\n\r\n  const steps = [\r\n    {\r\n      label: \"Name\",\r\n      description: (\r\n        <Auxiliary>\r\n          <TextField\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label={\r\n              <p>\r\n                Name <small> (required)</small>\r\n              </p>\r\n            }\r\n            variant=\"outlined\"\r\n            placeholder=\"e.g With friends...\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n          <p>\r\n            Choose a name that describes best what the tracker tracks, with the\r\n            least amount of words.\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Description\",\r\n      description: (\r\n        <Auxiliary>\r\n          <TextField\r\n            id=\"description\"\r\n            name=\"description\"\r\n            multiline\r\n            label={\r\n              <p>\r\n                Description<small> (optional)</small>\r\n              </p>\r\n            }\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            placeholder=\"e.g The amount of time i spend hanging out with friends...\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.description && Boolean(formik.errors.description)\r\n            }\r\n            helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n          <p>\r\n            A description would remind you what this tracker is meant to track\r\n            in case you forget.\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n    choosenType === `counter`\r\n      ? {\r\n          label: \"Step size\",\r\n          description: (\r\n            <Auxiliary>\r\n              <TextField\r\n                value={formik.values.size}\r\n                onChange={formik.handleChange}\r\n                id=\"size\"\r\n                name=\"size\"\r\n                type=\"number\"\r\n                label={\r\n                  <p>\r\n                    Step size<small> (optional)</small>\r\n                  </p>\r\n                }\r\n                variant=\"outlined\"\r\n                style={{ width: `100px` }}\r\n                error={formik.touched.size && Boolean(formik.errors.size)}\r\n                helperText={formik.touched.size && formik.errors.size}\r\n              />\r\n              <p>\r\n                The `step size` is the amount by which the count goes up or down\r\n                per click.\r\n              </p>\r\n            </Auxiliary>\r\n          ),\r\n        }\r\n      : null,\r\n    {\r\n      label: \"Color\",\r\n      description: (\r\n        <Auxiliary>\r\n          <CirclePicker onChangeComplete={handleChangeComplete} color={color} />\r\n          <p>\r\n            The color will be displayed in all graphs and charts (It can be\r\n            changed at any time).\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const closeForm = () => {\r\n    setColor(`#00bcd4`);\r\n    props.onFinish();\r\n  };\r\n\r\n  let display = (\r\n    <div className={classes.Modal}>\r\n      <div className={classes.Header}>\r\n        <div className={classes.Selector}>\r\n          <select onChange={changeType} value={choosenType}>\r\n            {types.map((type) => (\r\n              <option key={type} value={type.toLowerCase()}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <FakeTracker\r\n          type={choosenType}\r\n          color={color}\r\n          name={\r\n            formik.values.name\r\n              ? formik.values.name\r\n              : choosenType.slice(0, 1).toUpperCase() + choosenType.slice(1)\r\n          }\r\n          size={+formik.values.size}\r\n        />\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Body}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((step, index) => {\r\n            if (!step) return null;\r\n            return (\r\n              <Step\r\n                className={\r\n                  step.label === `Name` && !!formik.errors.name\r\n                    ? classes.RedCircle\r\n                    : classes.Circle\r\n                }\r\n                key={step.label}\r\n              >\r\n                <StepLabel>{step.label}</StepLabel>\r\n                <StepContent>\r\n                  <div className={classes.Step}>\r\n                    <div className={classes.StepContent}>\r\n                      {step.description}\r\n                    </div>\r\n                    <div className={classes.Buttons}>\r\n                      <button\r\n                        className={classes.Button}\r\n                        onClick={\r\n                          activeStep !== finalStep\r\n                            ? handleNext\r\n                            : formik.submitForm\r\n                        }\r\n                        disabled={checkNext()}\r\n                      >\r\n                        {index === steps.length - 1 ? \"Create\" : \"Continue\"}\r\n                      </button>\r\n                      <button\r\n                        className={classes.BackButton}\r\n                        disabled={index === 0}\r\n                        onClick={handleBack}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (props.submitionState === `attempt`) {\r\n    display = <Spinner />;\r\n  }\r\n\r\n  return display;\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  submitionState: state.submitionState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  attemptSubmition: () => actions.setSubmitionState(`attempt`),\r\n  createNewTracker: (\r\n    userDb: DbRef,\r\n    type: string,\r\n    name: string,\r\n    description: string,\r\n    color: string,\r\n    size: number\r\n  ) => actions.createNewTracker(userDb, type, name, description, color, size),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  type: string;\r\n  onFinish: () => void;\r\n};\r\n\r\nexport default connector(TrackersForm);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Tracker, CheckerType, RaterType } from \"../../Types\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classes from \"./SurveyForm.module.css\";\r\n// import { Formik, Form, Field } from \"formik\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  TextField,\r\n  Divider,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst not = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => !b.includes(value));\r\n};\r\n\r\nconst intersection = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => b.includes(value));\r\n};\r\n\r\nconst union = (a: Tracker[], b: Tracker[]) => {\r\n  return [...a, ...not(b, a)];\r\n};\r\n\r\nconst SurveyFormModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  checkers: CheckerType[];\r\n  raters: RaterType[];\r\n}> = React.memo(({ show, closeHandler, checkers, raters }) => {\r\n  const [checked, setChecked] = useState<Tracker[]>([]);\r\n  const [left, setLeft] = useState<Tracker[]>([...checkers, ...raters]);\r\n  const [right, setRight] = useState<Tracker[]>([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n  const [expanded, setExpanded] = useState<string[]>([`raters`, `checkers`]);\r\n  const [name, setName] = useState(\"\");\r\n  const userDb = useContext(DbContext);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    closeHandler();\r\n  };\r\n\r\n  const saveForm = () => {\r\n    userDb!\r\n      .collection(`surveys`)\r\n      .add({\r\n        name: name,\r\n        trackers: right.map((tracker) => tracker.id),\r\n      })\r\n      .then(() => {\r\n        closeForm();\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleToggle = (value: Tracker) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const numberOfChecked = (items: Tracker[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: Tracker[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const expand = (event: any, nodeIds: string[]) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: Tracker[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.CardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <TreeView\r\n        defaultCollapseIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-up`} />\r\n          </svg>\r\n        }\r\n        defaultExpandIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-down`} />\r\n          </svg>\r\n        }\r\n        expanded={expanded}\r\n        onNodeToggle={expand}\r\n      >\r\n        <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `rater`)\r\n            .map((rater) => {\r\n              return (\r\n                <ListItem\r\n                  key={rater.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(rater)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox checked={checked.includes(rater)} disableRipple />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={rater.id} primary={rater.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `checker`)\r\n            .map((checker) => {\r\n              return (\r\n                <ListItem\r\n                  key={checker.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(checker)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      checked={checked.includes(checker)}\r\n                      disableRipple\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={checker.id} primary={checker.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Card>\r\n  );\r\n\r\n  const formElement: JSX.Element = (\r\n    <form className={classes.Form}>\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Name\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        error={name.length < 4 && name.length > 0}\r\n      />\r\n      <div className={classes.Transfer}>\r\n        {customList(\"Choices\", left)}\r\n        <div className={classes.Movers}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </div>\r\n        {customList(\"Chosen\", right)}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeForm}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Body>{formElement}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeForm}>Close</Button>\r\n        <Button onClick={saveForm}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default SurveyFormModal;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  chartData: types.Datasets;\r\n}> = React.memo(({ chartData }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n        options: {\r\n          aspectRatio: 8,\r\n          scales: {\r\n            x: {\r\n              stacked: true,\r\n              max: 24,\r\n              grid: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                stepSize: 4,\r\n                callback: (value: string) => {\r\n                  // console.log(value);\r\n                  return `${value}:00`;\r\n                },\r\n              },\r\n            },\r\n            y: {\r\n              stacked: true,\r\n            },\r\n          },\r\n          indexAxis: \"y\",\r\n          onClick: (e: any) => {\r\n            const data: any = e.chart.config._config.data.datasets;\r\n            console.log(data);\r\n            const dataset: number = e.chart._active[0]?.datasetIndex;\r\n            if (!dataset) return;\r\n            const index: number = e.chart._active[0]?.index;\r\n            console.log(dataset);\r\n            console.log(index);\r\n\r\n            console.log(data[dataset].data[index]);\r\n          },\r\n          elements: {\r\n            bar: {\r\n              borderWidth: 1,\r\n              barThickness: 2,\r\n            },\r\n          },\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(`current`);\r\n      chartRef.current.data = {\r\n        labels: [``],\r\n        datasets: chartData,\r\n      };\r\n      chartRef.current.update();\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./BarChartPreAmp.module.css\";\r\nimport { Stopwatch } from \"../../../HalperFunctions/CreateTrackers\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst BarChartPreamp: React.FC<{\r\n  stopwatch: Stopwatch;\r\n  entries: types.StopwatchEntry[];\r\n  date: Date;\r\n}> = React.memo(({ stopwatch, entries, date }) => {\r\n  const [nowTimestamp, setNowTimestamp] = useState<number>(Date.now());\r\n  const [datasets, setDatasets] = useState<types.Datasets | null>(null);\r\n\r\n  useEffect(() => {\r\n    const datasetsArray: types.Datasets = [];\r\n\r\n    const dayStart = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const dayEnd = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + 1\r\n    ).getTime();\r\n\r\n    const stopwatchEntries = [\r\n      dayStart,\r\n      ...entries.map((entry) => entry.timestamp),\r\n    ];\r\n\r\n    // console.log(stopwatchEntries);\r\n    const currentTimestamp: number = nowTimestamp;\r\n\r\n    stopwatchEntries.push(\r\n      currentTimestamp < dayEnd ? currentTimestamp : dayEnd\r\n    );\r\n\r\n    const data: number[] = [];\r\n    let a: number | null = null;\r\n\r\n    stopwatchEntries.forEach((entry) => {\r\n      if (a) {\r\n        data.push((entry - a) / (1000 * 60 * 60));\r\n      }\r\n      a = entry;\r\n    });\r\n\r\n    // console.log(data);\r\n\r\n    const setBackgroundColor = (index: number) => {\r\n      let color: string = `rgb(225, 225, 225)`;\r\n\r\n      if (index % 2) {\r\n        color = stopwatch.color;\r\n      }\r\n\r\n      return color;\r\n    };\r\n\r\n    data.forEach((entry, index) => {\r\n      datasetsArray.push({\r\n        data: [entry],\r\n        backgroundColor: setBackgroundColor(index),\r\n      });\r\n    });\r\n\r\n    // console.log(datasetsArray);\r\n\r\n    setDatasets(datasetsArray);\r\n  }, [stopwatch, entries, date, nowTimestamp]);\r\n\r\n  const tick = useCallback(() => {\r\n    // console.log(`tick`);\r\n    setNowTimestamp(Date.now());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (!isRunning) return;\r\n\r\n    const interval = setInterval(() => {\r\n      tick();\r\n    }, 1000 * 60);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [tick]);\r\n\r\n  let barChart = <p>loading...</p>;\r\n\r\n  if (datasets) {\r\n    barChart = (\r\n      <div className={classes.BarChartPreamp}>\r\n        <BarChart chartData={datasets} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return barChart;\r\n});\r\n\r\nexport default BarChartPreamp;\r\n","import * as types from \"../Types\";\r\n\r\nexport const rawEntriesToPairs = (\r\n  entries: types.StopwatchEntry[],\r\n  stopwatchId: string,\r\n  today: Date,\r\n  date: Date\r\n) => {\r\n  const biEntries: types.ArrangedEntries = [];\r\n\r\n  // const dayStart = new Date(\r\n  //   entries[0].year,\r\n  //   entries[0].month,\r\n  //   entries[0].day,\r\n  //   0\r\n  // ).getTime();\r\n  const dayStart = date.getTime();\r\n\r\n  const dayEnd = new Date(\r\n    entries[0].year,\r\n    entries[0].month,\r\n    entries[0].day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  let a: types.StopwatchEntry | null = null;\r\n  let accum: number = 0;\r\n  let fromLimit: number = dayStart;\r\n  let count: number = 0;\r\n\r\n  entries.forEach((entry, index) => {\r\n    //   console.log(entry);\r\n\r\n    if (index % 2) {\r\n      biEntries.pop();\r\n      const subTotal = entry.timestamp - a!.timestamp;\r\n      accum += subTotal;\r\n\r\n      const from = {\r\n        timestamp: a!.timestamp,\r\n        id: a!.entryId,\r\n        limit: fromLimit,\r\n      };\r\n      const to = {\r\n        timestamp: entry.timestamp,\r\n        id: entry.entryId,\r\n        limit: null,\r\n      };\r\n\r\n      fromLimit = to.timestamp;\r\n\r\n      const biEntry: types.CompleteEntry = {\r\n        stopwatchId: stopwatchId,\r\n        from: from,\r\n        to: to,\r\n        subTotal: subTotal,\r\n        total: accum,\r\n        index: count,\r\n      };\r\n      biEntries.push(biEntry);\r\n    }\r\n\r\n    if (!(index % 2)) {\r\n      a = entry;\r\n      count++;\r\n\r\n      if (date.getTime() === today.getTime()) {\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: 0,\r\n          },\r\n          to: {\r\n            timestamp: 0,\r\n            id: ``,\r\n            limit: 0,\r\n          },\r\n          subTotal: 0,\r\n          total: 0,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n      if (date.getTime() !== today.getTime()) {\r\n        const endOfDay: number = new Date(\r\n          date.getFullYear(),\r\n          date.getMonth(),\r\n          date.getDate() + 1,\r\n          0,\r\n          0,\r\n          -1\r\n        ).getTime();\r\n\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: date.getTime(),\r\n          },\r\n          to: {\r\n            timestamp: endOfDay,\r\n            id: ``,\r\n            limit: endOfDay,\r\n          },\r\n          subTotal: endOfDay - entry.timestamp,\r\n          total: accum + endOfDay - entry.timestamp,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n    }\r\n  });\r\n\r\n  const reversed = biEntries.reverse();\r\n  let toLimit: number = dayEnd;\r\n\r\n  reversed.forEach((entry) => {\r\n    // entry.to!.limit = toLimit;\r\n    if (entry.to) {\r\n      entry.to.limit = toLimit;\r\n    }\r\n\r\n    toLimit = entry.from.timestamp;\r\n  });\r\n\r\n  return reversed;\r\n};\r\n\r\nexport const createFakeLastEntry = (entry: types.StopwatchEntry) => {\r\n  const newTimeStamp: number = new Date(\r\n    entry.year,\r\n    entry.month,\r\n    entry.day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  const newEntry = {\r\n    ...entry,\r\n    timestamp: newTimeStamp,\r\n  };\r\n\r\n  return newEntry;\r\n};\r\n\r\nexport async function getEntries(userDb: any, dates: types.CustomDate[]) {\r\n  const promises: Promise<any>[] = [];\r\n\r\n  dates.forEach((date) => {\r\n    const dailyEntries = createPromise(userDb, date.year, date.month, date.day);\r\n\r\n    promises.push(dailyEntries);\r\n  });\r\n\r\n  const responses = await Promise.all(promises);\r\n\r\n  return responses.map((res) => res.docs);\r\n}\r\n\r\nconst createPromise = (\r\n  userDb: any,\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n) => {\r\n  return userDb!\r\n    .collection(`entries`)\r\n    .where(\"year\", \"==\", year)\r\n    .where(\"month\", \"==\", month)\r\n    .where(\"day\", \"==\", day)\r\n    .orderBy(\"timestamp\", \"asc\")\r\n    .get();\r\n};\r\n\r\nexport function createDates(startDate: Date, days: number) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = startDate.getFullYear();\r\n  const month: number = startDate.getMonth();\r\n\r\n  for (let i = 0; i < days; i++) {\r\n    const day: number = startDate.getDate() - i;\r\n\r\n    if (day > 0) {\r\n      dates.push({\r\n        year: year,\r\n        month: month,\r\n        day: day,\r\n      });\r\n    }\r\n\r\n    if (day <= 0) {\r\n      const newDate: Date = new Date(year, month, day);\r\n\r\n      const newDay: number = newDate.getDate();\r\n      const newMonth: number = newDate.getMonth();\r\n      const newYear: number = newDate.getFullYear();\r\n\r\n      dates.push({\r\n        year: newYear,\r\n        month: newMonth,\r\n        day: newDay,\r\n      });\r\n    }\r\n  }\r\n\r\n  return dates;\r\n}\r\n\r\nexport function createDatesFromRange(dateRange: Date[]) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = dateRange[1].getFullYear();\r\n  const month: number = dateRange[1].getMonth();\r\n\r\n  // console.log(dateRange[0]);\r\n  // console.log(dateRange[1]);\r\n\r\n  const days: number =\r\n    (dateRange[1].getTime() - dateRange[0].getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n  // console.log(Math.round(days));\r\n\r\n  for (let i = 0; i < Math.round(days); i++) {\r\n    const day: number = dateRange[1].getDate() - i;\r\n\r\n    const newDate: Date = new Date(year, month, day);\r\n\r\n    const newDay: number = newDate.getDate();\r\n    const newMonth: number = newDate.getMonth();\r\n    const newYear: number = newDate.getFullYear();\r\n\r\n    dates.push({\r\n      year: newYear,\r\n      month: newMonth,\r\n      day: newDay,\r\n    });\r\n    // }\r\n  }\r\n\r\n  return dates;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./EntryEditForm.module.css\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as types from \"../../../Types\";\r\nimport {\r\n  timeStringFromTimestamp,\r\n  stringPlusDayToTimestamp,\r\n} from \"../../../HalperFunctions/General\";\r\nimport { reletiveTimestampToString } from \"../../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst EntryEditForm: React.FC<{\r\n  entry: types.CompleteEntry | null;\r\n  submitHandler: (newFrom: number, newTo: number) => void;\r\n}> = React.memo(({ entry, submitHandler }) => {\r\n  const [newFrom, setNewFrom] = useState<number>(entry!.from.timestamp);\r\n  const [newTo, setNewTo] = useState<number>(entry!.to.timestamp);\r\n  const [newSubTotal, setNewSubTotal] = useState<number>(newTo - newFrom);\r\n\r\n  const fromInitValue = new Date(entry!.from.timestamp);\r\n  const toInitValue = new Date(entry!.to.timestamp);\r\n\r\n  const initialValues: any = {\r\n    fromHour: fromInitValue.getHours(),\r\n    fromMinute: fromInitValue.getMinutes(),\r\n    fromSecond: fromInitValue.getSeconds(),\r\n    toHour: toInitValue.getHours(),\r\n    toMinute: toInitValue.getMinutes(),\r\n    toSecond: toInitValue.getSeconds(),\r\n  };\r\n\r\n  // console.log(`rendering form`, entry);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={(values) => {}}\r\n        validate={(values) => {\r\n          const errors: types.inputEditError = {\r\n            to: false,\r\n            from: false,\r\n          };\r\n\r\n          const fromInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.fromHour,\r\n            values.fromMinute,\r\n            values.fromSecond,\r\n            entry!.from.timestamp\r\n          );\r\n\r\n          const toInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.toHour,\r\n            values.toMinute,\r\n            values.toSecond,\r\n            entry!.to.timestamp\r\n          );\r\n\r\n          const isFromBiggerThanLimit: boolean =\r\n            fromInputTimestamp >= entry!.from.limit!;\r\n\r\n          const isFromSmallerThanTo: boolean =\r\n            fromInputTimestamp <= toInputTimestamp;\r\n\r\n          const isToSmallerThanLimit: boolean =\r\n            toInputTimestamp <= entry!.to.limit!;\r\n\r\n          const isToBiggerThanFrom: boolean =\r\n            toInputTimestamp > fromInputTimestamp;\r\n\r\n          if (!isFromBiggerThanLimit || !isFromSmallerThanTo) {\r\n            errors.from = true;\r\n          }\r\n\r\n          if (!isToBiggerThanFrom || !isToSmallerThanLimit) {\r\n            errors.to = true;\r\n          }\r\n\r\n          setNewFrom(fromInputTimestamp);\r\n          setNewTo(toInputTimestamp);\r\n          setNewSubTotal(toInputTimestamp - fromInputTimestamp);\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        {({ errors, values }) => (\r\n          <Form className={classes.Form}>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.from ? `red` : `green` }}\r\n            >\r\n              <label>From:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"fromHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                entry!.from.limit!\r\n              )} and ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.toHour,\r\n                  values.toMinute,\r\n                  values.toSecond,\r\n                  entry!.to.timestamp\r\n                )\r\n              )}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.to ? `red` : `green` }}\r\n            >\r\n              <label>To:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"toHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.fromHour,\r\n                  values.fromMinute,\r\n                  values.fromSecond,\r\n                  entry!.from.timestamp\r\n                )\r\n              )} and ${timeStringFromTimestamp(entry!.to.limit!)}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{\r\n                width: `100%`,\r\n                borderColor: errors.from ? `red` : `green`,\r\n              }}\r\n            >\r\n              <p style={{ fontWeight: \"normal\", width: `100%` }}>\r\n                Sub-Total: {reletiveTimestampToString(newSubTotal)}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => submitHandler(newFrom, newTo)}\r\n              type=\"submit\"\r\n              disabled={!!errors.to || !!errors.from}\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default EntryEditForm;\r\n","import React, { useContext } from \"react\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport * as types from \"../../../Types\";\r\nimport EntryEditForm from \"../StopwatchEntries/EntryEditForm\";\r\nimport { db } from \"../../../Firebase\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n// import DateContext from \"../../../Context/DateContext\";\r\n\r\nconst EntryEditModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  entry: types.CompleteEntry | null;\r\n  newEntryHandler: (timestamp: number) => void;\r\n  editHandler: (batch: types.Batch) => void;\r\n}> = ({ show, closeHandler, editHandler, entry, newEntryHandler }) => {\r\n  const userDb = useContext(DbContext);\r\n\r\n  // console.log(`rendering entry edit modal`, entry);\r\n\r\n  const submit = (from: number, to: number) => {\r\n    if (!entry?.index) {\r\n      newEntryHandler(from);\r\n      newEntryHandler(to);\r\n    } else {\r\n      changeEntry(from, to);\r\n    }\r\n    closeHandler();\r\n  };\r\n\r\n  const changeEntry = (from: number, to: number) => {\r\n    console.log(`change`);\r\n\r\n    const batch = db.batch();\r\n\r\n    const fromRef = userDb!.collection(`entries`).doc(entry!.from.id);\r\n    batch.update(fromRef, { timestamp: from });\r\n\r\n    if (entry!.to.id) {\r\n      const toRef = userDb!.collection(`entries`).doc(entry!.to.id);\r\n      batch.update(toRef, { timestamp: to });\r\n    }\r\n\r\n    if (!entry!.to.id) {\r\n      console.log(`do something else`);\r\n      newEntryHandler(to);\r\n    }\r\n\r\n    editHandler(batch);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div style={{ width: `100%`, height: `60px` }}>\r\n        Change the beginning and ending\r\n      </div>\r\n      <div style={{ width: `100%`, height: `max-content` }}>\r\n        <EntryEditForm entry={entry} submitHandler={submit} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EntryEditModal;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport { db } from \"../../../Firebase\";\r\nimport classes from \"./StopwatchEntries.module.css\";\r\n// import Entry from \"./StopwatchEntry/StopwatchEntry\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport BarChartPreamp from \"../../Charts/BarChart/BarChartPreAmp\";\r\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { rawEntriesToPairs } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport {\r\n  absoluteTimestampToString,\r\n  reletiveTimestampToString,\r\n} from \"../../../HalperFunctions/HandleStopwatches\";\r\nimport EntryEditModal from \"../EntryEditModal/EntryEditModal\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n\r\nconst Entries: React.FC<{\r\n  show: boolean;\r\n  entries: types.StopwatchEntry[];\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  closeHandler: () => void;\r\n}> = React.memo(({ entries, stopwatch, date, show, closeHandler }) => {\r\n  const [arrangedEntries, setArrangedEntries] = useState<types.ArrangedEntries>(\r\n    []\r\n  );\r\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\r\n\r\n  const [modalDisplay, setModalDisplay] = useState<boolean>(false);\r\n\r\n  const [EntryToEdit, setEntryToEdit] = useState<types.CompleteEntry | null>(\r\n    null\r\n  );\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  const [rows, setRows] = useState<any[]>([]);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Index\",\r\n      width: 30,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"from\",\r\n      headerName: \"From\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"to\",\r\n      headerName: \"To\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"subTotal\",\r\n      headerName: \"Sub-Total\",\r\n      width: 120,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      width: 100,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n  ];\r\n\r\n  // console.log(`rendering stopwatch entries`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setArrangedEntries([]);\r\n      setRows([]);\r\n      return;\r\n    }\r\n    const pairs = rawEntriesToPairs(entries, stopwatch.id, todaysDate!, date);\r\n    setArrangedEntries(pairs);\r\n    setRows(\r\n      pairs.map((pair, index) => {\r\n        if (!!pair.to.timestamp) {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: absoluteTimestampToString(pair.to.timestamp),\r\n            subTotal: reletiveTimestampToString(pair.subTotal),\r\n            total: reletiveTimestampToString(pair.total),\r\n          };\r\n        } else {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: `now`,\r\n            subTotal: `--:--:--`,\r\n            total: `--:--:--`,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }, [entries, stopwatch, todaysDate, date]);\r\n\r\n  const deleteHandler = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n\r\n    const entriesIds: string[] = [];\r\n    entriesIds.push(arrangedEntries[realIndex].from.id);\r\n\r\n    if (!!arrangedEntries[realIndex].to.id) {\r\n      entriesIds.push(arrangedEntries[realIndex].to!.id);\r\n    }\r\n\r\n    const batch: types.Batch = db.batch();\r\n\r\n    entriesIds.forEach((id) => {\r\n      const ref = userDb!.collection(`entries`).doc(id);\r\n\r\n      batch.delete(ref);\r\n    });\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`deleted`);\r\n        setSelectionModel([]);\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (batch: types.Batch) => {\r\n    console.log(batch);\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`we did it!`);\r\n        setModalDisplay(false);\r\n      })\r\n      .catch((err: any) => {\r\n        if (err) console.log(`try again`, err);\r\n      });\r\n  };\r\n\r\n  const newEntryHandler = (timestamp: number) => {\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n    setEntryToEdit(arrangedEntries[realIndex] as types.CompleteEntry);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalDisplay(false);\r\n  };\r\n\r\n  const addNewEntry = () => {\r\n    if (!!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0) return;\r\n\r\n    // console.log(`new`);\r\n    const startOfDay: number = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const endOfDay: number =\r\n      date.getTime() !== todaysDate!.getTime()\r\n        ? new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate() + 1\r\n          ).getTime()\r\n        : Date.now();\r\n\r\n    const from: number = !!arrangedEntries[0]\r\n      ? arrangedEntries[0].to.timestamp\r\n      : startOfDay;\r\n\r\n    const entryToEdit: types.CompleteEntry = {\r\n      stopwatchId: stopwatch.id,\r\n      from: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: from,\r\n      },\r\n      to: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: endOfDay,\r\n      },\r\n      subTotal: 0,\r\n      total: 0,\r\n      index: 0,\r\n    };\r\n\r\n    setEntryToEdit(entryToEdit);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div className={classes.Header}>\r\n        <BarChartPreamp entries={entries} stopwatch={stopwatch} date={date} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={classes.Entries}>\r\n          <ButtonGroup variant=\"text\" color=\"primary\">\r\n            <Button\r\n              disabled={selectionModel.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button disabled={selectionModel.length !== 1} onClick={handleOpen}>\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={addNewEntry}\r\n              disabled={\r\n                !!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0\r\n              }\r\n            >\r\n              New Entry\r\n            </Button>\r\n          </ButtonGroup>\r\n          <DataGrid\r\n            rows={rows}\r\n            rowHeight={30}\r\n            columns={columns}\r\n            pageSize={6}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              setSelectionModel(newSelectionModel);\r\n            }}\r\n            selectionModel={selectionModel}\r\n            headerHeight={40}\r\n          />\r\n          {modalDisplay ? (\r\n            <EntryEditModal\r\n              show={modalDisplay}\r\n              entry={EntryToEdit}\r\n              closeHandler={handleClose}\r\n              newEntryHandler={newEntryHandler}\r\n              editHandler={editHandler}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default Entries;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./Stopwatch.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport Clock from \"../../Clock/Clock\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport StopwatchEntries from \"../../Entries/StopwatchEntries/StopwatchEntries\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst Stopwatch = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [accum, setAccum] = useState<number>(0);\r\n  const [isRunning, setIsRunning] = useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = useState<number>(Date.now());\r\n\r\n  const todaysDate = useContext(DateContext);\r\n  const userDb = useContext(DbContext);\r\n\r\n  const [entries, setEntries] = useState<types.StopwatchEntry[]>([]);\r\n\r\n  useEffect(() => {\r\n    setEntries([]);\r\n    setIsRunning(false);\r\n    setAccum(0);\r\n\r\n    // console.log(userDb, props.user);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.stopwatch.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      const newEntries: types.StopwatchEntry[] = [];\r\n\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `stopwatchEntry`,\r\n        };\r\n        newEntries.push(entry);\r\n      });\r\n\r\n      setEntries(newEntries);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.stopwatch.id, props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setIsRunning(false);\r\n      setAccum(0);\r\n      return;\r\n    }\r\n\r\n    const even: boolean = !(entries.length % 2);\r\n    setIsRunning(!even);\r\n\r\n    const entriesTimestamps: number[] = entries.map((entry) => entry.timestamp);\r\n\r\n    if (!even) {\r\n      // console.log(`i shouldn't see this`);\r\n      if (props.date.getTime() === todaysDate!.getTime()) {\r\n        // console.log(`today`);\r\n        const firstEntry = entriesTimestamps.pop();\r\n        setLastEntry(firstEntry!);\r\n      }\r\n\r\n      if (props.date.getTime() !== todaysDate!.getTime()) {\r\n        setIsRunning(false);\r\n        entriesTimestamps.push(\r\n          new Date(\r\n            props.date.getFullYear(),\r\n            props.date.getMonth(),\r\n            props.date.getDate() + 1,\r\n            0,\r\n            0,\r\n            -1\r\n          ).getTime()\r\n        );\r\n      }\r\n    }\r\n\r\n    // console.log(entriesTimestamps);\r\n\r\n    let accum: number = 0;\r\n\r\n    entriesTimestamps.forEach((entry, index) => {\r\n      if (!(index % 2)) {\r\n        accum -= entry;\r\n      } else {\r\n        accum += entry;\r\n      }\r\n    });\r\n\r\n    setAccum(accum);\r\n  }, [entries, props.date, todaysDate]);\r\n\r\n  const mainButtonHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: props.stopwatch.id,\r\n        year: todaysDate!.getFullYear(),\r\n        month: todaysDate!.getMonth(),\r\n        day: todaysDate!.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.stopwatch.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.stopwatch.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.stopwatch.color}`\r\n        //   : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <button\r\n          className={classes.MainButton}\r\n          onClick={mainButtonHandler}\r\n          disabled={props.date.getTime() !== todaysDate!.getTime()}\r\n        >\r\n          <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n            <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n          </svg>\r\n        </button>\r\n        <h5 className={classes.Header}>{props.stopwatch.name}</h5>\r\n        <Clock isRunning={isRunning} accum={accum} lastEntry={lastEntry} />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n      <StopwatchEntries\r\n        show={false}\r\n        entries={entries}\r\n        stopwatch={props.stopwatch}\r\n        date={props.date}\r\n        closeHandler={() => {}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Stopwatch);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport classes from \"./Rater.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Rater = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [value, setValue] = useState<number | null>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.RaterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setValue(0);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.rater.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          value: data.value,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `raterEntry`,\r\n        };\r\n        setEntry(entry);\r\n        setValue(entry.value);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.rater.id, props.user]);\r\n\r\n  const rateHandler = (event: React.ChangeEvent<{}>, value: number | null) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          value: value,\r\n          timestamp: timestamp,\r\n          trackerId: props.rater.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `raterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ value: value })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.rater.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      style={{\r\n        borderColor: props.rater.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.rater.color}`\r\n        //   : `none`,\r\n      }}\r\n      className={trackerClasses.Tracker}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.rater.name}</h5>\r\n        <Rating\r\n          className={classes.Rating}\r\n          name={props.rater.id}\r\n          value={value}\r\n          onChange={rateHandler}\r\n          size=\"large\"\r\n          precision={0.5}\r\n        />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  rater: types.RaterType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Rater);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport classes from \"./Checker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Checker = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CheckerEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setIsChecked(false);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.checker.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `checkerEntry`,\r\n          checked: data.checked,\r\n        };\r\n\r\n        setEntry(entry);\r\n        setIsChecked(data.checked);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.checker.id, props.user]);\r\n\r\n  const checkerHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    const newIsChecked: boolean = isChecked ? false : true;\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timestamp,\r\n          trackerId: props.checker.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `checkerEntry`,\r\n          checked: newIsChecked,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ checked: newIsChecked })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n\r\n    props.selector(props.checker.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.checker.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.checker.color}`\r\n        //   : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.checker.name}</h5>\r\n        <div className={classes.CheckBox}>\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={checkerHandler}\r\n            // className=\"main-button\"\r\n            color=\"primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  checker: types.CheckerType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Checker);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport classes from \"./Counter.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport CounterIcon from \"../../Icons/CounterIcon\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Counter = (props: Props) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CounterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setCount(0);\r\n    setEntry(null);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.counter.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          count: data.count,\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `counterEntry`,\r\n        };\r\n        setCount(data.count);\r\n        setEntry(entry);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.counter.id, props.user]);\r\n\r\n  const changeCount = (newCount: number) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          count: newCount,\r\n          timestamp: timestamp,\r\n          trackerId: props.counter.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `counterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ count: newCount })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.counter.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.counter.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.counter.color}`\r\n        //   : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.counter.name}</h5>\r\n        <CounterIcon\r\n          count={count}\r\n          size={props.counter.size}\r\n          plus={changeCount}\r\n          minus={changeCount}\r\n        />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  counter: types.CounterType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Counter);\r\n","import React from \"react\";\r\nimport classes from \"./NewTrackerGuide.module.css\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { State } from \"../../Types\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Divider from \"../UI/Divider\";\r\nimport FakeTracker from \"../TrackersForm/FakeTracker/FakeTracker\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst trackersArray = [`stopwatch`, `counter`, `checker`, `rater`];\r\n\r\nconst NewUserGuide = (props: Props) => {\r\n  const [step, setStep] = React.useState<number>(1);\r\n\r\n  const [line, setLine] = React.useState<string | null>(`obj`);\r\n\r\n  const [answer1, setAnswer1] = React.useState<null | string>(null);\r\n  const [answer2, setAnswer2] = React.useState<null | string>(null);\r\n\r\n  const [trackers, setTrackers] = React.useState<Map<string, string>>(\r\n    new Map()\r\n  );\r\n\r\n  const [selected, setSelected] = React.useState<null | string>(null);\r\n\r\n  const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer1((event.target as HTMLInputElement).value);\r\n  };\r\n  const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer2((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const map: Map<string, string> = new Map();\r\n    map.set(`stopwatch`, `Recommended`);\r\n    map.set(`counter`, `Possible`);\r\n    map.set(`rater`, `Possible`);\r\n    map.set(`checker`, ``);\r\n\r\n    setTrackers(map);\r\n\r\n    return () => {\r\n      setStep(1);\r\n      setLine(`obj`);\r\n      setAnswer1(null);\r\n      setAnswer2(null);\r\n      setSelected(null);\r\n    };\r\n  }, [props]);\r\n\r\n  const handleToggle = (event: any) => {\r\n    if (event.target.closest(\".obj\")) {\r\n      setLine(`obj`);\r\n    }\r\n    if (event.target.closest(\".subj\")) {\r\n      setLine(`subj`);\r\n    }\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    const map: Map<string, string> = new Map();\r\n\r\n    if (step === 4) {\r\n      props.onFinish(selected!);\r\n      return;\r\n    }\r\n\r\n    if (step === 3) {\r\n      if (answer2 === `yes`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, `Recommended`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`counter`);\r\n      } else {\r\n        map.set(`stopwatch`, `Possible`);\r\n        map.set(`counter`, `Possible`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Recommended`);\r\n\r\n        setSelected(`checker`);\r\n      }\r\n      setStep(4);\r\n    }\r\n\r\n    if (step === 2) {\r\n      if (answer1 === `yes`) {\r\n        map.set(`stopwatch`, `Recommended`);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`stopwatch`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(3);\r\n      }\r\n    }\r\n\r\n    if (step === 1) {\r\n      if (line === `subj`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, `Recommended`);\r\n        map.set(`checker`, ``);\r\n\r\n        setSelected(`rater`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(2);\r\n      }\r\n    }\r\n\r\n    setTrackers(map);\r\n  };\r\n\r\n  const backHandler = () => {\r\n    if (step === 4) {\r\n      if (line === `subj`) {\r\n        setStep(1);\r\n      } else {\r\n        setStep(answer1 === `yes` ? 2 : 3);\r\n      }\r\n    } else {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const checkNext = () => {\r\n    let disabled: boolean;\r\n\r\n    switch (step) {\r\n      case 1:\r\n        disabled = !line;\r\n        break;\r\n      case 2:\r\n        disabled = !answer1;\r\n        break;\r\n      case 3:\r\n        disabled = !answer2;\r\n        break;\r\n      case 4:\r\n        disabled = !selected;\r\n        break;\r\n      default:\r\n        disabled = true;\r\n        break;\r\n    }\r\n\r\n    return disabled!;\r\n  };\r\n\r\n  let explanetion: string;\r\n\r\n  switch (line) {\r\n    case \"obj\":\r\n      explanetion = `i.e. Something that also an outsider looking at me could have measured`;\r\n      break;\r\n    case \"subj\":\r\n      explanetion = `i.e. Somebody looking from the outside couldn't tell, only i can know`;\r\n      break;\r\n    default:\r\n      explanetion = `Please select one`;\r\n  }\r\n\r\n  let body: any;\r\n\r\n  switch (step) {\r\n    case 1:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <div className={classes.Toggle}>\r\n            <h5>I want to track something</h5>\r\n            <div onClick={handleToggle} className={classes.Togglegroup}>\r\n              <button\r\n                style={{\r\n                  borderRadius: `10px 0px 0px 10px`,\r\n                  backgroundColor:\r\n                    line === `obj` ? `rgb(81, 229, 255)` : `white`,\r\n                }}\r\n                className=\"obj\"\r\n              >\r\n                objective\r\n              </button>\r\n              <div></div>\r\n              <button\r\n                style={{\r\n                  borderRadius: `0px 10px 10px 0px`,\r\n                  backgroundColor:\r\n                    line === `subj` ? `rgb(81, 229, 255)` : `white`,\r\n                }}\r\n                className=\"subj\"\r\n              >\r\n                subjective\r\n              </button>\r\n              <svg\r\n                className={classes.Arrow}\r\n                style={{\r\n                  right: line === `subj` ? `50px` : `150px`,\r\n                }}\r\n                width=\"20\"\r\n                height=\"20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <use href={`${icons}#caret-up-fill`} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p style={{ marginTop: `10px` }}>{explanetion}</p>\r\n        </div>\r\n      );\r\n      break;\r\n    case 2:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"fieldset\">\r\n            <h5>Does duration matter?</h5>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"controlled-radio-buttons-group\"\r\n              value={answer1}\r\n              onChange={handleChange1}\r\n            >\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's pretty much the same duration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Duration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    case 3:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"div\">\r\n            <h5>\r\n              Does iteration matter? <small>(i.e how many times...)</small>\r\n            </h5>\r\n            <RadioGroup value={answer2} onChange={handleChange2}>\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's the same iteration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Iteration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      body = (\r\n        <div className={classes.Card} style={{ boxShadow: `none` }}>\r\n          <h5>Choose a tracker:</h5>\r\n          <div className={classes.Options}>\r\n            {trackersArray.map((type, index) => {\r\n              let color: string;\r\n              let order: number;\r\n              let trackerColor: string;\r\n              let className;\r\n\r\n              switch (trackers.get(type)) {\r\n                case `Recommended`:\r\n                  color = `rgb(3, 219, 57)`;\r\n                  order = 1;\r\n                  className = classes.Recommended;\r\n                  break;\r\n                case `Possible`:\r\n                  color = `rgb(46, 196, 255)`;\r\n                  order = 2;\r\n                  className = classes.Possible;\r\n                  break;\r\n                default:\r\n                  color = `rgb(190, 190, 190)`;\r\n                  order = 4;\r\n                  className = classes.NotRec;\r\n                  break;\r\n              }\r\n\r\n              switch (type) {\r\n                case `stopwatch`:\r\n                  trackerColor = `rgb(152, 29, 135)`;\r\n                  break;\r\n                case `rater`:\r\n                  trackerColor = `rgb(12, 223, 238)`;\r\n                  break;\r\n                case `checker`:\r\n                  trackerColor = `rgb(12, 136, 238)`;\r\n                  break;\r\n                default:\r\n                  trackerColor = `rgb(236, 54, 141)`;\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    order: order,\r\n                    boxShadow:\r\n                      selected === type ? `1px 1px 20px 3px ${color}` : ``,\r\n                  }}\r\n                  onClick={() => setSelected(type)}\r\n                  className={`${classes.Option}  ${className}`}\r\n                >\r\n                  <h5 style={{ color: color }}>{trackers.get(type)}</h5>\r\n                  <FakeTracker\r\n                    type={type}\r\n                    color={trackerColor}\r\n                    name={type.slice(0, 1).toUpperCase() + type.slice(1)}\r\n                    size={0}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.NewUser}>\r\n      <div className={classes.Header}>\r\n        <h1>New Tracker Guide</h1>\r\n        <p>In just a minute, we'll choose the right Tracker type for you</p>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Body}>{body}</div>\r\n      <Divider />\r\n      <div className={classes.ButtonPanel}>\r\n        <button\r\n          onClick={backHandler}\r\n          disabled={step === 1}\r\n          className={classes.Back}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          disabled={checkNext()}\r\n          onClick={nextHandler}\r\n          className={classes.Next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  userName: state.userName,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  noActiveUser: () => actions.logout(),\r\n  onSignout: () => actions.setUserName(``),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  onClose: () => void;\r\n  onFinish: (type: string) => void;\r\n};\r\n\r\nexport default connector(NewUserGuide);\r\n","import React, { MutableRefObject } from \"react\";\r\nimport classes from \"./NewTracker.module.css\";\r\nimport FakeTracker from \"../TrackersForm/FakeTracker/FakeTracker\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Divider from \"../UI/Divider\";\r\n\r\nconst NewTracker = (props: Props) => {\r\n  const [selected, setSelected] = React.useState<string>(`rater`);\r\n  const [color, setColor] = React.useState<string>(`rgb(12, 223, 238)`);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      setSelected(`rater`);\r\n      setColor(`rgb(12, 223, 238)`);\r\n    };\r\n  }, [props]);\r\n\r\n  const trackers = [\r\n    {\r\n      name: `Rater`,\r\n      type: `rater`,\r\n      color: `rgb(12, 223, 238)`,\r\n    },\r\n    {\r\n      name: `Checker`,\r\n      type: `checker`,\r\n      color: `rgb(12, 136, 238)`,\r\n    },\r\n    {\r\n      name: `Stopwatch`,\r\n      type: `stopwatch`,\r\n      color: `rgb(152, 29, 135)`,\r\n    },\r\n    {\r\n      name: `Counter`,\r\n      type: `counter`,\r\n      color: `rgb(236, 54, 141)`,\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.Modal}>\r\n      <div className={classes.Header}>\r\n        <h1>Choose a Tracker type</h1>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Options}>\r\n        {trackers.map((tracker) => {\r\n          return (\r\n            <div\r\n              key={tracker.name}\r\n              className={classes.Option}\r\n              onClick={() => {\r\n                setSelected(tracker.type);\r\n                setColor(tracker.color);\r\n              }}\r\n            >\r\n              <div className={classes.Arrow}>\r\n                <svg\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  fill={tracker.color}\r\n                  color={tracker.type === selected ? tracker.color : `white`}\r\n                >\r\n                  <use href={`${icons}#caret-right-fill`} />\r\n                </svg>\r\n              </div>\r\n              <FakeTracker\r\n                type={tracker.type}\r\n                color={tracker.color}\r\n                name={tracker.name}\r\n                size={1}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.NotSure}>\r\n        <div className={classes.Large} style={{ backgroundColor: color }}>\r\n          <button onClick={props.onNotSure} className={classes.Left}>\r\n            Not Sure?\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              // props.colorRef.current = color;\r\n              props.onNext(selected);\r\n            }}\r\n            className={classes.Right}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  onNext: (type: string) => void;\r\n  onNotSure: () => void;\r\n  // colorRef: React.MutableRefObject<string>;\r\n};\r\n\r\nexport default NewTracker;\r\n","import React from \"react\";\r\n// import Auxiliary from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./InputField.module.css\";\r\n\r\nconst InputField = (props: Props) => {\r\n  const [value, setValue] = React.useState<string | number>(``);\r\n  const [touched, setTouched] = React.useState<boolean>(false);\r\n  const [error, setError] = React.useState<string>(``);\r\n\r\n  React.useEffect(() => {\r\n    setValue(props.value);\r\n  }, [props]);\r\n\r\n  const handleChange = (event: any) => {\r\n    setTouched(true);\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    let newError: string;\r\n    props.validators.forEach((validator) => {\r\n      newError = !!validator(newValue) ? validator(newValue) : newError;\r\n    });\r\n\r\n    setError(newError!);\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    props.submitHandler(value);\r\n  };\r\n\r\n  let borderColor: string = `rgb(0, 153, 255)`;\r\n  if (touched && !!error) borderColor = `red`;\r\n  if (props.readOnly) borderColor = `lightgrey`;\r\n\r\n  return (\r\n    <form\r\n      style={{ zIndex: props.readOnly ? 0 : 1 }}\r\n      onSubmit={handleSubmit}\r\n      className={classes.Form}\r\n    >\r\n      {props.type === `textarea` ? (\r\n        <textarea\r\n          style={{\r\n            borderColor: borderColor,\r\n            width: props.width ? props.width : \"max-content\",\r\n          }}\r\n          id={props.name}\r\n          value={value}\r\n          readOnly={props.readOnly}\r\n          onChange={handleChange}\r\n        />\r\n      ) : (\r\n        <input\r\n          style={{\r\n            borderColor: borderColor,\r\n            width: props.width ? props.width : \"\",\r\n          }}\r\n          id={props.name}\r\n          type={props.type}\r\n          value={value}\r\n          readOnly={props.readOnly}\r\n          onChange={handleChange}\r\n        />\r\n      )}\r\n      <div className={classes.Message}>\r\n        <p>{error}</p>\r\n      </div>\r\n      <button\r\n        style={{\r\n          display: props.readOnly ? `none` : `unset`,\r\n          bottom: props.type === `textarea` ? `10px` : `unset`,\r\n          top: props.type !== `textarea` ? `10px` : `unset`,\r\n        }}\r\n        disabled={!!error}\r\n        className={classes.Save}\r\n        type=\"submit\"\r\n      >\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  name: string;\r\n  width: string | undefined;\r\n  description: string;\r\n  type: string;\r\n  value: string | number;\r\n  validators: ((value: string | number) => string)[];\r\n  readOnly: boolean;\r\n  submitHandler: (value: string | number) => void;\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport classes from \"./Box.module.css\";\r\n// import Divider from \"../../UI/Divider\";\r\n\r\nconst Box: React.FC<{\r\n  display: boolean;\r\n  name: string;\r\n  label: string;\r\n  closable: boolean;\r\n  onClose: (name: string) => void;\r\n}> = (props) => {\r\n  if (!props.display) return null;\r\n\r\n  const handleClose = () => {\r\n    props.onClose(props.name);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Box}>\r\n      <button\r\n        style={{ display: props.closable ? `unset` : `none` }}\r\n        onClick={handleClose}\r\n        className={classes.Button}\r\n      >\r\n        x\r\n      </button>\r\n      <h5 className={classes.Label}>{props.label}</h5>\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport classes from \"./ColorPicker.module.css\";\r\nimport { CirclePicker, ChromePicker } from \"react-color\";\r\n\r\nconst ColorPicker = (props: Props) => {\r\n  const [type, setType] = React.useState<number>(0);\r\n\r\n  return (\r\n    <div className={classes.ColorPicker}>\r\n      <div className={classes.Switch}>\r\n        <button\r\n          style={{ backgroundColor: !type ? `rgb(231, 231, 231)` : `unset` }}\r\n          onClick={() => setType(0)}\r\n        >\r\n          Circles\r\n        </button>\r\n        <button\r\n          style={{ backgroundColor: !!type ? `rgb(231, 231, 231)` : `unset` }}\r\n          onClick={() => setType(280)}\r\n        >\r\n          Chrome\r\n        </button>\r\n      </div>\r\n      <div className={classes.Pickers}>\r\n        <div\r\n          className={classes.Slider}\r\n          style={{ transform: `translateX(-${type}px)` }}\r\n        >\r\n          <div className={classes.Picker}>\r\n            <CirclePicker\r\n              onChangeComplete={props.onChange}\r\n              color={props.color}\r\n            />\r\n          </div>\r\n          <div className={classes.Picker}>\r\n            <ChromePicker\r\n              onChangeComplete={props.onChange}\r\n              color={props.color}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  color: string;\r\n  onChange: (color: any) => void;\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport classes from \"./MessageModal.module.css\";\r\n\r\nconst MessageModal = (props: Props) => {\r\n  return (\r\n    <div className={classes.Backdrop}>\r\n      <div className={classes.Modal}>\r\n        <div className={classes.Message}>\r\n          <h2>{props.main}</h2>\r\n          <p>{props.sub}</p>\r\n        </div>\r\n        <div className={classes.ButtonPanel}>\r\n          <button className={classes.No} onClick={props.onNo}>\r\n            Cancel\r\n          </button>\r\n          <button className={classes.Yes} onClick={props.onYes}>\r\n            I'm sure\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  main: string;\r\n  sub: string;\r\n  onYes: () => void;\r\n  onNo: () => void;\r\n};\r\n\r\nexport default MessageModal;\r\n","import React from \"react\";\r\nimport classes from \"./ExpandedTracker.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport InputField from \"../../FormElements/InputField/InputField\";\r\n// import { CirclePicker } from \"react-color\";\r\nimport Box from \"../../UI/Box/Box\";\r\nimport * as actions from \"../../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DbRef } from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  QuerySnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Tracker, State } from \"../../../Types\";\r\nimport ColorPicker from \"../../FormElements/ColorPicker/ColorPicker\";\r\nimport MessageModal from \"../../UI/MessageModal/MessageModal\";\r\n// const initialBoxs = {\r\n//   description: true,\r\n// };\r\n\r\nconst ExpandedTracker = (props: Props) => {\r\n  // const [boxs, setBoxs] = React.useState<any>(initialBoxs);\r\n  const [fieldInEdit, setFieldInEdit] = React.useState<string>(``);\r\n  const [name, setName] = React.useState<string>(``);\r\n  const [type, setType] = React.useState<string>(``);\r\n  const [description, setDescription] = React.useState<string>(``);\r\n  const [color, setColor] = React.useState<string>(``);\r\n  const [stepSize, setStepSize] = React.useState<number>(1);\r\n  const [displayMessage, setDisplayMessage] = React.useState<boolean>(false);\r\n\r\n  const userDb = React.useContext(DbContext);\r\n\r\n  React.useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const trackersRef = collection(userDb!, \"trackers\");\r\n\r\n    const q = query(trackersRef, where(\"id\", \"==\", props.id));\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: QuerySnapshot) => {\r\n      snapshot.forEach((doc: any) => {\r\n        // console.log(`once`);\r\n        const tracker: Tracker = doc.data();\r\n\r\n        setName(tracker.name);\r\n        setType(tracker.type);\r\n        setDescription(tracker.description);\r\n        setColor(tracker.color);\r\n        setStepSize(tracker.size);\r\n      });\r\n    });\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [props, userDb]);\r\n\r\n  const handleCloseBox = (name: string) => {\r\n    // setBoxs({\r\n    //   ...boxs,\r\n    //   [name]: !boxs[name],\r\n    // });\r\n  };\r\n\r\n  const editField = (field: string) => {\r\n    setFieldInEdit(field);\r\n  };\r\n\r\n  const handleChangeColor = (color: any) => {\r\n    console.log(color.hex);\r\n    submitChange(`color`, color.hex);\r\n  };\r\n\r\n  const submitChange = (field: string, value: string | number) => {\r\n    props.updateField(userDb!, props.id, field, value);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setFieldInEdit(``);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setDisplayMessage(true);\r\n  };\r\n\r\n  const deleteTracker = () => {\r\n    props.deleteTracker(userDb!, props.id);\r\n    props.deleteEntries(userDb!, props.id);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Modal} style={{ borderColor: color }}>\r\n        <div className={classes.Field}>\r\n          <Box\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            closable={false}\r\n            display={true}\r\n            onClose={handleCloseBox}\r\n          >\r\n            <div className={classes.Header}>\r\n              <InputField\r\n                name=\"Name\"\r\n                value={name}\r\n                width={undefined}\r\n                description=\"the name and stuff\"\r\n                type=\"text\"\r\n                readOnly={fieldInEdit !== `name`}\r\n                submitHandler={(value: string | number) => {\r\n                  submitChange(`name`, value);\r\n                  setFieldInEdit(``);\r\n                }}\r\n                validators={[\r\n                  (value: string | number) => {\r\n                    return value.toString().length < 1\r\n                      ? `Must have a name`\r\n                      : ``;\r\n                  },\r\n                  (value: string | number) => {\r\n                    return value.toString().length > 19\r\n                      ? `Name cannot be longer than 20 characters`\r\n                      : ``;\r\n                  },\r\n                ]}\r\n              />\r\n              <p className={classes.HeaderType}>{type}</p>\r\n              <button className={classes.Pen} onClick={() => editField(`name`)}>\r\n                <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                  <use href={`${icons}#pen`} />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </Box>\r\n          <Box\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            closable={false}\r\n            display={true}\r\n            onClose={handleCloseBox}\r\n          >\r\n            <div className={classes.Description}>\r\n              <InputField\r\n                name=\"Description\"\r\n                value={description}\r\n                width={undefined}\r\n                description=\"the name and stuff\"\r\n                type=\"textarea\"\r\n                readOnly={fieldInEdit !== `description`}\r\n                submitHandler={(value: string | number) => {\r\n                  submitChange(`description`, value);\r\n                  setFieldInEdit(``);\r\n                }}\r\n                validators={[\r\n                  (value: string | number) => {\r\n                    return value.toString().length > 200\r\n                      ? `Description cannot be longer than 200 characters`\r\n                      : ``;\r\n                  },\r\n                ]}\r\n              />\r\n              <button\r\n                className={classes.Pen}\r\n                onClick={() => editField(`description`)}\r\n              >\r\n                <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                  <use href={`${icons}#pen`} />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </Box>\r\n          {type === `counter` ? (\r\n            <Box\r\n              label=\"Step Size\"\r\n              name=\"stepSize\"\r\n              closable={false}\r\n              display={true}\r\n              onClose={handleCloseBox}\r\n            >\r\n              <div className={classes.StepSize}>\r\n                <InputField\r\n                  name=\"Step Size\"\r\n                  value={stepSize}\r\n                  width=\"40px\"\r\n                  description=\"the name and stuff\"\r\n                  type=\"number\"\r\n                  readOnly={fieldInEdit !== `stepSize`}\r\n                  submitHandler={(value: string | number) => {\r\n                    submitChange(`size`, value);\r\n                    setFieldInEdit(``);\r\n                  }}\r\n                  validators={[\r\n                    (value: string | number) => {\r\n                      return value < 1 ? `Step size has to be at least 1` : ``;\r\n                    },\r\n                  ]}\r\n                />\r\n                <button\r\n                  className={classes.Pen}\r\n                  onClick={() => editField(`stepSize`)}\r\n                >\r\n                  <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                    <use href={`${icons}#pen`} />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </Box>\r\n          ) : null}\r\n        </div>\r\n        <Box\r\n          label=\"Color\"\r\n          name=\"actions\"\r\n          closable={false}\r\n          display={true}\r\n          onClose={handleCloseBox}\r\n        >\r\n          <div className={classes.Color}>\r\n            {/* <CirclePicker onChangeComplete={handleChangeColor} color={color} /> */}\r\n            <ColorPicker color={color} onChange={handleChangeColor} />\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          label=\"\"\r\n          name=\"actions\"\r\n          closable={false}\r\n          display={true}\r\n          onClose={handleCloseBox}\r\n        >\r\n          <div className={classes.ButtonPanel}>\r\n            {/* <button className={classes.EditButton}>Delete Entries</button> */}\r\n            <button onClick={handleDelete} className={classes.DeleteButton}>\r\n              Delete Tracker\r\n            </button>\r\n          </div>\r\n        </Box>\r\n        <div\r\n          style={{ display: fieldInEdit === `` ? `none` : `unset` }}\r\n          onClick={cancelEdit}\r\n          className={classes.Backdrop}\r\n        ></div>\r\n        {displayMessage ? (\r\n          <MessageModal\r\n            main=\"Are you Sure?\"\r\n            sub=\"This action cannot be reversed...\"\r\n            onYes={deleteTracker}\r\n            onNo={() => setDisplayMessage(false)}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTracker: (userDb: DbRef, id: string) =>\r\n    actions.deleteTracker(userDb, id),\r\n  deleteEntries: (userDb: DbRef, id: string) =>\r\n    actions.deleteEntries(userDb, id),\r\n  updateField: (\r\n    userDb: DbRef,\r\n    id: string,\r\n    field: string,\r\n    value: string | number\r\n  ) => actions.updateField(userDb, id, field, value),\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  id: string;\r\n  onClose: () => void;\r\n};\r\n\r\nexport default connector(ExpandedTracker);\r\n","import React, { useState, useContext } from \"react\";\r\nimport TrackersForm from \"../../Components/TrackersForm/TrackersForm\";\r\nimport SurveyFormModal from \"../../Components/SurveyForm/SurveyForm\";\r\nimport classes from \"./Trackers.module.css\";\r\nimport StopwatchElement from \"../../Components/Tracker/Stopwatch/Stopwatch\";\r\nimport RaterElement from \"../../Components/Tracker/Rater/Rater\";\r\nimport CheckerElement from \"../../Components/Tracker/Checker/Checker\";\r\nimport CounterElement from \"../../Components/Tracker/Counter/Counter\";\r\nimport * as types from \"../../Types\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport { useEffect } from \"react\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport NewTrackerGuide from \"../../Components/NewTrackerGuide/NewTrackerGuide\";\r\nimport NewTracker from \"../../Components/NewTracker/NewTracker\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { State } from \"../../Types\";\r\nimport ExpandedTracker from \"../../Components/Tracker/ExpandedTracker/ExpandedTracker\";\r\n\r\nconst Trackers = React.memo((props: Props) => {\r\n  const [modalTrackerDisplay, setModalTrackerDisplay] =\r\n    useState<boolean>(false);\r\n  const [modalSurveyDisplay, setModalSurveyDisplay] = useState<boolean>(false);\r\n  const todaysDate = useContext(DateContext);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n  const [displayNewTracker, setDisplayNewTracker] = useState<boolean>(false);\r\n\r\n  const [type, setType] = useState<string>(``);\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n  const [date, setDate] = useState<Date>(todaysDate!);\r\n  const [expandedModalDisplay, setExpandedModalDiaplay] =\r\n    useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (props.higherIsEmpty) {\r\n      setIsEmpty(true);\r\n      console.log(`is empty`);\r\n    }\r\n  }, [props.higherIsEmpty]);\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDate(todaysDate!);\r\n  }, [todaysDate]);\r\n\r\n  const handleClose = () => {\r\n    setModalTrackerDisplay(false);\r\n  };\r\n\r\n  const selectHandler = (id: string) => {\r\n    setSelected(id);\r\n    setExpandedModalDiaplay(true);\r\n  };\r\n\r\n  const finishGuide = (type: string) => {\r\n    setType(type);\r\n    setIsEmpty(false);\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  const openNewTracker = () => {\r\n    setDisplayNewTracker(true);\r\n  };\r\n\r\n  const handleChooseType = (type: string) => {\r\n    setDisplayNewTracker(false);\r\n    setType(type);\r\n    setSelected(null);\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  const handleNotSure = () => {\r\n    setDisplayNewTracker(false);\r\n    setIsEmpty(true);\r\n  };\r\n\r\n  const requestedHide = () => {\r\n    props.setValidateModal(\r\n      `You can always return to this guide through NEW TRACKER`,\r\n      () => {\r\n        setIsEmpty(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Trackers}>\r\n      <div className={classes.UpperContainer}>\r\n        <div className={classes.DatePicker}>\r\n          <DatePicker\r\n            maxDate={todaysDate!}\r\n            value={date}\r\n            locale=\"en-EN\"\r\n            onChange={setDate}\r\n            clearIcon={null}\r\n          />\r\n        </div>\r\n        <div className={classes.Container}>\r\n          <button onClick={openNewTracker} className={classes.NewTrackerButton}>\r\n            NEW TRACKER\r\n          </button>\r\n          {props.stopwatches.map((stopwatch) => (\r\n            <StopwatchElement\r\n              key={stopwatch.id}\r\n              stopwatch={stopwatch}\r\n              date={date}\r\n              selector={selectHandler}\r\n            />\r\n          ))}\r\n          {props.raters.map((rater) => (\r\n            <RaterElement\r\n              key={rater.id}\r\n              rater={rater}\r\n              selector={selectHandler}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {props.checkers.map((checker) => (\r\n            <CheckerElement\r\n              selector={selectHandler}\r\n              key={checker.id}\r\n              checker={checker}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {props.counters.map((counter) => (\r\n            <CounterElement\r\n              key={counter.id}\r\n              selector={selectHandler}\r\n              counter={counter}\r\n              date={date}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {modalTrackerDisplay ? (\r\n        <Modal show={true} onHide={handleClose}>\r\n          <TrackersForm onFinish={handleClose} type={type} />\r\n        </Modal>\r\n      ) : null}\r\n      <SurveyFormModal\r\n        show={modalSurveyDisplay}\r\n        closeHandler={() => setModalSurveyDisplay(false)}\r\n        checkers={props.checkers}\r\n        raters={props.raters}\r\n      />\r\n      <Modal show={isEmpty} onHide={requestedHide}>\r\n        <NewTrackerGuide\r\n          onFinish={finishGuide}\r\n          onClose={() => setIsEmpty(false)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        show={displayNewTracker}\r\n        onHide={() => setDisplayNewTracker(false)}\r\n      >\r\n        <NewTracker onNext={handleChooseType} onNotSure={handleNotSure} />\r\n      </Modal>\r\n      {expandedModalDisplay ? (\r\n        <Modal\r\n          show={expandedModalDisplay}\r\n          onHide={() => setExpandedModalDiaplay(false)}\r\n        >\r\n          <ExpandedTracker\r\n            id={selected!}\r\n            onClose={() => setExpandedModalDiaplay(false)}\r\n          />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  errorMessage: state.errorMessage,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setValidateModal: (message: string, func: () => void) =>\r\n    actions.setError(message, func),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  higherIsEmpty: boolean;\r\n};\r\n\r\nexport default connector(Trackers);\r\n","import React from \"react\";\r\nimport classes from \"./Label.module.css\";\r\n\r\nconst Label: React.FC<{\r\n  color: string;\r\n  name: string;\r\n  id: string;\r\n  selected: boolean;\r\n  selectHandler: (stopwatchId: string) => void;\r\n}> = React.memo(({ color, name, selectHandler, id, selected }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectHandler(id)}\r\n      className={classes.Label}\r\n      // style={{ transform: selected ? `translateX(20px)` : `none` }}\r\n    >\r\n      <div\r\n        // className=\"select\"\r\n        style={{\r\n          backgroundColor: selected ? color : `transparent`,\r\n          borderColor: color,\r\n        }}\r\n      ></div>\r\n      <p>{name}</p>\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Label;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./TrackerSelector.module.css\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Label from \"./Label/Label\";\r\nimport {\r\n  RaterType,\r\n  StopwatchType,\r\n  CheckerType,\r\n  Tracker,\r\n  CounterType,\r\n} from \"../../Types\";\r\n\r\nconst TrackerSelector: React.FC<{\r\n  raters: RaterType[];\r\n  stopwatches: StopwatchType[];\r\n  checkers: CheckerType[];\r\n  counters: CounterType[];\r\n  selectedTrackers: Tracker[];\r\n  handler: (trackerId: string) => void;\r\n}> = React.memo(\r\n  ({ checkers, raters, stopwatches, handler, selectedTrackers, counters }) => {\r\n    const [expanded, setExpanded] = useState<string[]>([\r\n      `stopwatches`,\r\n      `raters`,\r\n      `checkers`,\r\n      `counters`,\r\n    ]);\r\n\r\n    const handleToggle = (event: any, nodeIds: string[]) => {\r\n      setExpanded(nodeIds);\r\n    };\r\n\r\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\r\n      // console.log(nodeIds);\r\n      handler(nodeIds as unknown as string);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.TrackerSelector}>\r\n        <TreeView\r\n          defaultCollapseIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-up`} />\r\n            </svg>\r\n          }\r\n          defaultExpandIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-down`} />\r\n            </svg>\r\n          }\r\n          expanded={expanded}\r\n          selected={selectedTrackers.map((tracker) => tracker.id)}\r\n          onNodeToggle={handleToggle}\r\n          onNodeSelect={handleSelect}\r\n        >\r\n          <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n            {raters.map((rater) => (\r\n              <Label\r\n                key={rater.id}\r\n                color={rater.color}\r\n                name={rater.name}\r\n                id={rater.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(rater.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!raters.length ? <p>no raters yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"stopwatches\" label=\"Stopwatches\">\r\n            {stopwatches.map((stopwatch) => (\r\n              <Label\r\n                key={stopwatch.id}\r\n                color={stopwatch.color}\r\n                name={stopwatch.name}\r\n                id={stopwatch.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(stopwatch.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!stopwatches.length ? <p>no stopwatches yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n            {checkers.map((checker) => (\r\n              <Label\r\n                key={checker.id}\r\n                color={checker.color}\r\n                name={checker.name}\r\n                id={checker.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(checker.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!checkers.length ? <p>no checkers yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"counters\" label=\"Counters\">\r\n            {counters.map((counter) => (\r\n              <Label\r\n                key={counter.id}\r\n                color={counter.color}\r\n                name={counter.name}\r\n                id={counter.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(counter.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!counters.length ? <p>no counters yet...</p> : null}\r\n          </TreeItem>\r\n        </TreeView>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrackerSelector;\r\n","import React from \"react\";\r\nimport classes from \"./RangeSelector.module.css\";\r\n// import { Tabs, Tab } from \"react-bootstrap\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n// import { StopwatchType } from \"../../../../Types\";\r\n\r\nconst RangeSelector: React.FC<{\r\n  dateRange: Date[];\r\n  setDateRange: (Dates: Date[]) => void;\r\n  todaysDate: Date;\r\n}> = React.memo(({ dateRange, setDateRange, todaysDate }) => {\r\n  return (\r\n    <div className={classes.Selector} style={{ zIndex: 10000 }}>\r\n      <DateRangePicker\r\n        value={dateRange}\r\n        maxDate={todaysDate}\r\n        locale=\"en-EN\"\r\n        onChange={setDateRange}\r\n        clearIcon={null}\r\n        // className={classes.Calender}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RangeSelector;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarLineChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  datasets: types.BarChartDataset[];\r\n  labels: string[];\r\n  options: any;\r\n}> = React.memo(({ labels, datasets, options }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(datasets);\r\n      chartRef.current.data = {\r\n        labels: labels,\r\n        datasets: datasets,\r\n      };\r\n\r\n      chartRef.current.options = options;\r\n\r\n      chartRef.current.update();\r\n    }\r\n  }, [datasets, labels, options]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport BarLineChart from \"./BarLineChart\";\r\nimport { createFakeLastEntry } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport hexRgb from \"hex-rgb\";\r\n\r\n// import Checks from \"../../Checks/Checks\";\r\n\r\nconst BarLineChartPreAmp: React.FC<{\r\n  dateStrings: string[];\r\n  stopwatches: types.StopwatchType[];\r\n  stopwatchEntries: Map<string, types.StopwatchEntry[]>;\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  counterEntries: Map<string, types.CounterEntry[]>;\r\n  checkerEntries: Map<string, types.CheckerEntry[]>;\r\n  selectedTrackers: types.Tracker[];\r\n  raterEntries: Map<string, types.RaterEntry[]>;\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    selectedTrackers,\r\n    stopwatchEntries,\r\n    raters,\r\n    raterEntries,\r\n    dateStrings,\r\n    checkers,\r\n    counters,\r\n    counterEntries,\r\n    checkerEntries,\r\n  }) => {\r\n    const [trackerDatasets, setTrackerDatasets] = useState<\r\n      types.BarChartDataset[]\r\n    >([]);\r\n\r\n    const [options, setOptions] = useState<any>({});\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    useEffect(() => {\r\n      const newOptions: any = {\r\n        elements: {\r\n          point: {\r\n            radius: 1,\r\n          },\r\n        },\r\n        interaction: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        stacked: false,\r\n        scales: {\r\n          y: {\r\n            type: \"linear\",\r\n            display: false,\r\n            position: \"left\",\r\n            title: {\r\n              display: false,\r\n              // text: `Hours`,\r\n            },\r\n          },\r\n          y1: {\r\n            suggestedMax: 5,\r\n            ticks: {\r\n              stepSize: 1,\r\n            },\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"right\",\r\n            title: {\r\n              display: true,\r\n              text: `Rating`,\r\n            },\r\n            grid: {\r\n              drawOnChartArea: true,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            enabled: false,\r\n            displayColors: false,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      if (!selectedTrackers.length) {\r\n        setTrackerDatasets([\r\n          {\r\n            data: [0, 0, 0, 0, 0, 0, 0],\r\n            backgroundColor: `black`,\r\n            borderColor: `black`,\r\n            type: `bar`,\r\n            stepped: false,\r\n            order: 1,\r\n            yAxisID: \"y\",\r\n            tension: 1,\r\n          },\r\n        ]);\r\n        setOptions(newOptions);\r\n        return;\r\n      }\r\n\r\n      const datasets: types.BarChartDataset[] = [];\r\n\r\n      stopwatches.forEach((stopwatch) => {\r\n        if (\r\n          !selectedTrackers.map((tracker) => tracker.id).includes(stopwatch.id)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        newOptions.scales.y.display = true;\r\n        newOptions.scales.y.suggestedMax = 4;\r\n        newOptions.scales.y.title = {\r\n          display: true,\r\n          text: `Hours`,\r\n        };\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        stopwatchEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === stopwatch.id\r\n          );\r\n\r\n          if (filteredEntries.length % 2) {\r\n            const lastEntry: types.StopwatchEntry =\r\n              filteredEntries[filteredEntries.length - 1];\r\n\r\n            const dayOfEntry: Date = new Date(\r\n              lastEntry.year,\r\n              lastEntry.month,\r\n              lastEntry.day\r\n            );\r\n\r\n            const isToday: boolean =\r\n              dayOfEntry.getTime() === todaysDate!.getTime();\r\n\r\n            if (!isToday) {\r\n              const fakeLastEntry: types.StopwatchEntry =\r\n                createFakeLastEntry(lastEntry);\r\n              filteredEntries.push(fakeLastEntry);\r\n            }\r\n\r\n            if (isToday) {\r\n              filteredEntries.push({\r\n                ...lastEntry,\r\n                timestamp: Date.now(),\r\n              });\r\n            }\r\n          }\r\n\r\n          let accum: number = 0;\r\n\r\n          filteredEntries.forEach((entry, index) => {\r\n            if (index % 2 === 0) {\r\n              accum -= entry.timestamp;\r\n            } else {\r\n              accum += entry.timestamp;\r\n            }\r\n          });\r\n\r\n          const hours: number = accum / (1000 * 60 * 60);\r\n\r\n          // days.unshift(key);\r\n          totals.unshift(hours);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: stopwatch.color,\r\n          borderColor: stopwatch.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      raters.forEach((rater) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(rater.id))\r\n          return;\r\n\r\n        const totals: (number | null)[] = [];\r\n\r\n        raterEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === rater.id\r\n          );\r\n\r\n          const value: number | undefined =\r\n            filteredEntries[filteredEntries.length - 1]?.value;\r\n          totals.unshift(value ? value : null);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: rater.color,\r\n          borderColor: rater.color,\r\n          type: `line`,\r\n          stepped: false,\r\n          order: 0,\r\n          yAxisID: \"y1\",\r\n          tension: 0.4,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      checkers.forEach((checker) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(checker.id))\r\n          return;\r\n        newOptions.scales.y.display = false;\r\n        newOptions.scales.y1.grid.drawOnChartArea = true;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        checkerEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === checker.id\r\n          )[0];\r\n          // days.unshift(key);\r\n          totals.unshift(filteredEntry?.checked ? 1 : 0);\r\n        });\r\n\r\n        const rgb = hexRgb(checker.color);\r\n        // console.log(rgb);\r\n\r\n        const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: color,\r\n          borderColor: checker.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      counters.forEach((counter) => {\r\n        newOptions.scales.y.display = true;\r\n\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(counter.id))\r\n          return;\r\n        newOptions.scales.y.suggestedMax = counter.size;\r\n        newOptions.scales.y.title.text = `Count`;\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        counterEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === counter.id\r\n          )[0];\r\n          const count: number | undefined = filteredEntry?.count;\r\n          totals.unshift(count ? count : 0);\r\n        });\r\n\r\n        // const rgb = hexRgb(counter.color);\r\n        // // console.log(rgb);\r\n\r\n        // const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: counter.color,\r\n          borderColor: counter.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n\r\n      setTrackerDatasets(datasets);\r\n      setOptions(newOptions);\r\n    }, [\r\n      stopwatchEntries,\r\n      selectedTrackers,\r\n      stopwatches,\r\n      raterEntries,\r\n      raters,\r\n      checkers,\r\n      checkerEntries,\r\n      counters,\r\n      counterEntries,\r\n      todaysDate,\r\n    ]);\r\n\r\n    return (\r\n      <div style={{ display: `flex`, flexFlow: `column` }}>\r\n        <BarLineChart\r\n          datasets={trackerDatasets}\r\n          labels={dateStrings}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BarLineChartPreAmp;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport * as types from \"../../Types\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport BarLineChartPreAmp from \"./BarLineChart/BarLineChartPreAmp\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport {\r\n  getEntries,\r\n  createDatesFromRange,\r\n} from \"../../HalperFunctions/ArrangeEntries\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst ChartSelect: React.FC<{\r\n  dateRange: Date[];\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  selectedTrackers: types.Tracker[];\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    checkers,\r\n    raters,\r\n    selectedTrackers,\r\n    dateRange,\r\n    counters,\r\n  }) => {\r\n    const [stopwatchEntries, setStopwatchEntries] = useState<\r\n      Map<string, types.StopwatchEntry[]>\r\n    >(new Map());\r\n    const [checkerEntries, setCheckerEntries] = useState<\r\n      Map<string, types.CheckerEntry[]>\r\n    >(new Map());\r\n    const [raterEntries, setRaterEntries] = useState<\r\n      Map<string, types.RaterEntry[]>\r\n    >(new Map());\r\n    const [counterEntries, setCounterEntries] = useState<\r\n      Map<string, types.CounterEntry[]>\r\n    >(new Map());\r\n    const [dateStrings, setDateStrings] = useState<string[]>([]);\r\n    // const [barLineChart, setBarLineChart] = useState({\r\n    //   display: true,\r\n    //   disabled: false,\r\n    // });\r\n    // const [pieChart, setPieChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n    // const [areaChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n\r\n    const userDb = useContext(DbContext);\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    console.log(`rendering chart selector`);\r\n\r\n    // useEffect(() => {\r\n    //   const fromTimestamp: number = dateRange[0].getTime();\r\n    //   const toTimestamp: number = dateRange[1].getTime();\r\n    //   const dayLengthInMilli: number = 24 * 60 * 60 * 1000;\r\n\r\n    //   if (fromTimestamp + dayLengthInMilli > toTimestamp) {\r\n    //     setPieChart({\r\n    //       display: true,\r\n    //       disabled: false,\r\n    //     });\r\n    //   } else {\r\n    //     setPieChart({\r\n    //       display: false,\r\n    //       disabled: true,\r\n    //     });\r\n    //   }\r\n    // }, [dateRange]);\r\n\r\n    useEffect(() => {\r\n      const dates = createDatesFromRange(dateRange);\r\n      const dateStrings = dates.map((date) => `${date.day}/${date.month + 1}`);\r\n\r\n      setDateStrings(dateStrings.reverse());\r\n\r\n      const weekMapStopwatch: Map<string, types.StopwatchEntry[]> = new Map();\r\n      const weekMapRater: Map<string, types.RaterEntry[]> = new Map();\r\n      const weekMapChecker: Map<string, types.CheckerEntry[]> = new Map();\r\n      const weekMapCounter: Map<string, types.CounterEntry[]> = new Map();\r\n\r\n      getEntries(userDb, dates).then((res) => {\r\n        res.forEach((day: any[], index) => {\r\n          const stopwatchEntries: types.StopwatchEntry[] = [];\r\n          const raterEntries: types.RaterEntry[] = [];\r\n          const checkerEntries: types.CheckerEntry[] = [];\r\n          const counterEntries: types.CounterEntry[] = [];\r\n\r\n          day.forEach((doc) => {\r\n            const entry: types.Entry = doc.data();\r\n\r\n            switch (entry.type) {\r\n              case `stopwatchEntry`:\r\n                stopwatchEntries.push(entry as types.StopwatchEntry);\r\n                break;\r\n              case `raterEntry`:\r\n                raterEntries.push(entry as types.RaterEntry);\r\n                break;\r\n              case `counterEntry`:\r\n                counterEntries.push(entry as types.CounterEntry);\r\n                break;\r\n              default:\r\n                checkerEntries.push(entry as types.CheckerEntry);\r\n                break;\r\n            }\r\n          });\r\n\r\n          weekMapStopwatch.set(dateStrings[index], stopwatchEntries);\r\n          weekMapRater.set(dateStrings[index], raterEntries);\r\n          weekMapChecker.set(dateStrings[index], checkerEntries);\r\n          weekMapCounter.set(dateStrings[index], counterEntries);\r\n        });\r\n\r\n        setStopwatchEntries(weekMapStopwatch);\r\n        setRaterEntries(weekMapRater);\r\n        setCheckerEntries(weekMapChecker);\r\n        setCounterEntries(weekMapCounter);\r\n      });\r\n    }, [todaysDate, userDb, dateRange]);\r\n\r\n    return (\r\n      <div style={{ marginLeft: `4px` }}>\r\n        {/* <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={barLineChart.display}\r\n                disabled={barLineChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: barLineChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"barLineChart\"\r\n              />\r\n            }\r\n            label=\"Bar Line Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={pieChart.display}\r\n                disabled={pieChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: pieChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"pieChart\"\r\n              />\r\n            }\r\n            label=\"Pie Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={areaChart.display}\r\n                disabled={areaChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: areaChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"areaChart\"\r\n              />\r\n            }\r\n            label=\"Area Chart\"\r\n          />\r\n        </FormGroup> */}\r\n        <BarLineChartPreAmp\r\n          stopwatchEntries={stopwatchEntries}\r\n          checkerEntries={checkerEntries}\r\n          raterEntries={raterEntries}\r\n          counterEntries={counterEntries}\r\n          stopwatches={stopwatches}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          selectedTrackers={selectedTrackers}\r\n          dateStrings={dateStrings}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ChartSelect;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport classes from \"./DataPanel.module.css\";\r\nimport * as types from \"../../Types\";\r\n\r\nimport TrackerSelector from \"../../Components/TrackerSelector/TrackerSelector\";\r\nimport RangeSelector from \"../../Components/TimeRange/RangeSelector\";\r\nimport ChartSelect from \"../../Components/Charts/ChartSelect\";\r\nimport DateContext from \"../../Context/DateContext\";\r\n// import icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst DataPanel: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const todaysDate = useContext(DateContext);\r\n  // console.log(checkers);\r\n  // const [position, setPosition] = useState<string>(`left`);\r\n\r\n  const [selectedTrackers, setSelectedTrackers] = useState<types.Tracker[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!stopwatches.length || !raters.length) return;\r\n\r\n    setSelectedTrackers([raters[0], stopwatches[0]]);\r\n  }, [stopwatches, raters]);\r\n\r\n  // console.log(selectedTrackers);\r\n  const [dateRange, setDateRange] = useState<Date[]>([new Date(), new Date()]);\r\n\r\n  console.log(`rendering DataPanel`);\r\n\r\n  // const changePosition = () => {\r\n  //   const newPosition = position === `left` ? `right` : `left`;\r\n\r\n  //   setPosition(newPosition);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDateRange([\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 7\r\n      ),\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate()\r\n      ),\r\n    ]);\r\n  }, [todaysDate]);\r\n\r\n  const selectTracker = (trackerId: string) => {\r\n    // console.log(trackerId);\r\n    let isSelected: boolean = false;\r\n    let newTrackers: types.Tracker[] = [];\r\n\r\n    const allTrackers: types.Tracker[] = [\r\n      ...stopwatches,\r\n      ...raters,\r\n      ...checkers,\r\n      ...counters,\r\n    ];\r\n\r\n    const tracker: types.Tracker = allTrackers.filter(\r\n      (tracker) => trackerId === tracker.id\r\n    )[0];\r\n\r\n    // console.log(tracker);\r\n\r\n    if (!tracker) return;\r\n\r\n    selectedTrackers.forEach((tracker) => {\r\n      if (tracker.id === trackerId) isSelected = true;\r\n    });\r\n\r\n    if (isSelected) {\r\n      newTrackers = selectedTrackers.filter(\r\n        (selected) => selected.id !== trackerId\r\n      );\r\n    }\r\n    if (!isSelected) {\r\n      newTrackers = [...selectedTrackers, tracker];\r\n\r\n      if (tracker.type === `stopwatch`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) => tracker.type !== `checker` && tracker.type !== `counter`\r\n        );\r\n      }\r\n\r\n      if (tracker.type === `checker`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `counter`\r\n        );\r\n      }\r\n      if (tracker.type === `counter`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `checker`\r\n        );\r\n      }\r\n    }\r\n    setSelectedTrackers(newTrackers);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.DataPanel}>\r\n      <RangeSelector\r\n        todaysDate={todaysDate!}\r\n        dateRange={dateRange}\r\n        setDateRange={setDateRange}\r\n      />\r\n      <div className={classes.Main}>\r\n        <TrackerSelector\r\n          raters={raters}\r\n          stopwatches={stopwatches}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          handler={selectTracker}\r\n          selectedTrackers={selectedTrackers}\r\n        />\r\n        <ChartSelect\r\n          dateRange={dateRange}\r\n          stopwatches={stopwatches}\r\n          selectedTrackers={selectedTrackers}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DataPanel;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Trackers from \"./Containers/TrackerContainer/TrackerContainer\";\r\nimport { collection, onSnapshot, QuerySnapshot } from \"firebase/firestore\";\r\nimport DataPanel from \"./Containers/DataPanel/DataPanel\";\r\nimport classes from \"./Components/UI/General.module.css\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport { State } from \"./Types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Rater,\r\n  Stopwatch,\r\n  Checker,\r\n  Counter,\r\n  // trackerConverter,\r\n} from \"./HalperFunctions/CreateTrackers\";\r\nimport DbContext from \"./Context/DbContext\";\r\nimport DateContext from \"./Context/DateContext\";\r\nimport * as types from \"./Types\";\r\n// import Footer from \"./Components/Footer/Footer\"\r\n// import LoginModal from \"./Components/AuthModals/LoginModal/LoginModal\";\r\n\r\nconst Control = (props: PropsFromRedux) => {\r\n  const [stopwatches, setStopwatches] = useState<Stopwatch[]>([]);\r\n  const [raters, setRaters] = useState<Rater[]>([]);\r\n  const [checkers, setCheckers] = useState<Checker[]>([]);\r\n  const [counters, setCounters] = useState<Counter[]>([]);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n\r\n  const userDb = useContext(DbContext);\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(userDb!, \"trackers\"),\r\n      {},\r\n      (snapshot: QuerySnapshot) => {\r\n        const stopwatches: Stopwatch[] = [];\r\n        const raters: Rater[] = [];\r\n        const checkers: Checker[] = [];\r\n        const counters: Counter[] = [];\r\n\r\n        // console.log(snapshot.empty);\r\n        if (snapshot.empty) {\r\n          setIsEmpty(true);\r\n        }\r\n\r\n        snapshot.forEach((doc: any) => {\r\n          const tracker: types.Tracker = doc.data();\r\n\r\n          switch (tracker.type) {\r\n            case `stopwatch`:\r\n              stopwatches.push(tracker);\r\n              break;\r\n            case `rater`:\r\n              raters.push(tracker);\r\n              break;\r\n            case `counter`:\r\n              counters.push(tracker);\r\n              break;\r\n            default:\r\n              checkers.push(tracker);\r\n              break;\r\n          }\r\n        });\r\n        setStopwatches(stopwatches);\r\n        setCheckers(checkers);\r\n        setRaters(raters);\r\n        setCounters(counters);\r\n      }\r\n    );\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.user]);\r\n\r\n  let dataPanel = null;\r\n  let trackersEl = null;\r\n\r\n  if (!!todaysDate && props.user) {\r\n    dataPanel = (\r\n      <DataPanel\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n    trackersEl = (\r\n      <Trackers\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n        higherIsEmpty={isEmpty}\r\n      />\r\n    );\r\n  }\r\n\r\n  let view = trackersEl;\r\n\r\n  if (props.selectedView === `data`) view = dataPanel;\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.Background}>{view}</div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  selectedView: state.selectedView,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Control);\r\n"],"sourceRoot":""}