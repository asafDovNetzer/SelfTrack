{"version":3,"sources":["Components/Tracker/Tracker.module.css","Components/UI/Divider.tsx","Components/Tracker/Stopwatch/Stopwatch.module.css","Components/Tracker/Rater/Rater.module.css","Components/Tracker/Checker/Checker.module.css","Components/Tracker/Counter/Counter.module.css","Components/TrackersForm/TrackersForm.module.css","Components/SurveyForm/SurveyForm.module.css","Containers/TrackerContainer/Trackers.module.css","Components/Entries/StopwatchEntries/StopwatchEntries.module.css","Components/Charts/BarChart/BarChartPreAmp.module.css","Components/Charts/BarChart/BarChart.module.css","Components/Entries/StopwatchEntries/EntryEditForm.module.css","Components/NewUserGuide/NewUserGuide.module.css","Containers/DataPanel/DataPanel.module.css","Components/TrackerSelector/TrackerSelector.module.css","Components/TrackerSelector/Label/Label.module.css","Components/TimeRange/RangeSelector.module.css","Components/Charts/BarLineChart/BarLineChart.module.css","Components/TrackersForm/TrackersForm.tsx","Components/SurveyForm/SurveyForm.tsx","HalperFunctions/HandleStopwatches.tsx","Components/Clock/Clock.tsx","Components/Charts/BarChart/BarChart.tsx","Components/Charts/BarChart/BarChartPreAmp.tsx","HalperFunctions/ArrangeEntries.tsx","Components/Entries/StopwatchEntries/EntryEditForm.tsx","Components/Entries/EntryEditModal/EntryEditModal.tsx","Components/Entries/StopwatchEntries/StopwatchEntries.tsx","Components/Tracker/Stopwatch/Stopwatch.tsx","Components/Tracker/Rater/Rater.tsx","Components/Tracker/Checker/Checker.tsx","Components/Tracker/Counter/Counter.tsx","Components/TrackersForm/FakeTracker/FakeTracker.tsx","Components/NewUserGuide/NewUserGuide.tsx","Containers/TrackerContainer/TrackerContainer.tsx","Components/TrackerSelector/Label/Label.tsx","Components/TrackerSelector/TrackerSelector.tsx","Components/TimeRange/RangeSelector.tsx","Components/Charts/BarLineChart/BarLineChart.tsx","Components/Charts/BarLineChart/BarLineChartPreAmp.tsx","Components/Charts/ChartSelect.tsx","Containers/DataPanel/DataPanel.tsx","Control.tsx"],"names":["module","exports","Divider","style","width","height","backgroundImage","TrackersForm","React","memo","props","useState","color","setColor","userDb","useContext","DbContext","useEffect","selected","formik","useFormik","initialValues","name","description","size","toString","validationSchema","yup","max","required","positive","onSubmit","values","console","log","attemptSubmition","createNewTracker","type","updateTracker","id","closeForm","onFinish","display","className","classes","Form","handleSubmit","Field","TextField","inputProps","autoComplete","form","label","variant","placeholder","value","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","maxRows","ColorField","onChangeComplete","hex","disabled","FloatingButton","submitionState","Spinner","mapDispatchToProps","actions","connector","connect","state","not","a","b","filter","includes","intersection","SurveyFormModal","show","closeHandler","checkers","raters","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","expanded","setExpanded","setName","handleToggle","currentIndex","indexOf","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","expand","event","nodeIds","customList","title","Card","CardHeader","avatar","Checkbox","onClick","indeterminate","subheader","TreeView","defaultCollapseIcon","fill","href","icons","defaultExpandIcon","onNodeToggle","TreeItem","nodeId","tracker","map","rater","ListItem","role","button","ListItemIcon","disableRipple","ListItemText","primary","checker","formElement","target","Transfer","Movers","Button","concat","Modal","onHide","Header","Body","Footer","collection","add","trackers","then","catch","err","reletiveTimestampToString","timestamp","outputInSeconds","Math","round","seconds","padStart","minutes","floor","hours","absoluteTimestampToString","date","Date","getSeconds","getMinutes","getHours","Clock","accum","isRunning","lastEntry","output","setOutput","gap","setGap","tick","useCallback","now","interval","window","setInterval","clearInterval","outputString","margin","textAlign","fontWeight","BarChart","chartData","chartRef","useRef","canvasCallback","canvas","ctx","getContext","current","Chart","data","datasets","options","aspectRatio","scales","x","stacked","grid","ticks","stepSize","callback","y","indexAxis","e","chart","config","_config","dataset","_active","datasetIndex","index","elements","bar","borderWidth","barThickness","responsive","plugins","legend","tooltip","enabled","labels","update","ref","BarChartPreamp","stopwatch","entries","nowTimestamp","setNowTimestamp","setDatasets","datasetsArray","dayStart","getFullYear","getMonth","getDate","getTime","dayEnd","stopwatchEntries","entry","currentTimestamp","forEach","setBackgroundColor","backgroundColor","barChart","dates","promises","dailyEntries","createPromise","year","month","day","Promise","all","responses","res","docs","where","orderBy","get","EntryEditForm","submitHandler","from","newFrom","setNewFrom","to","newTo","setNewTo","newSubTotal","setNewSubTotal","fromInitValue","toInitValue","fromHour","fromMinute","fromSecond","toHour","toMinute","toSecond","validate","fromInputTimestamp","stringPlusDayToTimestamp","toInputTimestamp","isFromBiggerThanLimit","limit","isFromSmallerThanTo","isToSmallerThanLimit","isToBiggerThanFrom","borderColor","min","Limit","timeStringFromTimestamp","EntryEditModal","editHandler","newEntryHandler","changeEntry","batch","db","fromRef","doc","toRef","Entries","arrangedEntries","setArrangedEntries","selectionModel","setSelectionModel","modalDisplay","setModalDisplay","EntryToEdit","setEntryToEdit","todaysDate","DateContext","rows","setRows","pairs","stopwatchId","today","biEntries","fromLimit","count","pop","subTotal","entryId","biEntry","total","endOfDay","reversed","reverse","toLimit","rawEntriesToPairs","pair","body","ButtonGroup","realIndex","entriesIds","delete","commit","startOfDay","entryToEdit","rowHeight","columns","field","headerName","sortable","filterable","editable","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","headerHeight","trackerId","user","setAccum","setIsRunning","setLastEntry","setEntries","entriesRef","q","query","onSnapshot","snapshot","newEntries","even","entriesTimestamps","firstEntry","closest","selector","trackerClasses","Tracker","boxShadow","isSelected","Content","MainButton","ExpandButton","StopwatchEntries","setValue","setEntry","Rating","precision","isChecked","setIsChecked","CheckBox","newIsChecked","setCount","counter","changeCount","newCount","Buttons","FakeTracker","trackerElement","stopwatchClasses","checkerClasses","counterClasses","raterClasses","defaultValue","trackersArray","noActiveUser","onSignout","userName","step","setStep","line","setLine","answer1","setAnswer1","answer2","setAnswer2","Map","setTrackers","setSelected","set","explanetion","Toggle","Togglegroup","borderRadius","FormControl","component","RadioGroup","aria-label","RadioOptions","FormControlLabel","control","Radio","Options","order","Recommended","Possible","NotRec","Option","slice","toUpperCase","NewUser","ButtonPanel","LeftButtons","Back","onClose","Skip","checkNext","Next","Trackers","stopwatches","counters","higherIsEmpty","modalTrackerDisplay","setModalTrackerDisplay","modalSurveyDisplay","setModalSurveyDisplay","anchorEl","setAnchorEl","displayMenu","setDisplayMenu","isEmpty","setIsEmpty","setType","setDate","handleChoose","outerText","toLowerCase","handleClose","selectHandler","Top","DatePicker","maxDate","locale","clearIcon","Container","ControlPanel","currentTarget","Menu","keepMounted","open","MenuItem","deleteTracker","SurveyForm","Label","TrackerSelector","handler","selectedTrackers","onNodeSelect","RangeSelector","dateRange","setDateRange","Selector","zIndex","BarLineChartPreAmp","raterEntries","dateStrings","counterEntries","checkerEntries","trackerDatasets","setTrackerDatasets","setOptions","newOptions","point","radius","interaction","mode","intersect","position","y1","suggestedMax","text","drawOnChartArea","displayColors","stepped","yAxisID","tension","totals","filteredEntries","isToday","fakeLastEntry","newTimeStamp","createFakeLastEntry","unshift","filteredEntry","rgb","hexRgb","red","green","blue","flexFlow","BarLineChart","ChartSelect","setStopwatchEntries","setCheckerEntries","setRaterEntries","setCounterEntries","setDateStrings","days","i","newDate","newDay","newMonth","newYear","createDatesFromRange","weekMapStopwatch","weekMapRater","weekMapChecker","weekMapCounter","getEntries","marginLeft","DataPanel","setSelectedTrackers","Main","newTrackers","selectedView","setStopwatches","setRaters","setCheckers","setCounters","unsubscribe","empty","dataPanel","trackersEl","view","Background"],"mappings":"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","file":"static/js/4.cf6d5b5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tracker\":\"Tracker_Tracker__3ovyp\"};","const Divider = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `100%`,\r\n        height: `1px`,\r\n        backgroundImage: `linear-gradient(to right, white, grey, white)`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExpandButton\":\"Stopwatch_ExpandButton__3TVfW\",\"Content\":\"Stopwatch_Content__3seJN\",\"Header\":\"Stopwatch_Header__3WRJs\",\"MainButton\":\"Stopwatch_MainButton__Xtp0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Rater_Content__3fnIG\",\"Header\":\"Rater_Header__2iJvZ\",\"Rating\":\"Rater_Rating__fa4Sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBox\":\"Checker_CheckBox__8GKH-\",\"Content\":\"Checker_Content__34-M0\",\"Header\":\"Checker_Header__2TFSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Counter_Content__3GsA1\",\"Buttons\":\"Counter_Buttons__36Npi\",\"Header\":\"Counter_Header__2uGCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TrackersForm_Form__3LHZx\",\"ColorField\":\"TrackersForm_ColorField__17Ipo\",\"Field\":\"TrackersForm_Field__2PJ_4\",\"FloatingButton\":\"TrackersForm_FloatingButton__1LEwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardHeader\":\"SurveyForm_CardHeader__3GZP2\",\"List\":\"SurveyForm_List__3VN1A\",\"Transfer\":\"SurveyForm_Transfer__NIDYV\",\"Movers\":\"SurveyForm_Movers__ZnRYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trackers\":\"Trackers_Trackers__1zNZe\",\"Container\":\"Trackers_Container__2MFOo\",\"Button\":\"Trackers_Button__2bkgx\",\"Top\":\"Trackers_Top__3mxHc\",\"DatePicker\":\"Trackers_DatePicker__2s6lh\",\"ControlPanel\":\"Trackers_ControlPanel__2Ru5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Entries\":\"StopwatchEntries_Entries__trl9H\",\"Header\":\"StopwatchEntries_Header__28woA\",\"Body\":\"StopwatchEntries_Body__xnW4u\",\"NewEntryButton\":\"StopwatchEntries_NewEntryButton__25tlb\",\"Tablehead\":\"StopwatchEntries_Tablehead__1t_kg\",\"ListItem\":\"StopwatchEntries_ListItem__3ni0F\",\"Dropdown\":\"StopwatchEntries_Dropdown__24rx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChartPreAmp\":\"BarChartPreAmp_BarChartPreAmp__3-nTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarChart_BarChart__3cQVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"EntryEditForm_Field__3Tdcb\",\"Limit\":\"EntryEditForm_Limit__3WxXf\",\"Form\":\"EntryEditForm_Form__3lfW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewUser\":\"NewUserGuide_NewUser__1XSJq\",\"Form\":\"NewUserGuide_Form__2eogD\",\"RadioOptions\":\"NewUserGuide_RadioOptions__rhdK-\",\"Togglegroup\":\"NewUserGuide_Togglegroup__P68_d\",\"Toggle\":\"NewUserGuide_Toggle__2OIWy\",\"Card\":\"NewUserGuide_Card__hLH_e\",\"Body\":\"NewUserGuide_Body__2-G1U\",\"Options\":\"NewUserGuide_Options__2I-XX\",\"Option\":\"NewUserGuide_Option__9BZwq\",\"Recommended\":\"NewUserGuide_Recommended__3Y6Vn\",\"Possible\":\"NewUserGuide_Possible__tUrF2\",\"NotRec\":\"NewUserGuide_NotRec__3RVPV\",\"ButtonPanel\":\"NewUserGuide_ButtonPanel__3wMOz\",\"LeftButtons\":\"NewUserGuide_LeftButtons__2zdDO\",\"Skip\":\"NewUserGuide_Skip__2vbYR\",\"Next\":\"NewUserGuide_Next__2U9M7\",\"Back\":\"NewUserGuide_Back__2ue_C\",\"Header\":\"NewUserGuide_Header__gPSdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataPanel\":\"DataPanel_DataPanel__2TvCl\",\"Main\":\"DataPanel_Main__3mO9g\",\"Chart\":\"DataPanel_Chart__2NxcX\",\"main\":\"DataPanel_main__1bcgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerSelector\":\"TrackerSelector_TrackerSelector__13Imw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__1Ou9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"RangeSelector_Selector__1o0hR\",\"Calender\":\"RangeSelector_Calender__3YZIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarLineChart_BarChart__UHoXd\"};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DbRef, State } from \"../../Types\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { Tracker } from \"../../Types\";\r\n// import Divider from \"../UI/Divider\";\r\nimport classes from \"./TrackersForm.module.css\";\r\nimport { CirclePicker } from \"react-color\";\r\n// import { Formik, Form, Field } from \"formik\";\r\n// import Select from \"@material-ui/core/Select\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  // createNewTracker,\r\n  updateTracker,\r\n} from \"../../HalperFunctions/CreateTrackers\";\r\n// import FakeTracker from \"./FakeTracker/FakeTracker\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst TrackersForm = React.memo((props: Props) => {\r\n  const [color, setColor] = useState<string>(`#000000`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (props.selected) {\r\n      setColor(props.selected.color);\r\n    }\r\n  }, [props.selected]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: props.selected ? props.selected.name : \"\",\r\n      description: props.selected ? props.selected.description : \"\",\r\n      size: props.selected?.size ? props.selected.size.toString() : `1`,\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .max(20, \"Name is too long\")\r\n        .required(\"Must have a name\"),\r\n      description: yup.string(),\r\n      size: yup.number().positive(\"Must be a possitive number\").required(\"\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n\r\n      props.attemptSubmition();\r\n\r\n      if (!props.selected) {\r\n        console.log(`creating`);\r\n        props.createNewTracker(\r\n          userDb,\r\n          props.type,\r\n          values.name,\r\n          values.description,\r\n          color,\r\n          values.size\r\n        );\r\n      }\r\n\r\n      if (props.selected) {\r\n        updateTracker(\r\n          userDb,\r\n          props.selected.id,\r\n          values.name,\r\n          values.description,\r\n          color,\r\n          values.size\r\n        );\r\n      }\r\n\r\n      closeForm();\r\n    },\r\n  });\r\n\r\n  const closeForm = () => {\r\n    setColor(`#000000`);\r\n    props.onFinish();\r\n  };\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const formElement: JSX.Element = (\r\n    <form className={classes.Form} onSubmit={formik.handleSubmit}>\r\n      {/* style={{ display: page === 1 ? `unset` : `none` }} */}\r\n      <div className={classes.Field}>\r\n        <TextField\r\n          inputProps={{\r\n            autoComplete: \"new-password\",\r\n            form: {\r\n              autoComplete: \"off\",\r\n            },\r\n          }}\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label={\r\n            <p>\r\n              Name <small> (required)</small>\r\n            </p>\r\n          }\r\n          variant=\"outlined\"\r\n          placeholder=\"e.g Watching T.V...\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={formik.touched.name && formik.errors.name}\r\n        />\r\n      </div>\r\n      <div className={classes.Field}>\r\n        <TextField\r\n          inputProps={{\r\n            autoComplete: \"new-password\",\r\n            form: {\r\n              autoComplete: \"off\",\r\n            },\r\n          }}\r\n          id=\"description\"\r\n          name=\"description\"\r\n          multiline\r\n          label={\r\n            <p>\r\n              Description<small> (optional)</small>\r\n            </p>\r\n          }\r\n          variant=\"outlined\"\r\n          maxRows={4}\r\n          placeholder=\"e.g The amount of time i spend on watching T.V...\"\r\n          value={formik.values.description}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.description && Boolean(formik.errors.description)\r\n          }\r\n          helperText={formik.touched.description && formik.errors.description}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ display: props.type === `counter` ? `unset` : `none` }}\r\n        className={classes.Field}\r\n      >\r\n        <TextField\r\n          value={formik.values.size}\r\n          onChange={formik.handleChange}\r\n          id=\"size\"\r\n          name=\"size\"\r\n          type=\"number\"\r\n          label={\r\n            <p>\r\n              Step size<small> (optional)</small>\r\n            </p>\r\n          }\r\n          variant=\"outlined\"\r\n          style={{ width: `100px` }}\r\n          error={formik.touched.size && Boolean(formik.errors.size)}\r\n          helperText={formik.touched.size && formik.errors.size}\r\n        />\r\n      </div>\r\n      <div className={classes.ColorField}>\r\n        <label>\r\n          Color <small> (required)</small>\r\n        </label>\r\n        <CirclePicker onChangeComplete={handleChangeComplete} color={color} />\r\n      </div>\r\n      <div className={classes.Field}>\r\n        <button\r\n          disabled={color === `#000000`}\r\n          type=\"submit\"\r\n          className={classes.FloatingButton}\r\n        >\r\n          {props.selected ? `Save` : `Create new Tracker`}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  let display = formElement;\r\n\r\n  if (props.submitionState === `attempt`) {\r\n    display = <Spinner />;\r\n  }\r\n\r\n  // if (props.submitionState === true) {\r\n  //   display = (\r\n  //     <div>\r\n  //       <h2>Successfully created</h2>\r\n  //       {/* <button onClick={props.onFinish}>Make another one</button> */}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return display;\r\n  //  (\r\n  //   <div className={classes.Modal}>\r\n  //     {/* <FakeTracker type={type} color={color} name={name} size={+size!} /> */}\r\n  //     {formElement}\r\n\r\n  //     {/* <Button onClick={closeForm} variant=\"secondary\">\r\n  //       Close\r\n  //     </Button> */}\r\n  //     {/* <Pagination count={pages} page={page} onChange={changePage} /> */}\r\n  //     {/* <Button\r\n  //       disabled={!!errors.name || color === `#000000`}\r\n  //       variant=\"primary\"\r\n  //       onClick={saveForm}\r\n  //     >\r\n  //       Save\r\n  //     </Button> */}\r\n  //   </div>\r\n  // );\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  submitionState: state.submitionState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  attemptSubmition: () => actions.setSubmitionState(`attempt`),\r\n  createNewTracker: (\r\n    userDb: DbRef,\r\n    type: string,\r\n    name: string,\r\n    description: string,\r\n    color: string,\r\n    size: string\r\n  ) => actions.createNewTracker(userDb, type, name, description, color, size),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  selected: Tracker | null;\r\n  type: string;\r\n  onFinish: () => void;\r\n};\r\n\r\nexport default connector(TrackersForm);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Tracker, CheckerType, RaterType } from \"../../Types\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classes from \"./SurveyForm.module.css\";\r\n// import { Formik, Form, Field } from \"formik\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  TextField,\r\n  Divider,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst not = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => !b.includes(value));\r\n};\r\n\r\nconst intersection = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => b.includes(value));\r\n};\r\n\r\nconst union = (a: Tracker[], b: Tracker[]) => {\r\n  return [...a, ...not(b, a)];\r\n};\r\n\r\nconst SurveyFormModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  checkers: CheckerType[];\r\n  raters: RaterType[];\r\n}> = React.memo(({ show, closeHandler, checkers, raters }) => {\r\n  const [checked, setChecked] = useState<Tracker[]>([]);\r\n  const [left, setLeft] = useState<Tracker[]>([...checkers, ...raters]);\r\n  const [right, setRight] = useState<Tracker[]>([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n  const [expanded, setExpanded] = useState<string[]>([`raters`, `checkers`]);\r\n  const [name, setName] = useState(\"\");\r\n  const userDb = useContext(DbContext);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    closeHandler();\r\n  };\r\n\r\n  const saveForm = () => {\r\n    userDb!\r\n      .collection(`surveys`)\r\n      .add({\r\n        name: name,\r\n        trackers: right.map((tracker) => tracker.id),\r\n      })\r\n      .then(() => {\r\n        closeForm();\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleToggle = (value: Tracker) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const numberOfChecked = (items: Tracker[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: Tracker[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const expand = (event: any, nodeIds: string[]) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: Tracker[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.CardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <TreeView\r\n        defaultCollapseIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-up`} />\r\n          </svg>\r\n        }\r\n        defaultExpandIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-down`} />\r\n          </svg>\r\n        }\r\n        expanded={expanded}\r\n        onNodeToggle={expand}\r\n      >\r\n        <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `rater`)\r\n            .map((rater) => {\r\n              return (\r\n                <ListItem\r\n                  key={rater.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(rater)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox checked={checked.includes(rater)} disableRipple />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={rater.id} primary={rater.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `checker`)\r\n            .map((checker) => {\r\n              return (\r\n                <ListItem\r\n                  key={checker.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(checker)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      checked={checked.includes(checker)}\r\n                      disableRipple\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={checker.id} primary={checker.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Card>\r\n  );\r\n\r\n  const formElement: JSX.Element = (\r\n    <form className={classes.Form}>\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Name\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        error={name.length < 4 && name.length > 0}\r\n      />\r\n      <div className={classes.Transfer}>\r\n        {customList(\"Choices\", left)}\r\n        <div className={classes.Movers}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </div>\r\n        {customList(\"Chosen\", right)}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeForm}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Body>{formElement}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeForm}>Close</Button>\r\n        <Button onClick={saveForm}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default SurveyFormModal;\r\n","// import * as types from \"./CreateTrackers\";\r\n\r\nexport const reletiveTimestampToString = (timestamp: number) => {\r\n  if (timestamp < 0) return `--:--:--`;\r\n\r\n  const outputInSeconds: number = Math.round(timestamp / 1000);\r\n\r\n  const seconds = (outputInSeconds! % 60).toString().padStart(2, `0`);\r\n  const minutes = Math.floor((outputInSeconds! / 60) % 60)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n  const hours = Math.floor(outputInSeconds! / 3600)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n\r\nexport const absoluteTimestampToString = (timestamp: number) => {\r\n  const date = new Date(timestamp);\r\n\r\n  const seconds = date.getSeconds().toString().padStart(2, `0`);\r\n  const minutes = date.getMinutes().toString().padStart(2, `0`);\r\n  const hours = date.getHours().toString().padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { reletiveTimestampToString } from \"../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst Clock: React.FC<{\r\n  accum: number;\r\n  isRunning: boolean;\r\n  lastEntry: number;\r\n}> = ({ accum, isRunning, lastEntry }) => {\r\n  const [output, setOutput] = useState<string>(`00:00:00`);\r\n  const [gap, setGap] = useState<number>(0);\r\n\r\n  const tick = useCallback(() => {\r\n    setGap(Date.now() - lastEntry);\r\n  }, [lastEntry]);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (!isRunning) {\r\n      setGap(0);\r\n    }\r\n\r\n    if (isRunning) {\r\n      tick();\r\n\r\n      interval = window.setInterval(function () {\r\n        tick();\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    };\r\n  }, [isRunning, tick]);\r\n\r\n  useEffect(() => {\r\n    const outputInMilliSecs: number = gap + accum;\r\n\r\n    const outputString = reletiveTimestampToString(outputInMilliSecs);\r\n\r\n    setOutput(outputString);\r\n  }, [accum, lastEntry, gap]);\r\n\r\n  return (\r\n    <div>\r\n      <h3\r\n        style={{\r\n          margin: `auto auto`,\r\n          display: `block`,\r\n          textAlign: `center`,\r\n          fontWeight: \"lighter\",\r\n        }}\r\n      >\r\n        {output}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  chartData: types.Datasets;\r\n}> = React.memo(({ chartData }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n        options: {\r\n          aspectRatio: 8,\r\n          scales: {\r\n            x: {\r\n              stacked: true,\r\n              max: 24,\r\n              grid: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                stepSize: 4,\r\n                callback: (value: string) => {\r\n                  // console.log(value);\r\n                  return `${value}:00`;\r\n                },\r\n              },\r\n            },\r\n            y: {\r\n              stacked: true,\r\n            },\r\n          },\r\n          indexAxis: \"y\",\r\n          onClick: (e: any) => {\r\n            const data: any = e.chart.config._config.data.datasets;\r\n            console.log(data);\r\n            const dataset: number = e.chart._active[0]?.datasetIndex;\r\n            if (!dataset) return;\r\n            const index: number = e.chart._active[0]?.index;\r\n            console.log(dataset);\r\n            console.log(index);\r\n\r\n            console.log(data[dataset].data[index]);\r\n          },\r\n          elements: {\r\n            bar: {\r\n              borderWidth: 1,\r\n              barThickness: 2,\r\n            },\r\n          },\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(`current`);\r\n      chartRef.current.data = {\r\n        labels: [``],\r\n        datasets: chartData,\r\n      };\r\n      chartRef.current.update();\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./BarChartPreAmp.module.css\";\r\nimport { Stopwatch } from \"../../../HalperFunctions/CreateTrackers\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst BarChartPreamp: React.FC<{\r\n  stopwatch: Stopwatch;\r\n  entries: types.StopwatchEntry[];\r\n  date: Date;\r\n}> = React.memo(({ stopwatch, entries, date }) => {\r\n  const [nowTimestamp, setNowTimestamp] = useState<number>(Date.now());\r\n  const [datasets, setDatasets] = useState<types.Datasets | null>(null);\r\n\r\n  useEffect(() => {\r\n    const datasetsArray: types.Datasets = [];\r\n\r\n    const dayStart = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const dayEnd = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + 1\r\n    ).getTime();\r\n\r\n    const stopwatchEntries = [\r\n      dayStart,\r\n      ...entries.map((entry) => entry.timestamp),\r\n    ];\r\n\r\n    // console.log(stopwatchEntries);\r\n    const currentTimestamp: number = nowTimestamp;\r\n\r\n    stopwatchEntries.push(\r\n      currentTimestamp < dayEnd ? currentTimestamp : dayEnd\r\n    );\r\n\r\n    const data: number[] = [];\r\n    let a: number | null = null;\r\n\r\n    stopwatchEntries.forEach((entry) => {\r\n      if (a) {\r\n        data.push((entry - a) / (1000 * 60 * 60));\r\n      }\r\n      a = entry;\r\n    });\r\n\r\n    // console.log(data);\r\n\r\n    const setBackgroundColor = (index: number) => {\r\n      let color: string = `rgb(225, 225, 225)`;\r\n\r\n      if (index % 2) {\r\n        color = stopwatch.color;\r\n      }\r\n\r\n      return color;\r\n    };\r\n\r\n    data.forEach((entry, index) => {\r\n      datasetsArray.push({\r\n        data: [entry],\r\n        backgroundColor: setBackgroundColor(index),\r\n      });\r\n    });\r\n\r\n    // console.log(datasetsArray);\r\n\r\n    setDatasets(datasetsArray);\r\n  }, [stopwatch, entries, date, nowTimestamp]);\r\n\r\n  const tick = useCallback(() => {\r\n    // console.log(`tick`);\r\n    setNowTimestamp(Date.now());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (!isRunning) return;\r\n\r\n    const interval = setInterval(() => {\r\n      tick();\r\n    }, 1000 * 60);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [tick]);\r\n\r\n  let barChart = <p>loading...</p>;\r\n\r\n  if (datasets) {\r\n    barChart = (\r\n      <div className={classes.BarChartPreamp}>\r\n        <BarChart chartData={datasets} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return barChart;\r\n});\r\n\r\nexport default BarChartPreamp;\r\n","import * as types from \"../Types\";\r\n\r\nexport const rawEntriesToPairs = (\r\n  entries: types.StopwatchEntry[],\r\n  stopwatchId: string,\r\n  today: Date,\r\n  date: Date\r\n) => {\r\n  const biEntries: types.ArrangedEntries = [];\r\n\r\n  // const dayStart = new Date(\r\n  //   entries[0].year,\r\n  //   entries[0].month,\r\n  //   entries[0].day,\r\n  //   0\r\n  // ).getTime();\r\n  const dayStart = date.getTime();\r\n\r\n  const dayEnd = new Date(\r\n    entries[0].year,\r\n    entries[0].month,\r\n    entries[0].day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  let a: types.StopwatchEntry | null = null;\r\n  let accum: number = 0;\r\n  let fromLimit: number = dayStart;\r\n  let count: number = 0;\r\n\r\n  entries.forEach((entry, index) => {\r\n    //   console.log(entry);\r\n\r\n    if (index % 2) {\r\n      biEntries.pop();\r\n      const subTotal = entry.timestamp - a!.timestamp;\r\n      accum += subTotal;\r\n\r\n      const from = {\r\n        timestamp: a!.timestamp,\r\n        id: a!.entryId,\r\n        limit: fromLimit,\r\n      };\r\n      const to = {\r\n        timestamp: entry.timestamp,\r\n        id: entry.entryId,\r\n        limit: null,\r\n      };\r\n\r\n      fromLimit = to.timestamp;\r\n\r\n      const biEntry: types.CompleteEntry = {\r\n        stopwatchId: stopwatchId,\r\n        from: from,\r\n        to: to,\r\n        subTotal: subTotal,\r\n        total: accum,\r\n        index: count,\r\n      };\r\n      biEntries.push(biEntry);\r\n    }\r\n\r\n    if (!(index % 2)) {\r\n      a = entry;\r\n      count++;\r\n\r\n      if (date.getTime() === today.getTime()) {\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: 0,\r\n          },\r\n          to: {\r\n            timestamp: 0,\r\n            id: ``,\r\n            limit: 0,\r\n          },\r\n          subTotal: 0,\r\n          total: 0,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n      if (date.getTime() !== today.getTime()) {\r\n        const endOfDay: number = new Date(\r\n          date.getFullYear(),\r\n          date.getMonth(),\r\n          date.getDate() + 1,\r\n          0,\r\n          0,\r\n          -1\r\n        ).getTime();\r\n\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: date.getTime(),\r\n          },\r\n          to: {\r\n            timestamp: endOfDay,\r\n            id: ``,\r\n            limit: endOfDay,\r\n          },\r\n          subTotal: endOfDay - entry.timestamp,\r\n          total: accum + endOfDay - entry.timestamp,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n    }\r\n  });\r\n\r\n  const reversed = biEntries.reverse();\r\n  let toLimit: number = dayEnd;\r\n\r\n  reversed.forEach((entry) => {\r\n    // entry.to!.limit = toLimit;\r\n    if (entry.to) {\r\n      entry.to.limit = toLimit;\r\n    }\r\n\r\n    toLimit = entry.from.timestamp;\r\n  });\r\n\r\n  return reversed;\r\n};\r\n\r\nexport const createFakeLastEntry = (entry: types.StopwatchEntry) => {\r\n  const newTimeStamp: number = new Date(\r\n    entry.year,\r\n    entry.month,\r\n    entry.day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  const newEntry = {\r\n    ...entry,\r\n    timestamp: newTimeStamp,\r\n  };\r\n\r\n  return newEntry;\r\n};\r\n\r\nexport async function getEntries(userDb: any, dates: types.CustomDate[]) {\r\n  const promises: Promise<any>[] = [];\r\n\r\n  dates.forEach((date) => {\r\n    const dailyEntries = createPromise(userDb, date.year, date.month, date.day);\r\n\r\n    promises.push(dailyEntries);\r\n  });\r\n\r\n  const responses = await Promise.all(promises);\r\n\r\n  return responses.map((res) => res.docs);\r\n}\r\n\r\nconst createPromise = (\r\n  userDb: any,\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n) => {\r\n  return userDb!\r\n    .collection(`entries`)\r\n    .where(\"year\", \"==\", year)\r\n    .where(\"month\", \"==\", month)\r\n    .where(\"day\", \"==\", day)\r\n    .orderBy(\"timestamp\", \"asc\")\r\n    .get();\r\n};\r\n\r\nexport function createDates(startDate: Date, days: number) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = startDate.getFullYear();\r\n  const month: number = startDate.getMonth();\r\n\r\n  for (let i = 0; i < days; i++) {\r\n    const day: number = startDate.getDate() - i;\r\n\r\n    if (day > 0) {\r\n      dates.push({\r\n        year: year,\r\n        month: month,\r\n        day: day,\r\n      });\r\n    }\r\n\r\n    if (day <= 0) {\r\n      const newDate: Date = new Date(year, month, day);\r\n\r\n      const newDay: number = newDate.getDate();\r\n      const newMonth: number = newDate.getMonth();\r\n      const newYear: number = newDate.getFullYear();\r\n\r\n      dates.push({\r\n        year: newYear,\r\n        month: newMonth,\r\n        day: newDay,\r\n      });\r\n    }\r\n  }\r\n\r\n  return dates;\r\n}\r\n\r\nexport function createDatesFromRange(dateRange: Date[]) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = dateRange[1].getFullYear();\r\n  const month: number = dateRange[1].getMonth();\r\n\r\n  // console.log(dateRange[0]);\r\n  // console.log(dateRange[1]);\r\n\r\n  const days: number =\r\n    (dateRange[1].getTime() - dateRange[0].getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n  // console.log(Math.round(days));\r\n\r\n  for (let i = 0; i < Math.round(days); i++) {\r\n    const day: number = dateRange[1].getDate() - i;\r\n\r\n    const newDate: Date = new Date(year, month, day);\r\n\r\n    const newDay: number = newDate.getDate();\r\n    const newMonth: number = newDate.getMonth();\r\n    const newYear: number = newDate.getFullYear();\r\n\r\n    dates.push({\r\n      year: newYear,\r\n      month: newMonth,\r\n      day: newDay,\r\n    });\r\n    // }\r\n  }\r\n\r\n  return dates;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./EntryEditForm.module.css\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as types from \"../../../Types\";\r\nimport {\r\n  timeStringFromTimestamp,\r\n  stringPlusDayToTimestamp,\r\n} from \"../../../HalperFunctions/General\";\r\nimport { reletiveTimestampToString } from \"../../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst EntryEditForm: React.FC<{\r\n  entry: types.CompleteEntry | null;\r\n  submitHandler: (newFrom: number, newTo: number) => void;\r\n}> = React.memo(({ entry, submitHandler }) => {\r\n  const [newFrom, setNewFrom] = useState<number>(entry!.from.timestamp);\r\n  const [newTo, setNewTo] = useState<number>(entry!.to.timestamp);\r\n  const [newSubTotal, setNewSubTotal] = useState<number>(newTo - newFrom);\r\n\r\n  const fromInitValue = new Date(entry!.from.timestamp);\r\n  const toInitValue = new Date(entry!.to.timestamp);\r\n\r\n  const initialValues: any = {\r\n    fromHour: fromInitValue.getHours(),\r\n    fromMinute: fromInitValue.getMinutes(),\r\n    fromSecond: fromInitValue.getSeconds(),\r\n    toHour: toInitValue.getHours(),\r\n    toMinute: toInitValue.getMinutes(),\r\n    toSecond: toInitValue.getSeconds(),\r\n  };\r\n\r\n  // console.log(`rendering form`, entry);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={(values) => {}}\r\n        validate={(values) => {\r\n          const errors: types.inputEditError = {\r\n            to: false,\r\n            from: false,\r\n          };\r\n\r\n          const fromInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.fromHour,\r\n            values.fromMinute,\r\n            values.fromSecond,\r\n            entry!.from.timestamp\r\n          );\r\n\r\n          const toInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.toHour,\r\n            values.toMinute,\r\n            values.toSecond,\r\n            entry!.to.timestamp\r\n          );\r\n\r\n          const isFromBiggerThanLimit: boolean =\r\n            fromInputTimestamp >= entry!.from.limit!;\r\n\r\n          const isFromSmallerThanTo: boolean =\r\n            fromInputTimestamp <= toInputTimestamp;\r\n\r\n          const isToSmallerThanLimit: boolean =\r\n            toInputTimestamp <= entry!.to.limit!;\r\n\r\n          const isToBiggerThanFrom: boolean =\r\n            toInputTimestamp > fromInputTimestamp;\r\n\r\n          if (!isFromBiggerThanLimit || !isFromSmallerThanTo) {\r\n            errors.from = true;\r\n          }\r\n\r\n          if (!isToBiggerThanFrom || !isToSmallerThanLimit) {\r\n            errors.to = true;\r\n          }\r\n\r\n          setNewFrom(fromInputTimestamp);\r\n          setNewTo(toInputTimestamp);\r\n          setNewSubTotal(toInputTimestamp - fromInputTimestamp);\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        {({ errors, values }) => (\r\n          <Form className={classes.Form}>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.from ? `red` : `green` }}\r\n            >\r\n              <label>From:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"fromHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                entry!.from.limit!\r\n              )} and ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.toHour,\r\n                  values.toMinute,\r\n                  values.toSecond,\r\n                  entry!.to.timestamp\r\n                )\r\n              )}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.to ? `red` : `green` }}\r\n            >\r\n              <label>To:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"toHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.fromHour,\r\n                  values.fromMinute,\r\n                  values.fromSecond,\r\n                  entry!.from.timestamp\r\n                )\r\n              )} and ${timeStringFromTimestamp(entry!.to.limit!)}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{\r\n                width: `100%`,\r\n                borderColor: errors.from ? `red` : `green`,\r\n              }}\r\n            >\r\n              <p style={{ fontWeight: \"normal\", width: `100%` }}>\r\n                Sub-Total: {reletiveTimestampToString(newSubTotal)}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => submitHandler(newFrom, newTo)}\r\n              type=\"submit\"\r\n              disabled={!!errors.to || !!errors.from}\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default EntryEditForm;\r\n","import React, { useContext } from \"react\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport * as types from \"../../../Types\";\r\nimport EntryEditForm from \"../StopwatchEntries/EntryEditForm\";\r\nimport { db } from \"../../../Firebase\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n// import DateContext from \"../../../Context/DateContext\";\r\n\r\nconst EntryEditModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  entry: types.CompleteEntry | null;\r\n  newEntryHandler: (timestamp: number) => void;\r\n  editHandler: (batch: types.Batch) => void;\r\n}> = ({ show, closeHandler, editHandler, entry, newEntryHandler }) => {\r\n  const userDb = useContext(DbContext);\r\n\r\n  // console.log(`rendering entry edit modal`, entry);\r\n\r\n  const submit = (from: number, to: number) => {\r\n    if (!entry?.index) {\r\n      newEntryHandler(from);\r\n      newEntryHandler(to);\r\n    } else {\r\n      changeEntry(from, to);\r\n    }\r\n    closeHandler();\r\n  };\r\n\r\n  const changeEntry = (from: number, to: number) => {\r\n    console.log(`change`);\r\n\r\n    const batch = db.batch();\r\n\r\n    const fromRef = userDb!.collection(`entries`).doc(entry!.from.id);\r\n    batch.update(fromRef, { timestamp: from });\r\n\r\n    if (entry!.to.id) {\r\n      const toRef = userDb!.collection(`entries`).doc(entry!.to.id);\r\n      batch.update(toRef, { timestamp: to });\r\n    }\r\n\r\n    if (!entry!.to.id) {\r\n      console.log(`do something else`);\r\n      newEntryHandler(to);\r\n    }\r\n\r\n    editHandler(batch);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div style={{ width: `100%`, height: `60px` }}>\r\n        Change the beginning and ending\r\n      </div>\r\n      <div style={{ width: `100%`, height: `max-content` }}>\r\n        <EntryEditForm entry={entry} submitHandler={submit} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EntryEditModal;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport { db } from \"../../../Firebase\";\r\nimport classes from \"./StopwatchEntries.module.css\";\r\n// import Entry from \"./StopwatchEntry/StopwatchEntry\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport BarChartPreamp from \"../../Charts/BarChart/BarChartPreAmp\";\r\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { rawEntriesToPairs } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport {\r\n  absoluteTimestampToString,\r\n  reletiveTimestampToString,\r\n} from \"../../../HalperFunctions/HandleStopwatches\";\r\nimport EntryEditModal from \"../EntryEditModal/EntryEditModal\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n\r\nconst Entries: React.FC<{\r\n  show: boolean;\r\n  entries: types.StopwatchEntry[];\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  closeHandler: () => void;\r\n}> = React.memo(({ entries, stopwatch, date, show, closeHandler }) => {\r\n  const [arrangedEntries, setArrangedEntries] = useState<types.ArrangedEntries>(\r\n    []\r\n  );\r\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\r\n\r\n  const [modalDisplay, setModalDisplay] = useState<boolean>(false);\r\n\r\n  const [EntryToEdit, setEntryToEdit] = useState<types.CompleteEntry | null>(\r\n    null\r\n  );\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  const [rows, setRows] = useState<any[]>([]);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Index\",\r\n      width: 30,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"from\",\r\n      headerName: \"From\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"to\",\r\n      headerName: \"To\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"subTotal\",\r\n      headerName: \"Sub-Total\",\r\n      width: 120,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      width: 100,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n  ];\r\n\r\n  // console.log(`rendering stopwatch entries`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setArrangedEntries([]);\r\n      setRows([]);\r\n      return;\r\n    }\r\n    const pairs = rawEntriesToPairs(entries, stopwatch.id, todaysDate!, date);\r\n    setArrangedEntries(pairs);\r\n    setRows(\r\n      pairs.map((pair, index) => {\r\n        if (!!pair.to.timestamp) {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: absoluteTimestampToString(pair.to.timestamp),\r\n            subTotal: reletiveTimestampToString(pair.subTotal),\r\n            total: reletiveTimestampToString(pair.total),\r\n          };\r\n        } else {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: `now`,\r\n            subTotal: `--:--:--`,\r\n            total: `--:--:--`,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }, [entries, stopwatch, todaysDate, date]);\r\n\r\n  const deleteHandler = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n\r\n    const entriesIds: string[] = [];\r\n    entriesIds.push(arrangedEntries[realIndex].from.id);\r\n\r\n    if (!!arrangedEntries[realIndex].to.id) {\r\n      entriesIds.push(arrangedEntries[realIndex].to!.id);\r\n    }\r\n\r\n    const batch: types.Batch = db.batch();\r\n\r\n    entriesIds.forEach((id) => {\r\n      const ref = userDb!.collection(`entries`).doc(id);\r\n\r\n      batch.delete(ref);\r\n    });\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`deleted`);\r\n        setSelectionModel([]);\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (batch: types.Batch) => {\r\n    console.log(batch);\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`we did it!`);\r\n        setModalDisplay(false);\r\n      })\r\n      .catch((err: any) => {\r\n        if (err) console.log(`try again`, err);\r\n      });\r\n  };\r\n\r\n  const newEntryHandler = (timestamp: number) => {\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n    setEntryToEdit(arrangedEntries[realIndex] as types.CompleteEntry);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalDisplay(false);\r\n  };\r\n\r\n  const addNewEntry = () => {\r\n    if (!!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0) return;\r\n\r\n    // console.log(`new`);\r\n    const startOfDay: number = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const endOfDay: number =\r\n      date.getTime() !== todaysDate!.getTime()\r\n        ? new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate() + 1\r\n          ).getTime()\r\n        : Date.now();\r\n\r\n    const from: number = !!arrangedEntries[0]\r\n      ? arrangedEntries[0].to.timestamp\r\n      : startOfDay;\r\n\r\n    const entryToEdit: types.CompleteEntry = {\r\n      stopwatchId: stopwatch.id,\r\n      from: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: from,\r\n      },\r\n      to: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: endOfDay,\r\n      },\r\n      subTotal: 0,\r\n      total: 0,\r\n      index: 0,\r\n    };\r\n\r\n    setEntryToEdit(entryToEdit);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div className={classes.Header}>\r\n        <BarChartPreamp entries={entries} stopwatch={stopwatch} date={date} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={classes.Entries}>\r\n          <ButtonGroup variant=\"text\" color=\"primary\">\r\n            <Button\r\n              disabled={selectionModel.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button disabled={selectionModel.length !== 1} onClick={handleOpen}>\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={addNewEntry}\r\n              disabled={\r\n                !!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0\r\n              }\r\n            >\r\n              New Entry\r\n            </Button>\r\n          </ButtonGroup>\r\n          <DataGrid\r\n            rows={rows}\r\n            rowHeight={30}\r\n            columns={columns}\r\n            pageSize={6}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              setSelectionModel(newSelectionModel);\r\n            }}\r\n            selectionModel={selectionModel}\r\n            headerHeight={40}\r\n          />\r\n          {modalDisplay ? (\r\n            <EntryEditModal\r\n              show={modalDisplay}\r\n              entry={EntryToEdit}\r\n              closeHandler={handleClose}\r\n              newEntryHandler={newEntryHandler}\r\n              editHandler={editHandler}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default Entries;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./Stopwatch.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport Clock from \"../../Clock/Clock\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport StopwatchEntries from \"../../Entries/StopwatchEntries/StopwatchEntries\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst Stopwatch = (props: Props) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [accum, setAccum] = useState<number>(0);\r\n  const [isRunning, setIsRunning] = useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = useState<number>(Date.now());\r\n\r\n  const todaysDate = useContext(DateContext);\r\n  const userDb = useContext(DbContext);\r\n\r\n  const [entries, setEntries] = useState<types.StopwatchEntry[]>([]);\r\n\r\n  useEffect(() => {\r\n    setEntries([]);\r\n    setIsRunning(false);\r\n    setAccum(0);\r\n\r\n    console.log(userDb, props.user);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.stopwatch.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      const newEntries: types.StopwatchEntry[] = [];\r\n\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `stopwatchEntry`,\r\n        };\r\n        newEntries.push(entry);\r\n      });\r\n\r\n      setEntries(newEntries);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.stopwatch.id, props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setIsRunning(false);\r\n      setAccum(0);\r\n      return;\r\n    }\r\n\r\n    const even: boolean = !(entries.length % 2);\r\n    setIsRunning(!even);\r\n\r\n    const entriesTimestamps: number[] = entries.map((entry) => entry.timestamp);\r\n\r\n    if (!even) {\r\n      // console.log(`i shouldn't see this`);\r\n      if (props.date.getTime() === todaysDate!.getTime()) {\r\n        // console.log(`today`);\r\n        const firstEntry = entriesTimestamps.pop();\r\n        setLastEntry(firstEntry!);\r\n      }\r\n\r\n      if (props.date.getTime() !== todaysDate!.getTime()) {\r\n        setIsRunning(false);\r\n        entriesTimestamps.push(\r\n          new Date(\r\n            props.date.getFullYear(),\r\n            props.date.getMonth(),\r\n            props.date.getDate() + 1,\r\n            0,\r\n            0,\r\n            -1\r\n          ).getTime()\r\n        );\r\n      }\r\n    }\r\n\r\n    // console.log(entriesTimestamps);\r\n\r\n    let accum: number = 0;\r\n\r\n    entriesTimestamps.forEach((entry, index) => {\r\n      if (!(index % 2)) {\r\n        accum -= entry;\r\n      } else {\r\n        accum += entry;\r\n      }\r\n    });\r\n\r\n    setAccum(accum);\r\n  }, [entries, props.date, todaysDate]);\r\n\r\n  const mainButtonHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: props.stopwatch.id,\r\n        year: todaysDate!.getFullYear(),\r\n        month: todaysDate!.getMonth(),\r\n        day: todaysDate!.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.stopwatch.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.stopwatch.color,\r\n        boxShadow: props.isSelected\r\n          ? `1px 1px 10px 1px ${props.stopwatch.color}`\r\n          : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <button\r\n          className={`${classes.MainButton}     main-button`}\r\n          onClick={mainButtonHandler}\r\n          disabled={props.date.getTime() !== todaysDate!.getTime()}\r\n        >\r\n          <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n            <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n          </svg>\r\n        </button>\r\n        <h5 className={classes.Header}>{props.stopwatch.name}</h5>\r\n        <Clock isRunning={isRunning} accum={accum} lastEntry={lastEntry} />\r\n        <button\r\n          onClick={() => setExpanded(!expanded)}\r\n          className={`${classes.ExpandButton}     nothing`}\r\n        >\r\n          <svg width=\"24\" height=\"24\" fill=\"currentColor\">\r\n            <use href={`${icons}#list-ul`} />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <StopwatchEntries\r\n        show={expanded}\r\n        entries={entries}\r\n        stopwatch={props.stopwatch}\r\n        date={props.date}\r\n        closeHandler={() => setExpanded(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Stopwatch);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport classes from \"./Rater.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nconst Rater = (props: Props) => {\r\n  const [value, setValue] = useState<number | null>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.RaterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setValue(0);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.rater.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          value: data.value,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `raterEntry`,\r\n        };\r\n        setEntry(entry);\r\n        setValue(entry.value);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.rater.id, props.user]);\r\n\r\n  const rateHandler = (event: React.ChangeEvent<{}>, value: number | null) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          value: value,\r\n          timestamp: timestamp,\r\n          trackerId: props.rater.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `raterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ value: value })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.rater.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      style={{\r\n        borderColor: props.rater.color,\r\n        boxShadow: props.isSelected\r\n          ? `1px 1px 10px 1px ${props.rater.color}`\r\n          : `none`,\r\n      }}\r\n      className={trackerClasses.Tracker}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.rater.name}</h5>\r\n        <Rating\r\n          className={classes.Rating}\r\n          name={props.rater.id}\r\n          value={value}\r\n          onChange={rateHandler}\r\n          size=\"large\"\r\n          precision={0.5}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  rater: types.RaterType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Rater);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport classes from \"./Checker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nconst Checker = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CheckerEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setIsChecked(false);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.checker.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `checkerEntry`,\r\n          checked: data.checked,\r\n        };\r\n\r\n        setEntry(entry);\r\n        setIsChecked(data.checked);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.checker.id, props.user]);\r\n\r\n  const checkerHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    const newIsChecked: boolean = isChecked ? false : true;\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timestamp,\r\n          trackerId: props.checker.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `checkerEntry`,\r\n          checked: newIsChecked,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ checked: newIsChecked })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n\r\n    props.selector(props.checker.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.checker.color,\r\n        boxShadow: props.isSelected\r\n          ? `1px 1px 10px 1px ${props.checker.color}`\r\n          : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.checker.name}</h5>\r\n        <div className={classes.CheckBox}>\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={checkerHandler}\r\n            className=\"main-button\"\r\n            color=\"primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  checker: types.CheckerType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Checker);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\n\r\nimport classes from \"./Counter.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n// import Aux from \"../../../hoc/Auxiliary\";\r\n\r\nconst Counter = (props: Props) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CounterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setCount(0);\r\n    setEntry(null);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.counter.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          count: data.count,\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `counterEntry`,\r\n        };\r\n        setCount(data.count);\r\n        setEntry(entry);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.counter.id, props.user]);\r\n\r\n  const changeCount = (event: any) => {\r\n    const isPlus = !!event.target.closest(`.plus`);\r\n\r\n    let newCount: number;\r\n\r\n    if (isPlus) {\r\n      newCount = count + props.counter.size;\r\n    } else {\r\n      newCount =\r\n        count - props.counter.size < 0 ? 0 : count - props.counter.size;\r\n    }\r\n\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          count: newCount,\r\n          timestamp: timestamp,\r\n          trackerId: props.counter.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `counterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ count: newCount })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.counter.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.counter.color,\r\n        boxShadow: props.isSelected\r\n          ? `1px 1px 10px 1px ${props.counter.color}`\r\n          : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.counter.name}</h5>\r\n        <ButtonGroup className={classes.Buttons} color=\"primary\">\r\n          <Button className=\"main-button   plus\" onClick={changeCount}>\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#plus`} />\r\n            </svg>\r\n          </Button>\r\n          <Button className=\"main-button\" color=\"primary\">\r\n            {count}\r\n          </Button>\r\n          <Button\r\n            className=\"main-button   minus\"\r\n            onClick={changeCount}\r\n            disabled={count === 0}\r\n          >\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#dash`} />\r\n            </svg>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  counter: types.CounterType;\r\n  date: Date;\r\n  isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Counter);\r\n","import React from \"react\";\r\nimport stopwatchClasses from \"../../Tracker/Stopwatch/Stopwatch.module.css\";\r\nimport raterClasses from \"../../Tracker/Rater/Rater.module.css\";\r\nimport counterClasses from \"../../Tracker/Counter/Counter.module.css\";\r\nimport checkerClasses from \"../../Tracker/Checker/Checker.module.css\";\r\nimport trackerClasses from \"../../Tracker/Tracker.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { Checkbox, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { classes } from \"istanbul-lib-coverage\";\r\n\r\nconst FakeTracker: React.FC<{\r\n  type: string;\r\n  color: string;\r\n  name: string;\r\n  size: number;\r\n}> = React.memo(({ type, color, name, size }) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  let trackerElement: JSX.Element;\r\n\r\n  console.log(type);\r\n\r\n  switch (type) {\r\n    case `stopwatch`:\r\n      trackerElement = (\r\n        <div className={stopwatchClasses.Content}>\r\n          <button className={`${stopwatchClasses.MainButton}     main-button`}>\r\n            <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n              <use href={`${icons}#play-circle`} />\r\n            </svg>\r\n          </button>\r\n          <h5 className={stopwatchClasses.Header} style={{ color: `grey` }}>\r\n            {name}\r\n          </h5>\r\n          <h3\r\n            style={{\r\n              margin: `auto auto`,\r\n              display: `block`,\r\n              textAlign: `center`,\r\n            }}\r\n          >\r\n            00:00:00\r\n          </h3>\r\n        </div>\r\n      );\r\n      break;\r\n    case `checker`:\r\n      trackerElement = (\r\n        <div className={checkerClasses.Content}>\r\n          <h5 className={checkerClasses.Header} style={{ color: `grey ` }}>\r\n            {name}\r\n          </h5>\r\n          <div className={checkerClasses.CheckBox}>\r\n            <Checkbox\r\n              checked={true}\r\n              // onChange={checkerHandler}\r\n              className=\"main-button\"\r\n              color=\"primary\"\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case `counter`:\r\n      trackerElement = (\r\n        <div className={counterClasses.Content}>\r\n          <h5 className={counterClasses.Header} style={{ color: `grey ` }}>\r\n            {name}\r\n          </h5>\r\n          <ButtonGroup className={counterClasses.Buttons} color=\"primary\">\r\n            <Button onClick={() => setCount(count + size)}>\r\n              <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n                <use href={`${icons}#plus`} />\r\n              </svg>\r\n            </Button>\r\n            <Button color=\"primary\">{count}</Button>\r\n            <Button\r\n              onClick={() => setCount(count - size < 0 ? 0 : count - size)}\r\n              disabled={count === 0}\r\n            >\r\n              <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n                <use href={`${icons}#dash`} />\r\n              </svg>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      trackerElement = (\r\n        <div className={raterClasses.Content}>\r\n          <h5 className={raterClasses.Header} style={{ color: `grey ` }}>\r\n            {name}\r\n          </h5>\r\n          <Rating\r\n            className={raterClasses.Rating}\r\n            name=\"stars\"\r\n            defaultValue={3}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={trackerClasses.Tracker} style={{ borderColor: color }}>\r\n      {trackerElement}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FakeTracker;\r\n","import React from \"react\";\r\nimport classes from \"./NewUserGuide.module.css\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { State } from \"../../Types\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Divider from \"../UI/Divider\";\r\nimport FakeTracker from \"../TrackersForm/FakeTracker/FakeTracker\";\r\n// import TrackersForm from \"../TrackersForm/TrackersForm\";\r\n\r\nconst trackersArray = [`stopwatch`, `counter`, `checker`, `rater`];\r\n\r\nconst NewUserGuide = (props: Props) => {\r\n  // console.log(`hi`);\r\n\r\n  const [step, setStep] = React.useState<number>(1);\r\n\r\n  const [line, setLine] = React.useState<string | null>(null);\r\n\r\n  const [answer1, setAnswer1] = React.useState<null | string>(null);\r\n  const [answer2, setAnswer2] = React.useState<null | string>(null);\r\n\r\n  const [trackers, setTrackers] = React.useState<Map<string, string>>(\r\n    new Map()\r\n  );\r\n\r\n  const [selected, setSelected] = React.useState<null | string>(null);\r\n\r\n  const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer1((event.target as HTMLInputElement).value);\r\n  };\r\n  const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer2((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const map: Map<string, string> = new Map();\r\n    map.set(`stopwatch`, `Recommended`);\r\n    map.set(`counter`, `Possible`);\r\n    map.set(`rater`, `Possible`);\r\n    map.set(`checker`, ``);\r\n\r\n    setTrackers(map);\r\n  }, [props]);\r\n\r\n  const handleToggle = (event: any) => {\r\n    if (event.target.closest(\".obj\")) {\r\n      setLine(`obj`);\r\n    }\r\n    if (event.target.closest(\".subj\")) {\r\n      setLine(`subj`);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    props.onClose();\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    const map: Map<string, string> = new Map();\r\n\r\n    if (step === 4) {\r\n      props.onFinish(selected!);\r\n      return;\r\n    }\r\n\r\n    if (step === 3) {\r\n      if (answer2 === `yes`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, `Recommended`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`counter`);\r\n      } else {\r\n        map.set(`stopwatch`, `Possible`);\r\n        map.set(`counter`, `Possible`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Recommended`);\r\n\r\n        setSelected(`checker`);\r\n      }\r\n      setStep(4);\r\n    }\r\n\r\n    if (step === 2) {\r\n      if (answer1 === `yes`) {\r\n        map.set(`stopwatch`, `Recommended`);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`stopwatch`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(3);\r\n      }\r\n    }\r\n\r\n    if (step === 1) {\r\n      if (line === `subj`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, `Recommended`);\r\n        map.set(`checker`, ``);\r\n\r\n        setSelected(`rater`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(2);\r\n      }\r\n    }\r\n\r\n    setTrackers(map);\r\n  };\r\n\r\n  const backHandler = () => {\r\n    if (step === 4) {\r\n      if (line === `subj`) {\r\n        setStep(1);\r\n      } else {\r\n        setStep(answer1 === `yes` ? 2 : 3);\r\n      }\r\n    } else {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const checkNext = () => {\r\n    let disabled: boolean;\r\n\r\n    switch (step) {\r\n      case 1:\r\n        disabled = !line;\r\n        break;\r\n      case 2:\r\n        disabled = !answer1;\r\n        break;\r\n      case 3:\r\n        disabled = !answer2;\r\n        break;\r\n      case 4:\r\n        disabled = !selected;\r\n        break;\r\n      default:\r\n        disabled = true;\r\n        break;\r\n    }\r\n\r\n    return disabled!;\r\n  };\r\n\r\n  let explanetion: string;\r\n\r\n  switch (line) {\r\n    case \"obj\":\r\n      explanetion = `Something that also an outsider looking at me could have measured`;\r\n      break;\r\n    case \"subj\":\r\n      explanetion = `Somebody looking from the outside couldn't tell, only i can know`;\r\n      break;\r\n    default:\r\n      explanetion = `Please select one`;\r\n  }\r\n\r\n  let body: any;\r\n\r\n  switch (step) {\r\n    case 1:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <div className={classes.Toggle}>\r\n            <h5>I want to track something</h5>\r\n            <div onClick={handleToggle} className={classes.Togglegroup}>\r\n              <button\r\n                style={{\r\n                  borderRadius: `10px 0px 0px 10px`,\r\n                  backgroundColor:\r\n                    line === `obj` ? `rgb(75, 198, 255)` : `white`,\r\n                }}\r\n                className=\"obj\"\r\n              >\r\n                objective\r\n              </button>\r\n              <div></div>\r\n              <button\r\n                style={{\r\n                  borderRadius: `0px 10px 10px 0px`,\r\n                  backgroundColor:\r\n                    line === `subj` ? `rgb(75, 198, 255)` : `white`,\r\n                }}\r\n                className=\"subj\"\r\n              >\r\n                subjective\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p>{explanetion}</p>\r\n        </div>\r\n      );\r\n      break;\r\n    case 2:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"fieldset\">\r\n            <h5>Does duration matter?</h5>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"controlled-radio-buttons-group\"\r\n              value={answer1}\r\n              onChange={handleChange1}\r\n            >\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's pretty much the same duration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Duration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    case 3:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"div\">\r\n            <h5>\r\n              Does iteration matter? <small>(i.e how many times...)</small>\r\n            </h5>\r\n            <RadioGroup value={answer2} onChange={handleChange2}>\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's the same iteration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Iteration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      body = (\r\n        <div className={classes.Card} style={{ boxShadow: `none` }}>\r\n          <h5>Choose a tracker:</h5>\r\n          <div className={classes.Options}>\r\n            {trackersArray.map((type, index) => {\r\n              let color: string;\r\n              let order: number;\r\n              let className;\r\n\r\n              switch (trackers.get(type)) {\r\n                case `Recommended`:\r\n                  color = `rgb(3, 219, 57)`;\r\n                  order = 1;\r\n                  className = classes.Recommended;\r\n                  break;\r\n                case `Possible`:\r\n                  color = `rgb(46, 196, 255)`;\r\n                  order = 2;\r\n                  className = classes.Possible;\r\n                  break;\r\n                default:\r\n                  color = `rgb(190, 190, 190)`;\r\n                  order = 4;\r\n                  className = classes.NotRec;\r\n                  break;\r\n              }\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    order: order,\r\n                    boxShadow:\r\n                      selected === type ? `1px 1px 20px 3px ${color}` : ``,\r\n                  }}\r\n                  onClick={() => setSelected(type)}\r\n                  className={`${classes.Option}  ${className}`}\r\n                >\r\n                  <h5 style={{ color: color }}>{trackers.get(type)}</h5>\r\n                  <FakeTracker\r\n                    type={type}\r\n                    color={color}\r\n                    name={type.slice(0, 1).toUpperCase() + type.slice(1)}\r\n                    size={0}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.NewUser}>\r\n      <div className={classes.Header}>\r\n        <h1>Let's get you started!</h1>\r\n        <p>In just a minute, we'll choose the right Tracker type for you</p>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Body}>{body}</div>\r\n      <Divider />\r\n      <div className={classes.ButtonPanel}>\r\n        <div className={classes.LeftButtons}>\r\n          <button\r\n            onClick={backHandler}\r\n            disabled={step === 1}\r\n            className={classes.Back}\r\n          >\r\n            Back\r\n          </button>\r\n          <button onClick={handleSkip} className={classes.Skip}>\r\n            Close\r\n          </button>\r\n        </div>\r\n        <button\r\n          disabled={checkNext()}\r\n          onClick={nextHandler}\r\n          className={classes.Next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  userName: state.userName,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  noActiveUser: () => actions.logout(),\r\n  onSignout: () => actions.setUserName(``),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  onClose: () => void;\r\n  onFinish: (type: string) => void;\r\n};\r\n\r\nexport default connector(NewUserGuide);\r\n","import React, { useState, useContext } from \"react\";\r\nimport TrackersForm from \"../../Components/TrackersForm/TrackersForm\";\r\nimport SurveyFormModal from \"../../Components/SurveyForm/SurveyForm\";\r\nimport classes from \"./Trackers.module.css\";\r\nimport StopwatchElement from \"../../Components/Tracker/Stopwatch/Stopwatch\";\r\nimport RaterElement from \"../../Components/Tracker/Rater/Rater\";\r\nimport CheckerElement from \"../../Components/Tracker/Checker/Checker\";\r\nimport CounterElement from \"../../Components/Tracker/Counter/Counter\";\r\nimport * as types from \"../../Types\";\r\n// import Aux from \"../../hoc/Auxiliary\";\r\nimport { deleteTracker } from \"../../HalperFunctions/CreateTrackers\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport NewUserGuide from \"../../Components/NewUserGuide/NewUserGuide\";\r\n// import Surveys from \"../../Components/Surveys/Surveys\";\r\n\r\nconst Trackers: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  higherIsEmpty: boolean;\r\n}> = React.memo(\r\n  ({ stopwatches, raters, checkers, counters, higherIsEmpty }) => {\r\n    const [modalTrackerDisplay, setModalTrackerDisplay] =\r\n      useState<boolean>(false);\r\n    const [modalSurveyDisplay, setModalSurveyDisplay] =\r\n      useState<boolean>(false);\r\n    const todaysDate = useContext(DateContext);\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [displayMenu, setDisplayMenu] = useState<boolean>(false);\r\n    const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n\r\n    const [type, setType] = useState<string>(``);\r\n    const [selected, setSelected] = useState<types.Tracker | null>(null);\r\n    const [date, setDate] = useState<Date>(todaysDate!);\r\n\r\n    const userDb = useContext(DbContext);\r\n\r\n    useEffect(() => {\r\n      if (higherIsEmpty) {\r\n        setIsEmpty(true);\r\n        console.log(`is empty`);\r\n      }\r\n    }, [higherIsEmpty]);\r\n\r\n    useEffect(() => {\r\n      if (!todaysDate) return;\r\n      setDate(todaysDate!);\r\n    }, [todaysDate]);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      setDisplayMenu(true);\r\n    };\r\n\r\n    const handleChoose = (event: any) => {\r\n      const type: string = event.target!.outerText.toLowerCase();\r\n\r\n      if (type === `not sure?`) {\r\n        console.log(`not sure`);\r\n        setIsEmpty(true);\r\n        setDisplayMenu(false);\r\n        return;\r\n      }\r\n      console.log(`sure`);\r\n      setDisplayMenu(false);\r\n      setType(type);\r\n      setSelected(null);\r\n      setModalTrackerDisplay(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setModalTrackerDisplay(false);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n      deleteTracker(userDb!, selected!);\r\n      setSelected(null);\r\n    };\r\n\r\n    const selectHandler = (id: string) => {\r\n      if (id === selected?.id) {\r\n        setSelected(null);\r\n        return;\r\n      }\r\n      const trackers: types.Tracker[] = [\r\n        ...stopwatches,\r\n        ...counters,\r\n        ...raters,\r\n        ...checkers,\r\n      ];\r\n      const tracker: types.Tracker = trackers.filter(\r\n        (tracker) => tracker.id === id\r\n      )[0];\r\n      setSelected(tracker);\r\n      setType(tracker.type);\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      setModalTrackerDisplay(true);\r\n    };\r\n\r\n    const finishGuide = (type: string) => {\r\n      setType(type);\r\n      setIsEmpty(false);\r\n      setModalTrackerDisplay(true);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.Trackers}>\r\n        <div className={classes.Top}>\r\n          <div className={classes.DatePicker}>\r\n            <DatePicker\r\n              maxDate={todaysDate!}\r\n              value={date}\r\n              locale=\"en-EN\"\r\n              onChange={setDate}\r\n              clearIcon={null}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes.Container}>\r\n          {stopwatches.map((stopwatch) => (\r\n            <StopwatchElement\r\n              key={stopwatch.id}\r\n              stopwatch={stopwatch}\r\n              date={date}\r\n              selector={selectHandler}\r\n              isSelected={selected?.id === stopwatch.id}\r\n            />\r\n          ))}\r\n          {raters.map((rater) => (\r\n            <RaterElement\r\n              isSelected={selected?.id === rater.id}\r\n              key={rater.id}\r\n              rater={rater}\r\n              selector={selectHandler}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {checkers.map((checker) => (\r\n            <CheckerElement\r\n              selector={selectHandler}\r\n              isSelected={selected?.id === checker.id}\r\n              key={checker.id}\r\n              checker={checker}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {counters.map((counter) => (\r\n            <CounterElement\r\n              key={counter.id}\r\n              selector={selectHandler}\r\n              isSelected={selected?.id === counter.id}\r\n              counter={counter}\r\n              date={date}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={classes.ControlPanel}>\r\n          <button className={classes.Button} onClick={handleClick}>\r\n            New\r\n          </button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={displayMenu}\r\n            onClose={() => setDisplayMenu(false)}\r\n          >\r\n            <MenuItem onClick={handleChoose}>Stopwatch</MenuItem>\r\n            <MenuItem onClick={handleChoose}>Checker</MenuItem>\r\n            <MenuItem onClick={handleChoose}>Rater</MenuItem>\r\n            <MenuItem onClick={handleChoose}>Counter</MenuItem>\r\n            <MenuItem\r\n              style={{ backgroundColor: `rgb(236, 54, 141)` }}\r\n              onClick={handleChoose}\r\n            >\r\n              Not sure?\r\n            </MenuItem>\r\n          </Menu>\r\n          <div></div>\r\n          <button\r\n            className={classes.Button}\r\n            onClick={handleEdit}\r\n            disabled={!selected}\r\n          >\r\n            Edit\r\n          </button>\r\n          <div></div>\r\n          <button\r\n            className={classes.Button}\r\n            onClick={handleDelete}\r\n            disabled={!selected}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        {modalTrackerDisplay ? (\r\n          <Modal show={true} onHide={handleClose}>\r\n            <TrackersForm\r\n              onFinish={handleClose}\r\n              selected={selected}\r\n              type={type}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n        <SurveyFormModal\r\n          show={modalSurveyDisplay}\r\n          closeHandler={() => setModalSurveyDisplay(false)}\r\n          checkers={checkers}\r\n          raters={raters}\r\n        />\r\n        {isEmpty ? (\r\n          <Modal show={true} onHide={() => {}}>\r\n            <NewUserGuide\r\n              onFinish={finishGuide}\r\n              onClose={() => setIsEmpty(false)}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Trackers;\r\n","import React from \"react\";\r\nimport classes from \"./Label.module.css\";\r\n\r\nconst Label: React.FC<{\r\n  color: string;\r\n  name: string;\r\n  id: string;\r\n  selected: boolean;\r\n  selectHandler: (stopwatchId: string) => void;\r\n}> = React.memo(({ color, name, selectHandler, id, selected }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectHandler(id)}\r\n      className={classes.Label}\r\n      // style={{ transform: selected ? `translateX(20px)` : `none` }}\r\n    >\r\n      <div\r\n        // className=\"select\"\r\n        style={{\r\n          backgroundColor: selected ? color : `transparent`,\r\n          borderColor: color,\r\n        }}\r\n      ></div>\r\n      <p>{name}</p>\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Label;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./TrackerSelector.module.css\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Label from \"./Label/Label\";\r\nimport {\r\n  RaterType,\r\n  StopwatchType,\r\n  CheckerType,\r\n  Tracker,\r\n  CounterType,\r\n} from \"../../Types\";\r\n\r\nconst TrackerSelector: React.FC<{\r\n  raters: RaterType[];\r\n  stopwatches: StopwatchType[];\r\n  checkers: CheckerType[];\r\n  counters: CounterType[];\r\n  selectedTrackers: Tracker[];\r\n  handler: (trackerId: string) => void;\r\n}> = React.memo(\r\n  ({ checkers, raters, stopwatches, handler, selectedTrackers, counters }) => {\r\n    const [expanded, setExpanded] = useState<string[]>([\r\n      `stopwatches`,\r\n      `raters`,\r\n      `checkers`,\r\n      `counters`,\r\n    ]);\r\n\r\n    const handleToggle = (event: any, nodeIds: string[]) => {\r\n      setExpanded(nodeIds);\r\n    };\r\n\r\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\r\n      // console.log(nodeIds);\r\n      handler(nodeIds as unknown as string);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.TrackerSelector}>\r\n        <TreeView\r\n          defaultCollapseIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-up`} />\r\n            </svg>\r\n          }\r\n          defaultExpandIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-down`} />\r\n            </svg>\r\n          }\r\n          expanded={expanded}\r\n          selected={selectedTrackers.map((tracker) => tracker.id)}\r\n          onNodeToggle={handleToggle}\r\n          onNodeSelect={handleSelect}\r\n        >\r\n          <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n            {raters.map((rater) => (\r\n              <Label\r\n                key={rater.id}\r\n                color={rater.color}\r\n                name={rater.name}\r\n                id={rater.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(rater.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!raters.length ? <p>no raters yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"stopwatches\" label=\"Stopwatches\">\r\n            {stopwatches.map((stopwatch) => (\r\n              <Label\r\n                key={stopwatch.id}\r\n                color={stopwatch.color}\r\n                name={stopwatch.name}\r\n                id={stopwatch.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(stopwatch.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!stopwatches.length ? <p>no stopwatches yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n            {checkers.map((checker) => (\r\n              <Label\r\n                key={checker.id}\r\n                color={checker.color}\r\n                name={checker.name}\r\n                id={checker.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(checker.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!checkers.length ? <p>no checkers yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"counters\" label=\"Counters\">\r\n            {counters.map((counter) => (\r\n              <Label\r\n                key={counter.id}\r\n                color={counter.color}\r\n                name={counter.name}\r\n                id={counter.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(counter.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!counters.length ? <p>no counters yet...</p> : null}\r\n          </TreeItem>\r\n        </TreeView>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrackerSelector;\r\n","import React from \"react\";\r\nimport classes from \"./RangeSelector.module.css\";\r\n// import { Tabs, Tab } from \"react-bootstrap\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n// import { StopwatchType } from \"../../../../Types\";\r\n\r\nconst RangeSelector: React.FC<{\r\n  dateRange: Date[];\r\n  setDateRange: (Dates: Date[]) => void;\r\n  todaysDate: Date;\r\n}> = React.memo(({ dateRange, setDateRange, todaysDate }) => {\r\n  return (\r\n    <div className={classes.Selector} style={{ zIndex: 10000 }}>\r\n      <DateRangePicker\r\n        value={dateRange}\r\n        maxDate={todaysDate}\r\n        locale=\"en-EN\"\r\n        onChange={setDateRange}\r\n        clearIcon={null}\r\n        // className={classes.Calender}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RangeSelector;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarLineChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  datasets: types.BarChartDataset[];\r\n  labels: string[];\r\n  options: any;\r\n}> = React.memo(({ labels, datasets, options }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(datasets);\r\n      chartRef.current.data = {\r\n        labels: labels,\r\n        datasets: datasets,\r\n      };\r\n\r\n      chartRef.current.options = options;\r\n\r\n      chartRef.current.update();\r\n    }\r\n  }, [datasets, labels, options]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport BarLineChart from \"./BarLineChart\";\r\nimport { createFakeLastEntry } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport hexRgb from \"hex-rgb\";\r\n\r\n// import Checks from \"../../Checks/Checks\";\r\n\r\nconst BarLineChartPreAmp: React.FC<{\r\n  dateStrings: string[];\r\n  stopwatches: types.StopwatchType[];\r\n  stopwatchEntries: Map<string, types.StopwatchEntry[]>;\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  counterEntries: Map<string, types.CounterEntry[]>;\r\n  checkerEntries: Map<string, types.CheckerEntry[]>;\r\n  selectedTrackers: types.Tracker[];\r\n  raterEntries: Map<string, types.RaterEntry[]>;\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    selectedTrackers,\r\n    stopwatchEntries,\r\n    raters,\r\n    raterEntries,\r\n    dateStrings,\r\n    checkers,\r\n    counters,\r\n    counterEntries,\r\n    checkerEntries,\r\n  }) => {\r\n    const [trackerDatasets, setTrackerDatasets] = useState<\r\n      types.BarChartDataset[]\r\n    >([]);\r\n\r\n    const [options, setOptions] = useState<any>({});\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    useEffect(() => {\r\n      const newOptions: any = {\r\n        elements: {\r\n          point: {\r\n            radius: 1,\r\n          },\r\n        },\r\n        interaction: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        stacked: false,\r\n        scales: {\r\n          y: {\r\n            type: \"linear\",\r\n            display: false,\r\n            position: \"left\",\r\n            title: {\r\n              display: false,\r\n              // text: `Hours`,\r\n            },\r\n          },\r\n          y1: {\r\n            suggestedMax: 5,\r\n            ticks: {\r\n              stepSize: 1,\r\n            },\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"right\",\r\n            title: {\r\n              display: true,\r\n              text: `Rating`,\r\n            },\r\n            grid: {\r\n              drawOnChartArea: true,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            enabled: false,\r\n            displayColors: false,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      if (!selectedTrackers.length) {\r\n        setTrackerDatasets([\r\n          {\r\n            data: [0, 0, 0, 0, 0, 0, 0],\r\n            backgroundColor: `black`,\r\n            borderColor: `black`,\r\n            type: `bar`,\r\n            stepped: false,\r\n            order: 1,\r\n            yAxisID: \"y\",\r\n            tension: 1,\r\n          },\r\n        ]);\r\n        setOptions(newOptions);\r\n        return;\r\n      }\r\n\r\n      const datasets: types.BarChartDataset[] = [];\r\n\r\n      stopwatches.forEach((stopwatch) => {\r\n        if (\r\n          !selectedTrackers.map((tracker) => tracker.id).includes(stopwatch.id)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        newOptions.scales.y.display = true;\r\n        newOptions.scales.y.suggestedMax = 4;\r\n        newOptions.scales.y.title = {\r\n          display: true,\r\n          text: `Hours`,\r\n        };\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        stopwatchEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === stopwatch.id\r\n          );\r\n\r\n          if (filteredEntries.length % 2) {\r\n            const lastEntry: types.StopwatchEntry =\r\n              filteredEntries[filteredEntries.length - 1];\r\n\r\n            const dayOfEntry: Date = new Date(\r\n              lastEntry.year,\r\n              lastEntry.month,\r\n              lastEntry.day\r\n            );\r\n\r\n            const isToday: boolean =\r\n              dayOfEntry.getTime() === todaysDate!.getTime();\r\n\r\n            if (!isToday) {\r\n              const fakeLastEntry: types.StopwatchEntry =\r\n                createFakeLastEntry(lastEntry);\r\n              filteredEntries.push(fakeLastEntry);\r\n            }\r\n\r\n            if (isToday) {\r\n              filteredEntries.push({\r\n                ...lastEntry,\r\n                timestamp: Date.now(),\r\n              });\r\n            }\r\n          }\r\n\r\n          let accum: number = 0;\r\n\r\n          filteredEntries.forEach((entry, index) => {\r\n            if (index % 2 === 0) {\r\n              accum -= entry.timestamp;\r\n            } else {\r\n              accum += entry.timestamp;\r\n            }\r\n          });\r\n\r\n          const hours: number = accum / (1000 * 60 * 60);\r\n\r\n          // days.unshift(key);\r\n          totals.unshift(hours);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: stopwatch.color,\r\n          borderColor: stopwatch.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      raters.forEach((rater) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(rater.id))\r\n          return;\r\n\r\n        const totals: (number | null)[] = [];\r\n\r\n        raterEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === rater.id\r\n          );\r\n\r\n          const value: number | undefined =\r\n            filteredEntries[filteredEntries.length - 1]?.value;\r\n          totals.unshift(value ? value : null);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: rater.color,\r\n          borderColor: rater.color,\r\n          type: `line`,\r\n          stepped: false,\r\n          order: 0,\r\n          yAxisID: \"y1\",\r\n          tension: 0.4,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      checkers.forEach((checker) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(checker.id))\r\n          return;\r\n        newOptions.scales.y.display = false;\r\n        newOptions.scales.y1.grid.drawOnChartArea = true;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        checkerEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === checker.id\r\n          )[0];\r\n          // days.unshift(key);\r\n          totals.unshift(filteredEntry?.checked ? 1 : 0);\r\n        });\r\n\r\n        const rgb = hexRgb(checker.color);\r\n        // console.log(rgb);\r\n\r\n        const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: color,\r\n          borderColor: checker.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      counters.forEach((counter) => {\r\n        newOptions.scales.y.display = true;\r\n\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(counter.id))\r\n          return;\r\n        newOptions.scales.y.suggestedMax = counter.size;\r\n        newOptions.scales.y.title.text = `Count`;\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        counterEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === counter.id\r\n          )[0];\r\n          const count: number | undefined = filteredEntry?.count;\r\n          totals.unshift(count ? count : 0);\r\n        });\r\n\r\n        // const rgb = hexRgb(counter.color);\r\n        // // console.log(rgb);\r\n\r\n        // const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: counter.color,\r\n          borderColor: counter.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n\r\n      setTrackerDatasets(datasets);\r\n      setOptions(newOptions);\r\n    }, [\r\n      stopwatchEntries,\r\n      selectedTrackers,\r\n      stopwatches,\r\n      raterEntries,\r\n      raters,\r\n      checkers,\r\n      checkerEntries,\r\n      counters,\r\n      counterEntries,\r\n      todaysDate,\r\n    ]);\r\n\r\n    return (\r\n      <div style={{ display: `flex`, flexFlow: `column` }}>\r\n        <BarLineChart\r\n          datasets={trackerDatasets}\r\n          labels={dateStrings}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BarLineChartPreAmp;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport * as types from \"../../Types\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport BarLineChartPreAmp from \"./BarLineChart/BarLineChartPreAmp\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport {\r\n  getEntries,\r\n  createDatesFromRange,\r\n} from \"../../HalperFunctions/ArrangeEntries\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst ChartSelect: React.FC<{\r\n  dateRange: Date[];\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  selectedTrackers: types.Tracker[];\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    checkers,\r\n    raters,\r\n    selectedTrackers,\r\n    dateRange,\r\n    counters,\r\n  }) => {\r\n    const [stopwatchEntries, setStopwatchEntries] = useState<\r\n      Map<string, types.StopwatchEntry[]>\r\n    >(new Map());\r\n    const [checkerEntries, setCheckerEntries] = useState<\r\n      Map<string, types.CheckerEntry[]>\r\n    >(new Map());\r\n    const [raterEntries, setRaterEntries] = useState<\r\n      Map<string, types.RaterEntry[]>\r\n    >(new Map());\r\n    const [counterEntries, setCounterEntries] = useState<\r\n      Map<string, types.CounterEntry[]>\r\n    >(new Map());\r\n    const [dateStrings, setDateStrings] = useState<string[]>([]);\r\n    // const [barLineChart, setBarLineChart] = useState({\r\n    //   display: true,\r\n    //   disabled: false,\r\n    // });\r\n    // const [pieChart, setPieChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n    // const [areaChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n\r\n    const userDb = useContext(DbContext);\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    console.log(`rendering chart selector`);\r\n\r\n    // useEffect(() => {\r\n    //   const fromTimestamp: number = dateRange[0].getTime();\r\n    //   const toTimestamp: number = dateRange[1].getTime();\r\n    //   const dayLengthInMilli: number = 24 * 60 * 60 * 1000;\r\n\r\n    //   if (fromTimestamp + dayLengthInMilli > toTimestamp) {\r\n    //     setPieChart({\r\n    //       display: true,\r\n    //       disabled: false,\r\n    //     });\r\n    //   } else {\r\n    //     setPieChart({\r\n    //       display: false,\r\n    //       disabled: true,\r\n    //     });\r\n    //   }\r\n    // }, [dateRange]);\r\n\r\n    useEffect(() => {\r\n      const dates = createDatesFromRange(dateRange);\r\n      const dateStrings = dates.map((date) => `${date.day}/${date.month + 1}`);\r\n\r\n      setDateStrings(dateStrings.reverse());\r\n\r\n      const weekMapStopwatch: Map<string, types.StopwatchEntry[]> = new Map();\r\n      const weekMapRater: Map<string, types.RaterEntry[]> = new Map();\r\n      const weekMapChecker: Map<string, types.CheckerEntry[]> = new Map();\r\n      const weekMapCounter: Map<string, types.CounterEntry[]> = new Map();\r\n\r\n      getEntries(userDb, dates).then((res) => {\r\n        res.forEach((day: any[], index) => {\r\n          const stopwatchEntries: types.StopwatchEntry[] = [];\r\n          const raterEntries: types.RaterEntry[] = [];\r\n          const checkerEntries: types.CheckerEntry[] = [];\r\n          const counterEntries: types.CounterEntry[] = [];\r\n\r\n          day.forEach((doc) => {\r\n            const entry: types.Entry = doc.data();\r\n\r\n            switch (entry.type) {\r\n              case `stopwatchEntry`:\r\n                stopwatchEntries.push(entry as types.StopwatchEntry);\r\n                break;\r\n              case `raterEntry`:\r\n                raterEntries.push(entry as types.RaterEntry);\r\n                break;\r\n              case `counterEntry`:\r\n                counterEntries.push(entry as types.CounterEntry);\r\n                break;\r\n              default:\r\n                checkerEntries.push(entry as types.CheckerEntry);\r\n                break;\r\n            }\r\n          });\r\n\r\n          weekMapStopwatch.set(dateStrings[index], stopwatchEntries);\r\n          weekMapRater.set(dateStrings[index], raterEntries);\r\n          weekMapChecker.set(dateStrings[index], checkerEntries);\r\n          weekMapCounter.set(dateStrings[index], counterEntries);\r\n        });\r\n\r\n        setStopwatchEntries(weekMapStopwatch);\r\n        setRaterEntries(weekMapRater);\r\n        setCheckerEntries(weekMapChecker);\r\n        setCounterEntries(weekMapCounter);\r\n      });\r\n    }, [todaysDate, userDb, dateRange]);\r\n\r\n    return (\r\n      <div style={{ marginLeft: `4px` }}>\r\n        {/* <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={barLineChart.display}\r\n                disabled={barLineChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: barLineChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"barLineChart\"\r\n              />\r\n            }\r\n            label=\"Bar Line Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={pieChart.display}\r\n                disabled={pieChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: pieChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"pieChart\"\r\n              />\r\n            }\r\n            label=\"Pie Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={areaChart.display}\r\n                disabled={areaChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: areaChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"areaChart\"\r\n              />\r\n            }\r\n            label=\"Area Chart\"\r\n          />\r\n        </FormGroup> */}\r\n        <BarLineChartPreAmp\r\n          stopwatchEntries={stopwatchEntries}\r\n          checkerEntries={checkerEntries}\r\n          raterEntries={raterEntries}\r\n          counterEntries={counterEntries}\r\n          stopwatches={stopwatches}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          selectedTrackers={selectedTrackers}\r\n          dateStrings={dateStrings}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ChartSelect;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport classes from \"./DataPanel.module.css\";\r\nimport * as types from \"../../Types\";\r\n\r\nimport TrackerSelector from \"../../Components/TrackerSelector/TrackerSelector\";\r\nimport RangeSelector from \"../../Components/TimeRange/RangeSelector\";\r\nimport ChartSelect from \"../../Components/Charts/ChartSelect\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst DataPanel: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const todaysDate = useContext(DateContext);\r\n  // console.log(checkers);\r\n  // const [position, setPosition] = useState<string>(`left`);\r\n\r\n  const [selectedTrackers, setSelectedTrackers] = useState<types.Tracker[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!stopwatches.length || !raters.length) return;\r\n\r\n    setSelectedTrackers([raters[0], stopwatches[0]]);\r\n  }, [stopwatches, raters]);\r\n\r\n  // console.log(selectedTrackers);\r\n  const [dateRange, setDateRange] = useState<Date[]>([new Date(), new Date()]);\r\n\r\n  console.log(`rendering DataPanel`);\r\n\r\n  // const changePosition = () => {\r\n  //   const newPosition = position === `left` ? `right` : `left`;\r\n\r\n  //   setPosition(newPosition);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDateRange([\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 7\r\n      ),\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate()\r\n      ),\r\n    ]);\r\n  }, [todaysDate]);\r\n\r\n  const selectTracker = (trackerId: string) => {\r\n    // console.log(trackerId);\r\n    let isSelected: boolean = false;\r\n    let newTrackers: types.Tracker[] = [];\r\n\r\n    const allTrackers: types.Tracker[] = [\r\n      ...stopwatches,\r\n      ...raters,\r\n      ...checkers,\r\n      ...counters,\r\n    ];\r\n\r\n    const tracker: types.Tracker = allTrackers.filter(\r\n      (tracker) => trackerId === tracker.id\r\n    )[0];\r\n\r\n    // console.log(tracker);\r\n\r\n    if (!tracker) return;\r\n\r\n    selectedTrackers.forEach((tracker) => {\r\n      if (tracker.id === trackerId) isSelected = true;\r\n    });\r\n\r\n    if (isSelected) {\r\n      newTrackers = selectedTrackers.filter(\r\n        (selected) => selected.id !== trackerId\r\n      );\r\n    }\r\n    if (!isSelected) {\r\n      newTrackers = [...selectedTrackers, tracker];\r\n\r\n      if (tracker.type === `stopwatch`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) => tracker.type !== `checker` && tracker.type !== `counter`\r\n        );\r\n      }\r\n\r\n      if (tracker.type === `checker`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `counter`\r\n        );\r\n      }\r\n      if (tracker.type === `counter`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `checker`\r\n        );\r\n      }\r\n    }\r\n    setSelectedTrackers(newTrackers);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.DataPanel}>\r\n      <RangeSelector\r\n        todaysDate={todaysDate!}\r\n        dateRange={dateRange}\r\n        setDateRange={setDateRange}\r\n      />\r\n      <div className={classes.Main}>\r\n        <TrackerSelector\r\n          raters={raters}\r\n          stopwatches={stopwatches}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          handler={selectTracker}\r\n          selectedTrackers={selectedTrackers}\r\n        />\r\n        <ChartSelect\r\n          dateRange={dateRange}\r\n          stopwatches={stopwatches}\r\n          selectedTrackers={selectedTrackers}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DataPanel;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Trackers from \"./Containers/TrackerContainer/TrackerContainer\";\r\nimport { collection, onSnapshot, QuerySnapshot } from \"firebase/firestore\";\r\nimport DataPanel from \"./Containers/DataPanel/DataPanel\";\r\nimport classes from \"./Components/UI/General.module.css\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport { State } from \"./Types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Rater,\r\n  Stopwatch,\r\n  Checker,\r\n  Counter,\r\n  // trackerConverter,\r\n} from \"./HalperFunctions/CreateTrackers\";\r\nimport DbContext from \"./Context/DbContext\";\r\nimport DateContext from \"./Context/DateContext\";\r\nimport * as types from \"./Types\";\r\n// import Footer from \"./Components/Footer/Footer\"\r\n// import LoginModal from \"./Components/AuthModals/LoginModal/LoginModal\";\r\n\r\nconst Control = (props: PropsFromRedux) => {\r\n  const [stopwatches, setStopwatches] = useState<Stopwatch[]>([]);\r\n  const [raters, setRaters] = useState<Rater[]>([]);\r\n  const [checkers, setCheckers] = useState<Checker[]>([]);\r\n  const [counters, setCounters] = useState<Counter[]>([]);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n\r\n  const userDb = useContext(DbContext);\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(userDb!, \"trackers\"),\r\n      {},\r\n      (snapshot: QuerySnapshot) => {\r\n        const stopwatches: Stopwatch[] = [];\r\n        const raters: Rater[] = [];\r\n        const checkers: Checker[] = [];\r\n        const counters: Counter[] = [];\r\n\r\n        // console.log(snapshot.empty);\r\n        if (snapshot.empty) {\r\n          setIsEmpty(true);\r\n        }\r\n\r\n        snapshot.forEach((doc: any) => {\r\n          const tracker: types.Tracker = doc.data();\r\n\r\n          switch (tracker.type) {\r\n            case `stopwatch`:\r\n              stopwatches.push(tracker);\r\n              break;\r\n            case `rater`:\r\n              raters.push(tracker);\r\n              break;\r\n            case `counter`:\r\n              counters.push(tracker);\r\n              break;\r\n            default:\r\n              checkers.push(tracker);\r\n              break;\r\n          }\r\n        });\r\n        setStopwatches(stopwatches);\r\n        setCheckers(checkers);\r\n        setRaters(raters);\r\n        setCounters(counters);\r\n      }\r\n    );\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.user]);\r\n\r\n  let dataPanel = null;\r\n  let trackersEl = null;\r\n\r\n  if (!!todaysDate && props.user) {\r\n    dataPanel = (\r\n      <DataPanel\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n    trackersEl = (\r\n      <Trackers\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n        higherIsEmpty={isEmpty}\r\n      />\r\n    );\r\n  }\r\n\r\n  let view = trackersEl;\r\n\r\n  if (props.selectedView === `data`) view = dataPanel;\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.Background}>{view}</div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  selectedView: state.selectedView,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Control);\r\n"],"sourceRoot":""}