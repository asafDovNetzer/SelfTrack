{"version":3,"sources":["Components/UI/Divider.tsx","Components/Account/ValidatePage.module.css","Components/Account/ValidatePage.tsx"],"names":["Divider","style","width","height","backgroundImage","module","exports","mapDispatchToProps","noActiveUser","actions","connector","connect","state","user","userName","props","useEffect","emailVerified","window","location","href","className","classes","Page","ValidatePage","displayName","email","ReloadButton","onClick","fill","icons","sendEmailVerification","then","console","log","BackgroundlessButton"],"mappings":"2HAYeA,IAZC,WACd,OACE,qBACEC,MAAO,CACLC,MAAM,OACNC,OAAO,MACPC,gBAAgB,qD,oBCLxBC,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,2BAA2B,aAAe,mCAAmC,qBAAuB,6C,iCCD/K,6FAwEMC,EAAqB,CACzBC,aAAc,kBAAMC,QAEhBC,EAAYC,aARM,SAACC,GAAD,MAAmB,CACzCC,KAAMD,EAAMC,KACZC,SAAUF,EAAME,YAMyBP,GAI5BG,aAlEM,SAACK,GACpBC,qBAAU,WAAO,IAAD,GACd,UAAID,EAAMF,YAAV,aAAI,EAAYI,iBACdC,OAAOC,SAASC,KAAO,OAExB,CAACL,EAAMF,OAQV,OAAKE,EAAMF,KAKT,qBAAKQ,UAAWC,IAAQC,KAAxB,SACE,sBAAKF,UAAWC,IAAQE,aAAxB,UACE,0CACW,IACRT,EAAMF,KAAMY,YAAcV,EAAMF,KAAMY,YAAcV,EAAMD,YAE7D,cAAC,IAAD,IACA,kEACmC,+BAAOC,EAAMF,KAAMa,WAEtD,4EACA,wBACEL,UAAWC,IAAQK,aACnBC,QAAS,WACPV,OAAOC,SAASC,KAAO,aAH3B,SAME,qBAAKlB,MAAM,KAAKC,OAAO,KAAK0B,KAAK,eAAjC,SACE,qBAAKT,KAAI,UAAKU,IAAL,iCAGb,cAAC,IAAD,IACA,oEAEE,wBACEF,QApCW,WACnBG,YAAsBhB,EAAMF,MAAOmB,MAAK,WACtCC,QAAQC,IAAR,+BAmCMb,UAAWC,IAAQa,qBAFrB,+BA5BC,cAAC,IAAD","file":"static/js/5.bbe10281.chunk.js","sourcesContent":["const Divider = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `100%`,\r\n        height: `1px`,\r\n        backgroundImage: `linear-gradient(to right, white, grey, white)`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ValidatePage\":\"ValidatePage_ValidatePage__3LxDP\",\"Page\":\"ValidatePage_Page__2J0zD\",\"ReloadButton\":\"ValidatePage_ReloadButton__J-MKr\",\"BackgroundlessButton\":\"ValidatePage_BackgroundlessButton__OpGJb\"};","import React from \"react\";\r\n// import { auth } from \"../../Firebase\";\r\nimport classes from \"./ValidatePage.module.css\";\r\n// import UIclasses from \"../UI/General.module.css\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { State } from \"../../Types\";\r\nimport Divider from \"../UI/Divider\";\r\nimport { sendEmailVerification } from \"firebase/auth\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst ValidatePage = (props: PropsFromRedux) => {\r\n  useEffect(() => {\r\n    if (props.user?.emailVerified) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, [props.user]);\r\n\r\n  const handleVerify = () => {\r\n    sendEmailVerification(props.user!).then(() => {\r\n      console.log(`email varification sent`);\r\n    });\r\n  };\r\n\r\n  if (!props.user) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Page}>\r\n      <div className={classes.ValidatePage}>\r\n        <h1>\r\n          Welcome,{\" \"}\r\n          {props.user!.displayName ? props.user!.displayName : props.userName}\r\n        </h1>\r\n        <Divider />\r\n        <p>\r\n          A verification email was sent to <mark>{props.user!.email}</mark>\r\n        </p>\r\n        <p>Please reload once verification is complete</p>\r\n        <button\r\n          className={classes.ReloadButton}\r\n          onClick={() => {\r\n            window.location.href = \"/validate\";\r\n          }}\r\n        >\r\n          <svg width=\"30\" height=\"30\" fill=\"currentColor\">\r\n            <use href={`${icons}#arrow-counterclockwise`} />\r\n          </svg>\r\n        </button>\r\n        <Divider />\r\n        <p>\r\n          If you don't see the email, you can\r\n          <button\r\n            onClick={handleVerify}\r\n            className={classes.BackgroundlessButton}\r\n          >\r\n            Resend it\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  userName: state.userName,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  noActiveUser: () => actions.logout(),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ValidatePage);\r\n"],"sourceRoot":""}