{"version":3,"sources":["Components/Tracker/Tracker.module.css","Components/UI/Divider.tsx","Components/TrackersForm/FakeTracker/FakeTracker.tsx","HalperFunctions/HandleStopwatches.tsx","Components/Tracker/Stopwatch/Stopwatch.module.css","Components/Tracker/Rater/Rater.module.css","Components/Tracker/Counter/Counter.module.css","Components/Tracker/Checker/Checker.module.css","Components/Icons/CounterIcon.tsx","Components/Clock/Clock.tsx","Components/Icons/Icons.module.css","Components/Clock/Clock.module.css","Components/Charts/BarLineChart/BarLineChart.tsx","Components/Charts/BarLineChart/BarLineChart.module.css","Components/TrackersForm/TrackersForm.module.css","Components/SurveyForm/SurveyForm.module.css","Containers/TrackerContainer/Trackers.module.css","Components/Entries/StopwatchEntries/StopwatchEntries.module.css","Components/Charts/BarChart/BarChartPreAmp.module.css","Components/Charts/BarChart/BarChart.module.css","Components/Entries/StopwatchEntries/EntryEditForm.module.css","Components/NewTrackerGuide/NewTrackerGuide.module.css","Components/NewTracker/NewTracker.module.css","Components/Tracker/ExpandedTracker/ExpandedTracker.module.css","Components/FormElements/InputField/InputField.module.css","Components/UI/Box/Box.module.css","Components/FormElements/ColorPicker/ColorPicker.module.css","Components/UI/MessageModal/MessageModal.module.css","Containers/DataPanel/DataPanel.module.css","Components/TrackerSelector/TrackerSelector.module.css","Components/TrackerSelector/Label/Label.module.css","Components/TimeRange/RangeSelector.module.css","Components/TrackersForm/TrackersForm.tsx","Components/SurveyForm/SurveyForm.tsx","Components/Charts/BarChart/BarChart.tsx","Components/Charts/BarChart/BarChartPreAmp.tsx","HalperFunctions/ArrangeEntries.tsx","Components/Entries/StopwatchEntries/EntryEditForm.tsx","Components/Entries/EntryEditModal/EntryEditModal.tsx","Components/Entries/StopwatchEntries/StopwatchEntries.tsx","Components/Tracker/Stopwatch/Stopwatch.tsx","Components/Tracker/Rater/Rater.tsx","Components/Tracker/Checker/Checker.tsx","Components/Tracker/Counter/Counter.tsx","Components/NewTrackerGuide/NewTrackerGuide.tsx","Components/NewTracker/NewTracker.tsx","Components/FormElements/InputField/InputField.tsx","Components/UI/Box/Box.tsx","Components/FormElements/ColorPicker/ColorPicker.tsx","Components/UI/MessageModal/MessageModal.tsx","Components/Tracker/ExpandedTracker/ExpandedTracker.tsx","Containers/TrackerContainer/TrackerContainer.tsx","Components/TrackerSelector/Label/Label.tsx","Components/TrackerSelector/TrackerSelector.tsx","Components/TimeRange/RangeSelector.tsx","Components/Charts/BarLineChart/BarLineChartPreAmp.tsx","Components/Charts/ChartSelect.tsx","Containers/DataPanel/DataPanel.tsx","Control.tsx"],"names":["module","exports","Divider","style","width","height","backgroundImage","FakeTracker","React","memo","type","color","name","size","options","useState","count","setCount","check","setCheck","accum","setAccum","isRunning","setIsRunning","Date","now","lastEntry","setLastEntry","useEffect","trackerElement","className","stopwatchClasses","Content","MainButton","onClick","wasRunning","newAccum","fill","href","icons","Header","checkerClasses","CheckBox","counterClasses","plus","newCount","minus","raterClasses","Rating","defaultValue","trackerClasses","Tracker","borderColor","Expand","reletiveTimestampToString","timestamp","outputInSeconds","Math","round","seconds","toString","padStart","minutes","floor","hours","absoluteTimestampToString","date","getSeconds","getMinutes","getHours","CounterIcon","props","classes","Counter","Left","CountDiv","Count","disabled","Right","newValue","Clock","output","setOutput","gap","setGap","tick","useCallback","interval","window","setInterval","clearInterval","outputInMilliSecs","outputString","BarChart","labels","datasets","chartRef","useRef","canvasCallback","canvas","ctx","getContext","current","Chart","data","update","ref","TrackersForm","setColor","activeStep","setActiveStep","choosenType","setType","finalStep","setFinalStep","userDb","useContext","DbContext","chooseColorBasedOnType","handleNext","formik","setFieldTouched","values","prevActiveStep","handleBack","useFormik","initialValues","description","validationSchema","yup","max","required","positive","onSubmit","attemptSubmition","createNewTracker","closeForm","steps","label","Auxiliary","TextField","id","variant","placeholder","value","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","maxRows","onChangeComplete","hex","onFinish","display","Modal","Selector","event","target","map","toLowerCase","slice","toUpperCase","Body","Stepper","orientation","step","index","Step","RedCircle","Circle","StepLabel","StepContent","Buttons","Button","submitForm","length","BackButton","submitionState","Spinner","mapDispatchToProps","actions","connector","connect","state","not","a","b","filter","includes","intersection","SurveyFormModal","show","closeHandler","checkers","raters","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","expanded","setExpanded","setName","handleToggle","currentIndex","indexOf","newChecked","push","splice","numberOfChecked","items","handleToggleAll","expand","nodeIds","customList","title","Card","CardHeader","avatar","Checkbox","indeterminate","subheader","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","TreeItem","nodeId","tracker","rater","ListItem","role","button","ListItemIcon","disableRipple","ListItemText","primary","checker","formElement","Form","Transfer","Movers","concat","onHide","Footer","collection","add","trackers","then","catch","err","console","log","chartData","aspectRatio","scales","x","stacked","grid","ticks","stepSize","callback","y","indexAxis","e","chart","config","_config","dataset","_active","datasetIndex","elements","bar","borderWidth","barThickness","responsive","plugins","legend","tooltip","enabled","BarChartPreamp","stopwatch","entries","nowTimestamp","setNowTimestamp","setDatasets","datasetsArray","dayStart","getFullYear","getMonth","getDate","getTime","dayEnd","stopwatchEntries","entry","currentTimestamp","forEach","setBackgroundColor","backgroundColor","barChart","dates","promises","dailyEntries","createPromise","year","month","day","Promise","all","responses","res","docs","where","orderBy","get","EntryEditForm","submitHandler","onCancel","from","newFrom","setNewFrom","to","newTo","setNewTo","newSubTotal","setNewSubTotal","fromInitValue","toInitValue","fromHour","fromMinute","fromSecond","toHour","toMinute","toSecond","validate","fromInputTimestamp","stringPlusDayToTimestamp","toInputTimestamp","isFromBiggerThanLimit","limit","isFromSmallerThanTo","isToSmallerThanLimit","isToBiggerThanFrom","Field","min","Limit","timeStringFromTimestamp","fontWeight","SaveButton","CancelButton","EntryEditModal","editHandler","newEntryHandler","changeEntry","batch","db","fromRef","doc","toRef","Entries","arrangedEntries","setArrangedEntries","selectionModel","setSelectionModel","modalDisplay","setModalDisplay","EntryToEdit","setEntryToEdit","todaysDate","DateContext","rows","setRows","pairs","stopwatchId","today","biEntries","fromLimit","pop","subTotal","entryId","biEntry","total","endOfDay","reversed","reverse","toLimit","rawEntriesToPairs","pair","body","ButtonGroup","realIndex","entriesIds","delete","commit","startOfDay","entryToEdit","rowHeight","columns","field","headerName","sortable","filterable","editable","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","headerHeight","trackerId","displayEntries","user","entriesToDisplay","setEntries","entriesRef","q","query","onSnapshot","snapshot","newEntries","even","entriesTimestamps","firstEntry","selector","StopwatchEntries","setValue","setEntry","precision","isChecked","setIsChecked","newIsChecked","counter","changeCount","trackersArray","noActiveUser","onSignout","userName","setStep","line","setLine","answer1","setAnswer1","answer2","setAnswer2","Map","setTrackers","selected","setSelected","set","explanetion","Toggle","closest","Togglegroup","borderRadius","Arrow","marginTop","FormControl","component","RadioGroup","aria-label","RadioOptions","FormControlLabel","control","Radio","boxShadow","Options","order","trackerColor","Recommended","Possible","NotRec","Option","NewUser","ButtonPanel","Back","checkNext","Next","NewTracker","NotSure","Large","onNotSure","onNext","InputField","setTouched","setError","newError","validators","validator","readOnly","zIndex","preventDefault","Message","bottom","top","Save","Box","closable","onClose","Label","children","ColorPicker","Switch","Pickers","Slider","transform","Picker","MessageModal","Backdrop","main","sub","No","onNo","Yes","onYes","deleteTracker","deleteEntries","updateField","fieldInEdit","setFieldInEdit","setDescription","setStepSize","displayMessage","setDisplayMessage","trackersRef","unsubscribe","handleCloseBox","editField","submitChange","Container","undefined","HeaderType","Pen","Description","StepSize","Color","EntriesButton","DeleteButton","Trackers","modalTrackerDisplay","setModalTrackerDisplay","modalSurveyDisplay","setModalSurveyDisplay","isEmpty","setIsEmpty","displayNewTracker","setDisplayNewTracker","setDate","expandedModalDisplay","setExpandedModalDiaplay","higherIsEmpty","handleClose","selectHandler","UpperContainer","DatePicker","maxDate","locale","clearIcon","NewTrackerButton","stopwatches","counters","SurveyForm","setValidateModal","NewTrackerGuide","message","func","errorMessage","TrackerSelector","handler","selectedTrackers","onNodeSelect","RangeSelector","dateRange","setDateRange","BarLineChartPreAmp","raterEntries","dateStrings","counterEntries","checkerEntries","trackerDatasets","setTrackerDatasets","setOptions","newOptions","point","radius","interaction","mode","intersect","position","y1","suggestedMax","text","drawOnChartArea","displayColors","stepped","yAxisID","tension","totals","filteredEntries","isToday","fakeLastEntry","newTimeStamp","createFakeLastEntry","unshift","filteredEntry","rgb","hexRgb","red","green","blue","flexFlow","BarLineChart","ChartSelect","setStopwatchEntries","setCheckerEntries","setRaterEntries","setCounterEntries","setDateStrings","days","i","newDate","newDay","newMonth","newYear","createDatesFromRange","weekMapStopwatch","weekMapRater","weekMapChecker","weekMapCounter","getEntries","marginLeft","DataPanel","setSelectedTrackers","Main","isSelected","newTrackers","selectedView","setStopwatches","setRaters","setCheckers","setCounters","empty","dataPanel","trackersEl","view","Background"],"mappings":"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","file":"static/js/5.24d7e457.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tracker\":\"Tracker_Tracker__3ovyp\",\"Expand\":\"Tracker_Expand__2hQt9\",\"Header\":\"Tracker_Header__2Z-aS\"};","const Divider = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `100%`,\r\n        height: `1px`,\r\n        backgroundImage: `linear-gradient(to right, white, grey, white)`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import React from \"react\";\r\nimport stopwatchClasses from \"../../Tracker/Stopwatch/Stopwatch.module.css\";\r\nimport raterClasses from \"../../Tracker/Rater/Rater.module.css\";\r\nimport counterClasses from \"../../Tracker/Counter/Counter.module.css\";\r\nimport checkerClasses from \"../../Tracker/Checker/Checker.module.css\";\r\nimport trackerClasses from \"../../Tracker/Tracker.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n// import { Checkbox } from \"@material-ui/core\";\r\nimport CounterIcon from \"../../Icons/CounterIcon\";\r\nimport Clock from \"../../Clock/Clock\";\r\n\r\nconst FakeTracker: React.FC<{\r\n  type: string;\r\n  color: string;\r\n  name: string;\r\n  size: number;\r\n  options: any;\r\n}> = React.memo(({ type, color, name, size, options }) => {\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const [check, setCheck] = React.useState<boolean>(true);\r\n  const [accum, setAccum] = React.useState<number>(0);\r\n  const [isRunning, setIsRunning] = React.useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = React.useState<number>(Date.now());\r\n\r\n  React.useEffect(() => {\r\n    if (!options) return;\r\n\r\n    if (options.isRunning) setIsRunning(true);\r\n  }, [options]);\r\n\r\n  const checkerHandler = () => {\r\n    const newCheck = !check;\r\n    setCheck(newCheck);\r\n  };\r\n\r\n  const handleStopwatch = () => {\r\n    const wasRunning = isRunning;\r\n    setIsRunning(!wasRunning);\r\n    if (!wasRunning) {\r\n      setLastEntry(Date.now());\r\n    } else {\r\n      const newAccum = accum + Date.now() - lastEntry;\r\n      setAccum(newAccum);\r\n    }\r\n  };\r\n\r\n  let trackerElement: JSX.Element;\r\n\r\n  // console.log(type);\r\n\r\n  switch (type) {\r\n    case `stopwatch`:\r\n      trackerElement = (\r\n        <div className={stopwatchClasses.Content}>\r\n          <button\r\n            className={`${stopwatchClasses.MainButton}     main-button`}\r\n            onClick={handleStopwatch}\r\n          >\r\n            <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n              <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n            </svg>\r\n          </button>\r\n          <h5 className={stopwatchClasses.Header}>{name}</h5>\r\n          <Clock accum={accum} isRunning={isRunning} lastEntry={lastEntry} />\r\n        </div>\r\n      );\r\n      break;\r\n    case `checker`:\r\n      trackerElement = (\r\n        <div className={checkerClasses.Content}>\r\n          <h5 className={checkerClasses.Header}>{name}</h5>\r\n          <div className={checkerClasses.CheckBox}>\r\n            <svg\r\n              onClick={checkerHandler}\r\n              width=\"22\"\r\n              height=\"22\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <use href={`${icons}#${check ? `check-` : ``}square`} />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case `counter`:\r\n      trackerElement = (\r\n        <div className={counterClasses.Content}>\r\n          <h5 className={counterClasses.Header}>{name}</h5>\r\n          <CounterIcon\r\n            count={count}\r\n            size={size}\r\n            plus={(newCount: number) => setCount(newCount)}\r\n            minus={(newCount: number) => setCount(newCount)}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      trackerElement = (\r\n        <div className={raterClasses.Content}>\r\n          <h5 className={raterClasses.Header}>{name}</h5>\r\n          <Rating\r\n            className={raterClasses.Rating}\r\n            name=\"stars\"\r\n            defaultValue={4}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={trackerClasses.Tracker} style={{ borderColor: color }}>\r\n      {trackerElement}\r\n      <div className={trackerClasses.Expand}>\r\n        <svg width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FakeTracker;\r\n","// import * as types from \"./CreateTrackers\";\r\n\r\nexport const reletiveTimestampToString = (timestamp: number) => {\r\n  if (timestamp < 0) return `--:--:--`;\r\n\r\n  const outputInSeconds: number = Math.round(timestamp / 1000);\r\n\r\n  const seconds = (outputInSeconds! % 60).toString().padStart(2, `0`);\r\n  const minutes = Math.floor((outputInSeconds! / 60) % 60)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n  const hours = Math.floor(outputInSeconds! / 3600)\r\n    .toString()\r\n    .padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n\r\nexport const absoluteTimestampToString = (timestamp: number) => {\r\n  const date = new Date(timestamp);\r\n\r\n  const seconds = date.getSeconds().toString().padStart(2, `0`);\r\n  const minutes = date.getMinutes().toString().padStart(2, `0`);\r\n  const hours = date.getHours().toString().padStart(2, `0`);\r\n\r\n  const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n  return outputString;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Stopwatch_Content__3seJN\",\"Header\":\"Stopwatch_Header__3WRJs\",\"MainButton\":\"Stopwatch_MainButton__Xtp0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Rater_Content__3fnIG\",\"Header\":\"Rater_Header__2iJvZ\",\"Rating\":\"Rater_Rating__fa4Sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Counter_Content__3GsA1\",\"Header\":\"Counter_Header__2uGCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBox\":\"Checker_CheckBox__8GKH-\",\"Content\":\"Checker_Content__34-M0\",\"Header\":\"Checker_Header__2TFSU\"};","import React from \"react\";\r\nimport classes from \"./Icons.module.css\";\r\n\r\nconst CounterIcon = (props: Props) => {\r\n  const plus = () => {\r\n    props.plus(+props.count + props.size);\r\n  };\r\n\r\n  const minus = () => {\r\n    const newValue = props.count - props.size;\r\n    if (newValue < 0) return;\r\n\r\n    props.minus(newValue);\r\n  };\r\n\r\n  const checkDisabled = () => {\r\n    const newValue = props.count - props.size;\r\n\r\n    return newValue < 0;\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.Counter} main-button`}>\r\n      <button className={classes.Left} onClick={plus}>\r\n        +\r\n      </button>\r\n      <div className={classes.CountDiv}>\r\n        <h3 className={classes.Count}>{props.count}</h3>\r\n      </div>\r\n      <button\r\n        disabled={checkDisabled()}\r\n        className={classes.Right}\r\n        onClick={minus}\r\n      >\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  size: number;\r\n  count: number;\r\n  plus: (count: number) => void;\r\n  minus: (count: number) => void;\r\n};\r\n\r\nexport default CounterIcon;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { reletiveTimestampToString } from \"../../HalperFunctions/HandleStopwatches\";\r\nimport classes from \"./Clock.module.css\";\r\n\r\nconst Clock: React.FC<{\r\n  accum: number;\r\n  isRunning: boolean;\r\n  lastEntry: number;\r\n}> = ({ accum, isRunning, lastEntry }) => {\r\n  const [output, setOutput] = useState<string>(`00:00:00`);\r\n  const [gap, setGap] = useState<number>(0);\r\n\r\n  const tick = useCallback(() => {\r\n    setGap(Date.now() - lastEntry);\r\n  }, [lastEntry]);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (!isRunning) {\r\n      setGap(0);\r\n    }\r\n\r\n    if (isRunning) {\r\n      tick();\r\n\r\n      interval = window.setInterval(function () {\r\n        tick();\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    };\r\n  }, [isRunning, tick]);\r\n\r\n  useEffect(() => {\r\n    const outputInMilliSecs: number = gap + accum;\r\n\r\n    const outputString = reletiveTimestampToString(outputInMilliSecs);\r\n\r\n    setOutput(outputString);\r\n  }, [accum, lastEntry, gap]);\r\n\r\n  return (\r\n    <div className={classes.Clock}>\r\n      <h3>{output}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Icons_Counter__NThdM\",\"Left\":\"Icons_Left__2w5Dn\",\"Right\":\"Icons_Right__AH45A\",\"CountDiv\":\"Icons_CountDiv__17jwR\",\"Count\":\"Icons_Count__3HIsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__I3wu-\"};","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarLineChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  datasets: types.BarChartDataset[];\r\n  labels: string[];\r\n  options: any;\r\n  width: string;\r\n}> = React.memo(({ labels, datasets, options, width }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      chartRef.current.data = {\r\n        labels: labels,\r\n        datasets: datasets,\r\n      };\r\n\r\n      chartRef.current.options = options;\r\n\r\n      chartRef.current.update();\r\n    }\r\n  }, [datasets, labels, options]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart} style={{ width: width }}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarLineChart_BarChart__UHoXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"TrackersForm_Modal__Kik1V\",\"Header\":\"TrackersForm_Header__2Brvh\",\"Selector\":\"TrackersForm_Selector__3JBOO\",\"Body\":\"TrackersForm_Body__2wlBe\",\"Circle\":\"TrackersForm_Circle__2KvEL\",\"RedCircle\":\"TrackersForm_RedCircle__CI0z1\",\"Buttons\":\"TrackersForm_Buttons__1oy1z\",\"Button\":\"TrackersForm_Button__9d7Jf\",\"BackButton\":\"TrackersForm_BackButton__1Eb3b\",\"Form\":\"TrackersForm_Form__3LHZx\",\"Step\":\"TrackersForm_Step__3h1TQ\",\"StepContent\":\"TrackersForm_StepContent__2Z747\",\"ColorField\":\"TrackersForm_ColorField__17Ipo\",\"Field\":\"TrackersForm_Field__2PJ_4\",\"FloatingButton\":\"TrackersForm_FloatingButton__1LEwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardHeader\":\"SurveyForm_CardHeader__3GZP2\",\"List\":\"SurveyForm_List__3VN1A\",\"Transfer\":\"SurveyForm_Transfer__NIDYV\",\"Movers\":\"SurveyForm_Movers__ZnRYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trackers\":\"Trackers_Trackers__1zNZe\",\"NewTrackerButton\":\"Trackers_NewTrackerButton__3o3q4\",\"UpperContainer\":\"Trackers_UpperContainer__2wTXi\",\"Container\":\"Trackers_Container__2MFOo\",\"DatePicker\":\"Trackers_DatePicker__2s6lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Entries\":\"StopwatchEntries_Entries__trl9H\",\"Header\":\"StopwatchEntries_Header__28woA\",\"Body\":\"StopwatchEntries_Body__xnW4u\",\"NewEntryButton\":\"StopwatchEntries_NewEntryButton__25tlb\",\"Tablehead\":\"StopwatchEntries_Tablehead__1t_kg\",\"ListItem\":\"StopwatchEntries_ListItem__3ni0F\",\"Dropdown\":\"StopwatchEntries_Dropdown__24rx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChartPreAmp\":\"BarChartPreAmp_BarChartPreAmp__3-nTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarChart\":\"BarChart_BarChart__3cQVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"EntryEditForm_Field__3Tdcb\",\"Limit\":\"EntryEditForm_Limit__3WxXf\",\"Form\":\"EntryEditForm_Form__3lfW3\",\"SaveButton\":\"EntryEditForm_SaveButton__2xa0r\",\"CancelButton\":\"EntryEditForm_CancelButton__2hiWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewUser\":\"NewTrackerGuide_NewUser__12zqJ\",\"Form\":\"NewTrackerGuide_Form__ys7Wm\",\"RadioOptions\":\"NewTrackerGuide_RadioOptions__JoVOV\",\"Toggle\":\"NewTrackerGuide_Toggle__3SplK\",\"Togglegroup\":\"NewTrackerGuide_Togglegroup__L6eD4\",\"Arrow\":\"NewTrackerGuide_Arrow__9jM55\",\"Card\":\"NewTrackerGuide_Card__2sHIH\",\"Body\":\"NewTrackerGuide_Body__1p2yI\",\"Options\":\"NewTrackerGuide_Options__1ZUdn\",\"Option\":\"NewTrackerGuide_Option__hdPbm\",\"Recommended\":\"NewTrackerGuide_Recommended__3IdxW\",\"Possible\":\"NewTrackerGuide_Possible__34xLx\",\"NotRec\":\"NewTrackerGuide_NotRec__2Cy1-\",\"ButtonPanel\":\"NewTrackerGuide_ButtonPanel__2qAyC\",\"Next\":\"NewTrackerGuide_Next__2PBK2\",\"Back\":\"NewTrackerGuide_Back__2cL8a\",\"Header\":\"NewTrackerGuide_Header__KPT1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"NewTracker_Modal__K9oGT\",\"Header\":\"NewTracker_Header__32Omx\",\"Options\":\"NewTracker_Options__IKVm3\",\"Option\":\"NewTracker_Option__3iGNs\",\"Arrow\":\"NewTracker_Arrow__1bvLO\",\"NotSure\":\"NewTracker_NotSure__3am8Z\",\"Large\":\"NewTracker_Large__EpJVD\",\"Left\":\"NewTracker_Left__1bbZN\",\"Right\":\"NewTracker_Right__2Zzdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ExpandedTracker_Container__2qnHp\",\"Modal\":\"ExpandedTracker_Modal__YSemr\",\"Field\":\"ExpandedTracker_Field__2kjfR\",\"Backdrop\":\"ExpandedTracker_Backdrop__zrGCv\",\"Header\":\"ExpandedTracker_Header__18ZkH\",\"HeaderType\":\"ExpandedTracker_HeaderType__1v3G1\",\"Pen\":\"ExpandedTracker_Pen__33ZG8\",\"Color\":\"ExpandedTracker_Color__E2ssn\",\"Description\":\"ExpandedTracker_Description__2SFVy\",\"StepSize\":\"ExpandedTracker_StepSize__1U5BU\",\"ButtonPanel\":\"ExpandedTracker_ButtonPanel__3jrBp\",\"EntriesButton\":\"ExpandedTracker_EntriesButton__2WG5b\",\"DeleteButton\":\"ExpandedTracker_DeleteButton__3I1Av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputField_Form__2DsNl\",\"Save\":\"InputField_Save__DJ7ve\",\"Message\":\"InputField_Message__6gLWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__1uBEq\",\"Label\":\"Box_Label__37x2B\",\"Button\":\"Box_Button__31I1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPicker\":\"ColorPicker_ColorPicker__23cjM\",\"Switch\":\"ColorPicker_Switch__2NkF5\",\"Pickers\":\"ColorPicker_Pickers__3eE63\",\"Slider\":\"ColorPicker_Slider__AQqsv\",\"Picker\":\"ColorPicker_Picker__9EGeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"MessageModal_Modal__34v65\",\"Message\":\"MessageModal_Message__1WMYs\",\"ButtonPanel\":\"MessageModal_ButtonPanel__3SKYm\",\"Yes\":\"MessageModal_Yes__1LOfq\",\"No\":\"MessageModal_No__hCXI_\",\"Backdrop\":\"MessageModal_Backdrop__dGCPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataPanel\":\"DataPanel_DataPanel__2TvCl\",\"Main\":\"DataPanel_Main__3mO9g\",\"Chart\":\"DataPanel_Chart__2NxcX\",\"main\":\"DataPanel_main__1bcgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerSelector\":\"TrackerSelector_TrackerSelector__13Imw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__1Ou9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"RangeSelector_Selector__1o0hR\",\"Calender\":\"RangeSelector_Calender__3YZIM\"};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DbRef, State } from \"../../Types\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n// import { Tracker } from \"../../Types\";\r\nimport classes from \"./TrackersForm.module.css\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport DbContext from \"../../Context/DbContext\";\r\n// import { updateTracker } from \"../../HalperFunctions/CreateTrackers\";\r\nimport Divider from \"../UI/Divider\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport FakeTracker from \"./FakeTracker/FakeTracker\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport StepContent from \"@mui/material/StepContent\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\n// import InputField from \"../FormElements/InputField/InputField\";\r\n\r\nconst TrackersForm = React.memo((props: Props) => {\r\n  const [color, setColor] = useState<string>(`#00bcd4`);\r\n  const [activeStep, setActiveStep] = React.useState<number>(0);\r\n  const [choosenType, setType] = React.useState<string>(``);\r\n  const [finalStep, setFinalStep] = React.useState<number>(2);\r\n  const types: string[] = [`Rater`, `Checker`, `Stopwatch`, `Counter`];\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  const chooseColorBasedOnType = React.useCallback((type) => {\r\n    let color: string;\r\n\r\n    switch (type) {\r\n      case `stopwatch`:\r\n        color = `rgb(152, 29, 135)`;\r\n        break;\r\n      case `rater`:\r\n        color = `rgb(12, 223, 238)`;\r\n        break;\r\n      case `checker`:\r\n        color = `rgb(12, 136, 238)`;\r\n        break;\r\n      default:\r\n        color = `rgb(236, 54, 141)`;\r\n    }\r\n\r\n    setColor(color);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setType(props.type);\r\n    setFinalStep(props.type === `counter` ? 3 : 2);\r\n    chooseColorBasedOnType(props.type);\r\n  }, [props, chooseColorBasedOnType]);\r\n\r\n  const checkNext = () => {\r\n    return activeStep === 0 && !!formik.errors.name;\r\n  };\r\n\r\n  const changeType = (event: any) => {\r\n    setType(event.target.value);\r\n    chooseColorBasedOnType(event.target.value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    formik.setFieldTouched(`name`, true, true);\r\n    if (!formik.values.name) return;\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: ``,\r\n      description: ``,\r\n      size: 1,\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .max(20, \"Name is too long\")\r\n        .required(\"Must have a name\"),\r\n      description: yup.string(),\r\n      size: yup.number().positive(\"Must be a possitive number\").required(\"\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      props.attemptSubmition();\r\n\r\n      props.createNewTracker(\r\n        userDb,\r\n        props.type,\r\n        values.name,\r\n        values.description,\r\n        color,\r\n        values.size\r\n      );\r\n\r\n      closeForm();\r\n    },\r\n  });\r\n\r\n  const steps = [\r\n    {\r\n      label: \"Name\",\r\n      description: (\r\n        <Auxiliary>\r\n          <TextField\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label={\r\n              <p>\r\n                Name <small> (required)</small>\r\n              </p>\r\n            }\r\n            variant=\"outlined\"\r\n            placeholder=\"e.g With friends...\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n          <p>\r\n            Choose a name that describes best what the tracker tracks, with the\r\n            least amount of words.\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Description\",\r\n      description: (\r\n        <Auxiliary>\r\n          <TextField\r\n            id=\"description\"\r\n            name=\"description\"\r\n            multiline\r\n            label={\r\n              <p>\r\n                Description<small> (optional)</small>\r\n              </p>\r\n            }\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            placeholder=\"e.g The amount of time i spend hanging out with friends...\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.description && Boolean(formik.errors.description)\r\n            }\r\n            helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n          <p>\r\n            A description would remind you what this tracker is meant to track\r\n            in case you forget.\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n    choosenType === `counter`\r\n      ? {\r\n          label: \"Step size\",\r\n          description: (\r\n            <Auxiliary>\r\n              <TextField\r\n                value={formik.values.size}\r\n                onChange={formik.handleChange}\r\n                id=\"size\"\r\n                name=\"size\"\r\n                type=\"number\"\r\n                label={\r\n                  <p>\r\n                    Step size<small> (optional)</small>\r\n                  </p>\r\n                }\r\n                variant=\"outlined\"\r\n                style={{ width: `100px` }}\r\n                error={formik.touched.size && Boolean(formik.errors.size)}\r\n                helperText={formik.touched.size && formik.errors.size}\r\n              />\r\n              <p>\r\n                The `step size` is the amount by which the count goes up or down\r\n                per click.\r\n              </p>\r\n            </Auxiliary>\r\n          ),\r\n        }\r\n      : null,\r\n    {\r\n      label: \"Color\",\r\n      description: (\r\n        <Auxiliary>\r\n          <CirclePicker onChangeComplete={handleChangeComplete} color={color} />\r\n          <p>\r\n            The color will be displayed in all graphs and charts (It can be\r\n            changed at any time).\r\n          </p>\r\n        </Auxiliary>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const closeForm = () => {\r\n    setColor(`#00bcd4`);\r\n    props.onFinish();\r\n  };\r\n\r\n  let display = (\r\n    <div className={classes.Modal}>\r\n      <div className={classes.Header}>\r\n        <div className={classes.Selector}>\r\n          <select onChange={changeType} value={choosenType}>\r\n            {types.map((type) => (\r\n              <option key={type} value={type.toLowerCase()}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <FakeTracker\r\n          type={choosenType}\r\n          color={color}\r\n          options={null}\r\n          name={\r\n            formik.values.name\r\n              ? formik.values.name\r\n              : choosenType.slice(0, 1).toUpperCase() + choosenType.slice(1)\r\n          }\r\n          size={+formik.values.size}\r\n        />\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Body}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((step, index) => {\r\n            if (!step) return null;\r\n            return (\r\n              <Step\r\n                className={\r\n                  step.label === `Name` && !!formik.errors.name\r\n                    ? classes.RedCircle\r\n                    : classes.Circle\r\n                }\r\n                key={step.label}\r\n              >\r\n                <StepLabel>{step.label}</StepLabel>\r\n                <StepContent>\r\n                  <div className={classes.Step}>\r\n                    <div className={classes.StepContent}>\r\n                      {step.description}\r\n                    </div>\r\n                    <div className={classes.Buttons}>\r\n                      <button\r\n                        className={classes.Button}\r\n                        onClick={\r\n                          activeStep !== finalStep\r\n                            ? handleNext\r\n                            : formik.submitForm\r\n                        }\r\n                        disabled={checkNext()}\r\n                      >\r\n                        {index === steps.length - 1 ? \"Create\" : \"Continue\"}\r\n                      </button>\r\n                      <button\r\n                        className={classes.BackButton}\r\n                        disabled={index === 0}\r\n                        onClick={handleBack}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (props.submitionState === `attempt`) {\r\n    display = <Spinner />;\r\n  }\r\n\r\n  return display;\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  submitionState: state.submitionState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  attemptSubmition: () => actions.setSubmitionState(`attempt`),\r\n  createNewTracker: (\r\n    userDb: DbRef,\r\n    type: string,\r\n    name: string,\r\n    description: string,\r\n    color: string,\r\n    size: number\r\n  ) => actions.createNewTracker(userDb, type, name, description, color, size),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  type: string;\r\n  onFinish: () => void;\r\n};\r\n\r\nexport default connector(TrackersForm);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Tracker, CheckerType, RaterType } from \"../../Types\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classes from \"./SurveyForm.module.css\";\r\n// import { Formik, Form, Field } from \"formik\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport {\r\n  TextField,\r\n  Divider,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst not = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => !b.includes(value));\r\n};\r\n\r\nconst intersection = (a: Tracker[], b: Tracker[]) => {\r\n  return a.filter((value) => b.includes(value));\r\n};\r\n\r\nconst union = (a: Tracker[], b: Tracker[]) => {\r\n  return [...a, ...not(b, a)];\r\n};\r\n\r\nconst SurveyFormModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  checkers: CheckerType[];\r\n  raters: RaterType[];\r\n}> = React.memo(({ show, closeHandler, checkers, raters }) => {\r\n  const [checked, setChecked] = useState<Tracker[]>([]);\r\n  const [left, setLeft] = useState<Tracker[]>([...checkers, ...raters]);\r\n  const [right, setRight] = useState<Tracker[]>([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n  const [expanded, setExpanded] = useState<string[]>([`raters`, `checkers`]);\r\n  const [name, setName] = useState(\"\");\r\n  const userDb = useContext(DbContext);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    closeHandler();\r\n  };\r\n\r\n  const saveForm = () => {\r\n    userDb!\r\n      .collection(`surveys`)\r\n      .add({\r\n        name: name,\r\n        trackers: right.map((tracker) => tracker.id),\r\n      })\r\n      .then(() => {\r\n        closeForm();\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleToggle = (value: Tracker) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const numberOfChecked = (items: Tracker[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: Tracker[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const expand = (event: any, nodeIds: string[]) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: Tracker[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.CardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <TreeView\r\n        defaultCollapseIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-up`} />\r\n          </svg>\r\n        }\r\n        defaultExpandIcon={\r\n          <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n            <use href={`${icons}#chevron-down`} />\r\n          </svg>\r\n        }\r\n        expanded={expanded}\r\n        onNodeToggle={expand}\r\n      >\r\n        <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `rater`)\r\n            .map((rater) => {\r\n              return (\r\n                <ListItem\r\n                  key={rater.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(rater)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox checked={checked.includes(rater)} disableRipple />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={rater.id} primary={rater.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n          {items\r\n            .filter((tracker) => tracker.type === `checker`)\r\n            .map((checker) => {\r\n              return (\r\n                <ListItem\r\n                  key={checker.id}\r\n                  role=\"listitem\"\r\n                  button\r\n                  onClick={handleToggle(checker)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      checked={checked.includes(checker)}\r\n                      disableRipple\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText id={checker.id} primary={checker.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Card>\r\n  );\r\n\r\n  const formElement: JSX.Element = (\r\n    <form className={classes.Form}>\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Name\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        error={name.length < 4 && name.length > 0}\r\n      />\r\n      <div className={classes.Transfer}>\r\n        {customList(\"Choices\", left)}\r\n        <div className={classes.Movers}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </div>\r\n        {customList(\"Chosen\", right)}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeForm}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Body>{formElement}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeForm}>Close</Button>\r\n        <Button onClick={saveForm}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default SurveyFormModal;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport * as types from \"../../../Types\";\r\n\r\nconst BarChart: React.FC<{\r\n  chartData: types.Datasets;\r\n}> = React.memo(({ chartData }) => {\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      chartRef.current = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: {\r\n          datasets: [],\r\n        },\r\n        options: {\r\n          aspectRatio: 8,\r\n          scales: {\r\n            x: {\r\n              stacked: true,\r\n              max: 24,\r\n              grid: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                stepSize: 4,\r\n                callback: (value: string) => {\r\n                  // console.log(value);\r\n                  return `${value}:00`;\r\n                },\r\n              },\r\n            },\r\n            y: {\r\n              stacked: true,\r\n            },\r\n          },\r\n          indexAxis: \"y\",\r\n          onClick: (e: any) => {\r\n            const data: any = e.chart.config._config.data.datasets;\r\n            console.log(data);\r\n            const dataset: number = e.chart._active[0]?.datasetIndex;\r\n            if (!dataset) return;\r\n            const index: number = e.chart._active[0]?.index;\r\n            console.log(dataset);\r\n            console.log(index);\r\n\r\n            console.log(data[dataset].data[index]);\r\n          },\r\n          elements: {\r\n            bar: {\r\n              borderWidth: 1,\r\n              barThickness: 2,\r\n            },\r\n          },\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // console.log(`current`);\r\n      chartRef.current.data = {\r\n        labels: [``],\r\n        datasets: chartData,\r\n      };\r\n      chartRef.current.update();\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.BarChart}>\r\n        <canvas ref={canvasCallback}></canvas>\r\n      </div>\r\n    </Aux>\r\n  );\r\n});\r\n\r\nexport default BarChart;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./BarChartPreAmp.module.css\";\r\nimport { Stopwatch } from \"../../../HalperFunctions/CreateTrackers\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst BarChartPreamp: React.FC<{\r\n  stopwatch: Stopwatch;\r\n  entries: types.StopwatchEntry[];\r\n  date: Date;\r\n}> = React.memo(({ stopwatch, entries, date }) => {\r\n  const [nowTimestamp, setNowTimestamp] = useState<number>(Date.now());\r\n  const [datasets, setDatasets] = useState<types.Datasets | null>(null);\r\n\r\n  useEffect(() => {\r\n    const datasetsArray: types.Datasets = [];\r\n\r\n    const dayStart = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const dayEnd = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + 1\r\n    ).getTime();\r\n\r\n    const stopwatchEntries = [\r\n      dayStart,\r\n      ...entries.map((entry) => entry.timestamp),\r\n    ];\r\n\r\n    // console.log(stopwatchEntries);\r\n    const currentTimestamp: number = nowTimestamp;\r\n\r\n    stopwatchEntries.push(\r\n      currentTimestamp < dayEnd ? currentTimestamp : dayEnd\r\n    );\r\n\r\n    const data: number[] = [];\r\n    let a: number | null = null;\r\n\r\n    stopwatchEntries.forEach((entry) => {\r\n      if (a) {\r\n        data.push((entry - a) / (1000 * 60 * 60));\r\n      }\r\n      a = entry;\r\n    });\r\n\r\n    // console.log(data);\r\n\r\n    const setBackgroundColor = (index: number) => {\r\n      let color: string = `rgb(225, 225, 225)`;\r\n\r\n      if (index % 2) {\r\n        color = stopwatch.color;\r\n      }\r\n\r\n      return color;\r\n    };\r\n\r\n    data.forEach((entry, index) => {\r\n      datasetsArray.push({\r\n        data: [entry],\r\n        backgroundColor: setBackgroundColor(index),\r\n      });\r\n    });\r\n\r\n    // console.log(datasetsArray);\r\n\r\n    setDatasets(datasetsArray);\r\n  }, [stopwatch, entries, date, nowTimestamp]);\r\n\r\n  const tick = useCallback(() => {\r\n    // console.log(`tick`);\r\n    setNowTimestamp(Date.now());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (!isRunning) return;\r\n\r\n    const interval = setInterval(() => {\r\n      tick();\r\n    }, 1000 * 60);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [tick]);\r\n\r\n  let barChart = <p>loading...</p>;\r\n\r\n  if (datasets) {\r\n    barChart = (\r\n      <div className={classes.BarChartPreamp}>\r\n        <BarChart chartData={datasets} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return barChart;\r\n});\r\n\r\nexport default BarChartPreamp;\r\n","import * as types from \"../Types\";\r\n\r\nexport const rawEntriesToPairs = (\r\n  entries: types.StopwatchEntry[],\r\n  stopwatchId: string,\r\n  today: Date,\r\n  date: Date\r\n) => {\r\n  const biEntries: types.ArrangedEntries = [];\r\n\r\n  // const dayStart = new Date(\r\n  //   entries[0].year,\r\n  //   entries[0].month,\r\n  //   entries[0].day,\r\n  //   0\r\n  // ).getTime();\r\n  const dayStart = date.getTime();\r\n\r\n  const dayEnd = new Date(\r\n    entries[0].year,\r\n    entries[0].month,\r\n    entries[0].day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  let a: types.StopwatchEntry | null = null;\r\n  let accum: number = 0;\r\n  let fromLimit: number = dayStart;\r\n  let count: number = 0;\r\n\r\n  entries.forEach((entry, index) => {\r\n    //   console.log(entry);\r\n\r\n    if (index % 2) {\r\n      biEntries.pop();\r\n      const subTotal = entry.timestamp - a!.timestamp;\r\n      accum += subTotal;\r\n\r\n      const from = {\r\n        timestamp: a!.timestamp,\r\n        id: a!.entryId,\r\n        limit: fromLimit,\r\n      };\r\n      const to = {\r\n        timestamp: entry.timestamp,\r\n        id: entry.entryId,\r\n        limit: null,\r\n      };\r\n\r\n      fromLimit = to.timestamp;\r\n\r\n      const biEntry: types.CompleteEntry = {\r\n        stopwatchId: stopwatchId,\r\n        from: from,\r\n        to: to,\r\n        subTotal: subTotal,\r\n        total: accum,\r\n        index: count,\r\n      };\r\n      biEntries.push(biEntry);\r\n    }\r\n\r\n    if (!(index % 2)) {\r\n      a = entry;\r\n      count++;\r\n\r\n      if (date.getTime() === today.getTime()) {\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: 0,\r\n          },\r\n          to: {\r\n            timestamp: 0,\r\n            id: ``,\r\n            limit: 0,\r\n          },\r\n          subTotal: 0,\r\n          total: 0,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n      if (date.getTime() !== today.getTime()) {\r\n        const endOfDay: number = new Date(\r\n          date.getFullYear(),\r\n          date.getMonth(),\r\n          date.getDate() + 1,\r\n          0,\r\n          0,\r\n          -1\r\n        ).getTime();\r\n\r\n        const biEntry: types.CompleteEntry = {\r\n          stopwatchId: stopwatchId,\r\n          from: {\r\n            timestamp: entry.timestamp,\r\n            id: entry.entryId,\r\n            limit: date.getTime(),\r\n          },\r\n          to: {\r\n            timestamp: endOfDay,\r\n            id: ``,\r\n            limit: endOfDay,\r\n          },\r\n          subTotal: endOfDay - entry.timestamp,\r\n          total: accum + endOfDay - entry.timestamp,\r\n          index: count,\r\n        };\r\n        biEntries.push(biEntry);\r\n      }\r\n    }\r\n  });\r\n\r\n  const reversed = biEntries.reverse();\r\n  let toLimit: number = dayEnd;\r\n\r\n  reversed.forEach((entry) => {\r\n    // entry.to!.limit = toLimit;\r\n    if (entry.to) {\r\n      entry.to.limit = toLimit;\r\n    }\r\n\r\n    toLimit = entry.from.timestamp;\r\n  });\r\n\r\n  return reversed;\r\n};\r\n\r\nexport const createFakeLastEntry = (entry: types.StopwatchEntry) => {\r\n  const newTimeStamp: number = new Date(\r\n    entry.year,\r\n    entry.month,\r\n    entry.day + 1,\r\n    0,\r\n    0,\r\n    -1\r\n  ).getTime();\r\n\r\n  const newEntry = {\r\n    ...entry,\r\n    timestamp: newTimeStamp,\r\n  };\r\n\r\n  return newEntry;\r\n};\r\n\r\nexport async function getEntries(userDb: any, dates: types.CustomDate[]) {\r\n  const promises: Promise<any>[] = [];\r\n\r\n  dates.forEach((date) => {\r\n    const dailyEntries = createPromise(userDb, date.year, date.month, date.day);\r\n\r\n    promises.push(dailyEntries);\r\n  });\r\n\r\n  const responses = await Promise.all(promises);\r\n\r\n  return responses.map((res) => res.docs);\r\n}\r\n\r\nconst createPromise = (\r\n  userDb: any,\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n) => {\r\n  return userDb!\r\n    .collection(`entries`)\r\n    .where(\"year\", \"==\", year)\r\n    .where(\"month\", \"==\", month)\r\n    .where(\"day\", \"==\", day)\r\n    .orderBy(\"timestamp\", \"asc\")\r\n    .get();\r\n};\r\n\r\nexport function createDates(startDate: Date, days: number) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = startDate.getFullYear();\r\n  const month: number = startDate.getMonth();\r\n\r\n  for (let i = 0; i < days; i++) {\r\n    const day: number = startDate.getDate() - i;\r\n\r\n    if (day > 0) {\r\n      dates.push({\r\n        year: year,\r\n        month: month,\r\n        day: day,\r\n      });\r\n    }\r\n\r\n    if (day <= 0) {\r\n      const newDate: Date = new Date(year, month, day);\r\n\r\n      const newDay: number = newDate.getDate();\r\n      const newMonth: number = newDate.getMonth();\r\n      const newYear: number = newDate.getFullYear();\r\n\r\n      dates.push({\r\n        year: newYear,\r\n        month: newMonth,\r\n        day: newDay,\r\n      });\r\n    }\r\n  }\r\n\r\n  return dates;\r\n}\r\n\r\nexport function createDatesFromRange(dateRange: Date[]) {\r\n  const dates: types.CustomDate[] = [];\r\n\r\n  const year: number = dateRange[1].getFullYear();\r\n  const month: number = dateRange[1].getMonth();\r\n\r\n  // console.log(dateRange[0]);\r\n  // console.log(dateRange[1]);\r\n\r\n  const days: number =\r\n    (dateRange[1].getTime() - dateRange[0].getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n  // console.log(Math.round(days));\r\n\r\n  for (let i = 0; i < Math.round(days); i++) {\r\n    const day: number = dateRange[1].getDate() - i;\r\n\r\n    const newDate: Date = new Date(year, month, day);\r\n\r\n    const newDay: number = newDate.getDate();\r\n    const newMonth: number = newDate.getMonth();\r\n    const newYear: number = newDate.getFullYear();\r\n\r\n    dates.push({\r\n      year: newYear,\r\n      month: newMonth,\r\n      day: newDay,\r\n    });\r\n    // }\r\n  }\r\n\r\n  return dates;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./EntryEditForm.module.css\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as types from \"../../../Types\";\r\nimport {\r\n  timeStringFromTimestamp,\r\n  stringPlusDayToTimestamp,\r\n} from \"../../../HalperFunctions/General\";\r\nimport { reletiveTimestampToString } from \"../../../HalperFunctions/HandleStopwatches\";\r\n\r\nconst EntryEditForm: React.FC<{\r\n  entry: types.CompleteEntry | null;\r\n  onCancel: () => void;\r\n  submitHandler: (newFrom: number, newTo: number) => void;\r\n}> = React.memo(({ entry, submitHandler, onCancel }) => {\r\n  const [newFrom, setNewFrom] = useState<number>(entry!.from.timestamp);\r\n  const [newTo, setNewTo] = useState<number>(entry!.to.timestamp);\r\n  const [newSubTotal, setNewSubTotal] = useState<number>(newTo - newFrom);\r\n\r\n  const fromInitValue = new Date(entry!.from.timestamp);\r\n  const toInitValue = new Date(entry!.to.timestamp);\r\n\r\n  const initialValues: any = {\r\n    fromHour: fromInitValue.getHours(),\r\n    fromMinute: fromInitValue.getMinutes(),\r\n    fromSecond: fromInitValue.getSeconds(),\r\n    toHour: toInitValue.getHours(),\r\n    toMinute: toInitValue.getMinutes(),\r\n    toSecond: toInitValue.getSeconds(),\r\n  };\r\n\r\n  // console.log(`rendering form`, entry);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={(values) => {}}\r\n        validate={(values) => {\r\n          const errors: types.inputEditError = {\r\n            to: false,\r\n            from: false,\r\n          };\r\n\r\n          const fromInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.fromHour,\r\n            values.fromMinute,\r\n            values.fromSecond,\r\n            entry!.from.timestamp\r\n          );\r\n\r\n          const toInputTimestamp: number = stringPlusDayToTimestamp(\r\n            values.toHour,\r\n            values.toMinute,\r\n            values.toSecond,\r\n            entry!.to.timestamp\r\n          );\r\n\r\n          const isFromBiggerThanLimit: boolean =\r\n            fromInputTimestamp >= entry!.from.limit!;\r\n\r\n          const isFromSmallerThanTo: boolean =\r\n            fromInputTimestamp <= toInputTimestamp;\r\n\r\n          const isToSmallerThanLimit: boolean =\r\n            toInputTimestamp <= entry!.to.limit!;\r\n\r\n          const isToBiggerThanFrom: boolean =\r\n            toInputTimestamp > fromInputTimestamp;\r\n\r\n          if (!isFromBiggerThanLimit || !isFromSmallerThanTo) {\r\n            errors.from = true;\r\n          }\r\n\r\n          if (!isToBiggerThanFrom || !isToSmallerThanLimit) {\r\n            errors.to = true;\r\n          }\r\n\r\n          setNewFrom(fromInputTimestamp);\r\n          setNewTo(toInputTimestamp);\r\n          setNewSubTotal(toInputTimestamp - fromInputTimestamp);\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        {({ errors, values }) => (\r\n          <Form className={classes.Form}>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.from ? `red` : `green` }}\r\n            >\r\n              <label>From:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"fromHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"fromSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                entry!.from.limit!\r\n              )} and ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.toHour,\r\n                  values.toMinute,\r\n                  values.toSecond,\r\n                  entry!.to.timestamp\r\n                )\r\n              )}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{ borderColor: errors.to ? `red` : `green` }}\r\n            >\r\n              <label>To:</label>\r\n              <Field min={0} max={23} type=\"number\" name=\"toHour\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toMinute\" />\r\n              <p>:</p>\r\n              <Field min={0} max={59} type=\"number\" name=\"toSecond\" />\r\n            </div>\r\n            <div className={classes.Limit}>\r\n              {`Must be between ${timeStringFromTimestamp(\r\n                stringPlusDayToTimestamp(\r\n                  values.fromHour,\r\n                  values.fromMinute,\r\n                  values.fromSecond,\r\n                  entry!.from.timestamp\r\n                )\r\n              )} and ${timeStringFromTimestamp(entry!.to.limit!)}`}\r\n            </div>\r\n            <div\r\n              className={classes.Field}\r\n              style={{\r\n                width: `100%`,\r\n                borderColor: errors.from ? `red` : `green`,\r\n              }}\r\n            >\r\n              <p style={{ fontWeight: \"normal\", width: `100%` }}>\r\n                Sub-Total: {reletiveTimestampToString(newSubTotal)}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => submitHandler(newFrom, newTo)}\r\n              type=\"submit\"\r\n              className={classes.SaveButton}\r\n              disabled={!!errors.to || !!errors.from}\r\n            >\r\n              Save Changes\r\n            </button>\r\n            <button className={classes.CancelButton} onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default EntryEditForm;\r\n","import React, { useContext } from \"react\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport * as types from \"../../../Types\";\r\nimport EntryEditForm from \"../StopwatchEntries/EntryEditForm\";\r\nimport { db } from \"../../../Firebase\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n// import DateContext from \"../../../Context/DateContext\";\r\n\r\nconst EntryEditModal: React.FC<{\r\n  show: boolean;\r\n  closeHandler: () => void;\r\n  entry: types.CompleteEntry | null;\r\n  newEntryHandler: (timestamp: number) => void;\r\n  editHandler: (batch: types.Batch) => void;\r\n}> = ({ show, closeHandler, editHandler, entry, newEntryHandler }) => {\r\n  const userDb = useContext(DbContext);\r\n\r\n  // console.log(`rendering entry edit modal`, entry);\r\n\r\n  const submit = (from: number, to: number) => {\r\n    if (!entry?.index) {\r\n      newEntryHandler(from);\r\n      newEntryHandler(to);\r\n    } else {\r\n      changeEntry(from, to);\r\n    }\r\n    closeHandler();\r\n  };\r\n\r\n  const changeEntry = (from: number, to: number) => {\r\n    console.log(`change`);\r\n\r\n    const batch = db.batch();\r\n\r\n    const fromRef = userDb!.collection(`entries`).doc(entry!.from.id);\r\n    batch.update(fromRef, { timestamp: from });\r\n\r\n    if (entry!.to.id) {\r\n      const toRef = userDb!.collection(`entries`).doc(entry!.to.id);\r\n      batch.update(toRef, { timestamp: to });\r\n    }\r\n\r\n    if (!entry!.to.id) {\r\n      console.log(`do something else`);\r\n      newEntryHandler(to);\r\n    }\r\n\r\n    editHandler(batch);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div style={{ width: `100%`, height: `60px` }}>\r\n        Change the beginning and ending\r\n      </div>\r\n      <div style={{ width: `100%`, height: `max-content` }}>\r\n        <EntryEditForm\r\n          onCancel={closeHandler}\r\n          entry={entry}\r\n          submitHandler={submit}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EntryEditModal;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport { db } from \"../../../Firebase\";\r\nimport classes from \"./StopwatchEntries.module.css\";\r\n// import Entry from \"./StopwatchEntry/StopwatchEntry\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport BarChartPreamp from \"../../Charts/BarChart/BarChartPreAmp\";\r\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { rawEntriesToPairs } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport {\r\n  absoluteTimestampToString,\r\n  reletiveTimestampToString,\r\n} from \"../../../HalperFunctions/HandleStopwatches\";\r\nimport EntryEditModal from \"../EntryEditModal/EntryEditModal\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n\r\nconst Entries: React.FC<{\r\n  show: boolean;\r\n  entries: types.StopwatchEntry[];\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  closeHandler: () => void;\r\n}> = React.memo(({ entries, stopwatch, date, show, closeHandler }) => {\r\n  const [arrangedEntries, setArrangedEntries] = useState<types.ArrangedEntries>(\r\n    []\r\n  );\r\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\r\n\r\n  const [modalDisplay, setModalDisplay] = useState<boolean>(false);\r\n\r\n  const [EntryToEdit, setEntryToEdit] = useState<types.CompleteEntry | null>(\r\n    null\r\n  );\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  const [rows, setRows] = useState<any[]>([]);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Index\",\r\n      width: 30,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"from\",\r\n      headerName: \"From\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"to\",\r\n      headerName: \"To\",\r\n      width: 100,\r\n      editable: true,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"subTotal\",\r\n      headerName: \"Sub-Total\",\r\n      width: 120,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      width: 100,\r\n      editable: false,\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n  ];\r\n\r\n  // console.log(`rendering stopwatch entries`);\r\n\r\n  const userDb = useContext(DbContext);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setArrangedEntries([]);\r\n      setRows([]);\r\n      return;\r\n    }\r\n    const pairs = rawEntriesToPairs(entries, stopwatch.id, todaysDate!, date);\r\n    setArrangedEntries(pairs);\r\n    setRows(\r\n      pairs.map((pair, index) => {\r\n        if (!!pair.to.timestamp) {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: absoluteTimestampToString(pair.to.timestamp),\r\n            subTotal: reletiveTimestampToString(pair.subTotal),\r\n            total: reletiveTimestampToString(pair.total),\r\n          };\r\n        } else {\r\n          return {\r\n            id: pairs.length - index,\r\n            from: absoluteTimestampToString(pair.from.timestamp),\r\n            to: `now`,\r\n            subTotal: `--:--:--`,\r\n            total: `--:--:--`,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }, [entries, stopwatch, todaysDate, date]);\r\n\r\n  const deleteHandler = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n\r\n    const entriesIds: string[] = [];\r\n    entriesIds.push(arrangedEntries[realIndex].from.id);\r\n\r\n    if (!!arrangedEntries[realIndex].to.id) {\r\n      entriesIds.push(arrangedEntries[realIndex].to!.id);\r\n    }\r\n\r\n    const batch: types.Batch = db.batch();\r\n\r\n    entriesIds.forEach((id) => {\r\n      const ref = userDb!.collection(`entries`).doc(id);\r\n\r\n      batch.delete(ref);\r\n    });\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`deleted`);\r\n        setSelectionModel([]);\r\n      })\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (batch: types.Batch) => {\r\n    console.log(batch);\r\n\r\n    batch\r\n      .commit()\r\n      .then(() => {\r\n        console.log(`we did it!`);\r\n        setModalDisplay(false);\r\n      })\r\n      .catch((err: any) => {\r\n        if (err) console.log(`try again`, err);\r\n      });\r\n  };\r\n\r\n  const newEntryHandler = (timestamp: number) => {\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: stopwatch.id,\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    const realIndex: number =\r\n      arrangedEntries.length - (selectionModel[0] as number);\r\n    setEntryToEdit(arrangedEntries[realIndex] as types.CompleteEntry);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalDisplay(false);\r\n  };\r\n\r\n  const addNewEntry = () => {\r\n    if (!!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0) return;\r\n\r\n    // console.log(`new`);\r\n    const startOfDay: number = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    ).getTime();\r\n    const endOfDay: number =\r\n      date.getTime() !== todaysDate!.getTime()\r\n        ? new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate() + 1\r\n          ).getTime()\r\n        : Date.now();\r\n\r\n    const from: number = !!arrangedEntries[0]\r\n      ? arrangedEntries[0].to.timestamp\r\n      : startOfDay;\r\n\r\n    const entryToEdit: types.CompleteEntry = {\r\n      stopwatchId: stopwatch.id,\r\n      from: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: from,\r\n      },\r\n      to: {\r\n        timestamp: from,\r\n        id: ``,\r\n        limit: endOfDay,\r\n      },\r\n      subTotal: 0,\r\n      total: 0,\r\n      index: 0,\r\n    };\r\n\r\n    setEntryToEdit(entryToEdit);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <div className={classes.Header}>\r\n        <BarChartPreamp entries={entries} stopwatch={stopwatch} date={date} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={classes.Entries}>\r\n          <ButtonGroup variant=\"text\" color=\"primary\">\r\n            <Button\r\n              disabled={selectionModel.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button disabled={selectionModel.length !== 1} onClick={handleOpen}>\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={addNewEntry}\r\n              disabled={\r\n                !!arrangedEntries[0] && arrangedEntries[0].to.timestamp === 0\r\n              }\r\n            >\r\n              New Entry\r\n            </Button>\r\n          </ButtonGroup>\r\n          <DataGrid\r\n            rows={rows}\r\n            rowHeight={30}\r\n            columns={columns}\r\n            pageSize={6}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              setSelectionModel(newSelectionModel);\r\n            }}\r\n            selectionModel={selectionModel}\r\n            headerHeight={40}\r\n          />\r\n          {modalDisplay ? (\r\n            <EntryEditModal\r\n              show={modalDisplay}\r\n              entry={EntryToEdit}\r\n              closeHandler={handleClose}\r\n              newEntryHandler={newEntryHandler}\r\n              editHandler={editHandler}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default Entries;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport * as types from \"../../../Types\";\r\nimport classes from \"./Stopwatch.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport Clock from \"../../Clock/Clock\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport StopwatchEntries from \"../../Entries/StopwatchEntries/StopwatchEntries\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport * as actions from \"../../../Store/Actions/ActionsIndex\";\r\n\r\nconst Stopwatch = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [accum, setAccum] = useState<number>(0);\r\n  const [isRunning, setIsRunning] = useState<boolean>(false);\r\n  const [lastEntry, setLastEntry] = useState<number>(Date.now());\r\n\r\n  const todaysDate = useContext(DateContext);\r\n  const userDb = useContext(DbContext);\r\n\r\n  const [entries, setEntries] = useState<types.StopwatchEntry[]>([]);\r\n\r\n  useEffect(() => {\r\n    setEntries([]);\r\n    setIsRunning(false);\r\n    setAccum(0);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.stopwatch.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      const newEntries: types.StopwatchEntry[] = [];\r\n\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `stopwatchEntry`,\r\n        };\r\n        newEntries.push(entry);\r\n      });\r\n\r\n      setEntries(newEntries);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.stopwatch.id, props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!entries.length) {\r\n      setIsRunning(false);\r\n      setAccum(0);\r\n      return;\r\n    }\r\n\r\n    const even: boolean = !(entries.length % 2);\r\n    setIsRunning(!even);\r\n\r\n    const entriesTimestamps: number[] = entries.map((entry) => entry.timestamp);\r\n\r\n    if (!even) {\r\n      // console.log(`i shouldn't see this`);\r\n      if (props.date.getTime() === todaysDate!.getTime()) {\r\n        // console.log(`today`);\r\n        const firstEntry = entriesTimestamps.pop();\r\n        setLastEntry(firstEntry!);\r\n      }\r\n\r\n      if (props.date.getTime() !== todaysDate!.getTime()) {\r\n        setIsRunning(false);\r\n        entriesTimestamps.push(\r\n          new Date(\r\n            props.date.getFullYear(),\r\n            props.date.getMonth(),\r\n            props.date.getDate() + 1,\r\n            0,\r\n            0,\r\n            -1\r\n          ).getTime()\r\n        );\r\n      }\r\n    }\r\n\r\n    let accum: number = 0;\r\n\r\n    entriesTimestamps.forEach((entry, index) => {\r\n      if (!(index % 2)) {\r\n        accum -= entry;\r\n      } else {\r\n        accum += entry;\r\n      }\r\n    });\r\n\r\n    setAccum(accum);\r\n  }, [entries, props.date, todaysDate]);\r\n\r\n  const mainButtonHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    userDb!\r\n      .collection(`entries`)\r\n      .add({\r\n        timestamp: timestamp,\r\n        trackerId: props.stopwatch.id,\r\n        year: todaysDate!.getFullYear(),\r\n        month: todaysDate!.getMonth(),\r\n        day: todaysDate!.getDate(),\r\n        type: `stopwatchEntry`,\r\n      })\r\n      .then(() => {})\r\n      .catch((err: any) => console.log(err));\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    props.selector(props.stopwatch.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.stopwatch.color,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <button\r\n          className={classes.MainButton}\r\n          onClick={mainButtonHandler}\r\n          disabled={props.date.getTime() !== todaysDate!.getTime()}\r\n        >\r\n          <svg width=\"50\" height=\"50\" fill=\"currentColor\">\r\n            <use href={`${icons}#${isRunning ? `pause` : `play`}-circle`} />\r\n          </svg>\r\n        </button>\r\n        <h5 className={classes.Header}>{props.stopwatch.name}</h5>\r\n        <Clock isRunning={isRunning} accum={accum} lastEntry={lastEntry} />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n      <StopwatchEntries\r\n        show={props.entriesToDisplay === props.stopwatch.id}\r\n        entries={entries}\r\n        stopwatch={props.stopwatch}\r\n        date={props.date}\r\n        closeHandler={() => props.displayEntries(``)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n  entriesToDisplay: state.entriesToDisplay,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  displayEntries: (id: string) => actions.displayEntries(id),\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatch: types.StopwatchType;\r\n  date: Date;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Stopwatch);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport classes from \"./Rater.module.css\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Rater = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [value, setValue] = useState<number | null>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.RaterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setValue(0);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.rater.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          value: data.value,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `raterEntry`,\r\n        };\r\n        setEntry(entry);\r\n        setValue(entry.value);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.rater.id, props.user]);\r\n\r\n  const rateHandler = (event: React.ChangeEvent<{}>, value: number | null) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          value: value,\r\n          timestamp: timestamp,\r\n          trackerId: props.rater.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `raterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ value: value })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.rater.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      style={{\r\n        borderColor: props.rater.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.rater.color}`\r\n        //   : `none`,\r\n      }}\r\n      className={trackerClasses.Tracker}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.rater.name}</h5>\r\n        <Rating\r\n          className={classes.Rating}\r\n          name={props.rater.id}\r\n          value={value}\r\n          onChange={rateHandler}\r\n          size=\"large\"\r\n          precision={0.5}\r\n        />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  rater: types.RaterType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Rater);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport classes from \"./Checker.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Checker = (props: Props) => {\r\n  // const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CheckerEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setEntry(null);\r\n    setIsChecked(false);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.checker.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `checkerEntry`,\r\n          checked: data.checked,\r\n        };\r\n\r\n        setEntry(entry);\r\n        setIsChecked(data.checked);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.checker.id, props.user]);\r\n\r\n  const checkerHandler = () => {\r\n    const timestamp = Date.now();\r\n\r\n    const newIsChecked: boolean = isChecked ? false : true;\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          timestamp: timestamp,\r\n          trackerId: props.checker.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `checkerEntry`,\r\n          checked: newIsChecked,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ checked: newIsChecked })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n\r\n    props.selector(props.checker.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.checker.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.checker.color}`\r\n        //   : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.checker.name}</h5>\r\n        <div className={classes.CheckBox}>\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={checkerHandler}\r\n            // className=\"main-button\"\r\n            color=\"primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  checker: types.CheckerType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Checker);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport trackerClasses from \"../Tracker.module.css\";\r\nimport classes from \"./Counter.module.css\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport CounterIcon from \"../../Icons/CounterIcon\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst Counter = (props: Props) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const userDb = useContext(DbContext);\r\n  const [entry, setEntry] = useState<types.CounterEntry | null>(null);\r\n\r\n  useEffect(() => {\r\n    setCount(0);\r\n    setEntry(null);\r\n\r\n    const entriesRef = collection(userDb!, \"entries\");\r\n\r\n    const q = query(\r\n      entriesRef,\r\n      where(\"trackerId\", \"==\", props.counter.id),\r\n      where(\"year\", \"==\", props.date.getFullYear()),\r\n      where(\"month\", \"==\", props.date.getMonth()),\r\n      where(\"day\", \"==\", props.date.getDate()),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: any) => {\r\n      snapshot.forEach((doc: any) => {\r\n        const data = doc.data();\r\n        const entry = {\r\n          count: data.count,\r\n          timestamp: data.timestamp,\r\n          trackerId: data.trackerId,\r\n          entryId: doc.id,\r\n          year: data.year,\r\n          month: data.month,\r\n          day: data.day,\r\n          type: `counterEntry`,\r\n        };\r\n        setCount(data.count);\r\n        setEntry(entry);\r\n      });\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.date, props.counter.id, props.user]);\r\n\r\n  const changeCount = (newCount: number) => {\r\n    const timestamp = Date.now();\r\n\r\n    if (!entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .add({\r\n          count: newCount,\r\n          timestamp: timestamp,\r\n          trackerId: props.counter.id,\r\n          year: props.date.getFullYear(),\r\n          month: props.date.getMonth(),\r\n          day: props.date.getDate(),\r\n          type: `counterEntry`,\r\n        })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n\r\n    if (entry) {\r\n      userDb!\r\n        .collection(`entries`)\r\n        .doc(entry.entryId)\r\n        .update({ count: newCount })\r\n        .then(() => {})\r\n        .catch((err: any) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const select = (event: any) => {\r\n    // if (!!event.target.closest(`.main-button`)) return;\r\n    props.selector(props.counter.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      // onClick={select}\r\n      className={trackerClasses.Tracker}\r\n      style={{\r\n        borderColor: props.counter.color,\r\n        // boxShadow: props.isSelected\r\n        //   ? `1px 1px 10px 1px ${props.counter.color}`\r\n        //   : `none`,\r\n      }}\r\n    >\r\n      <div className={classes.Content}>\r\n        <h5 className={classes.Header}>{props.counter.name}</h5>\r\n        <CounterIcon\r\n          count={count}\r\n          size={props.counter.size}\r\n          plus={changeCount}\r\n          minus={changeCount}\r\n        />\r\n      </div>\r\n      <div className={trackerClasses.Expand}>\r\n        <svg onClick={select} width=\"30\" height=\"30\" fill=\"currentColor\">\r\n          <use href={`${icons}#chevron-expand`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: types.State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  counter: types.CounterType;\r\n  date: Date;\r\n  // isSelected: boolean;\r\n  selector: (id: string) => void;\r\n};\r\n\r\nexport default connector(Counter);\r\n","import React from \"react\";\r\nimport classes from \"./NewTrackerGuide.module.css\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { State } from \"../../Types\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Divider from \"../UI/Divider\";\r\nimport FakeTracker from \"../TrackersForm/FakeTracker/FakeTracker\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst trackersArray = [`stopwatch`, `counter`, `checker`, `rater`];\r\n\r\nconst NewUserGuide = (props: Props) => {\r\n  const [step, setStep] = React.useState<number>(1);\r\n\r\n  const [line, setLine] = React.useState<string | null>(`obj`);\r\n\r\n  const [answer1, setAnswer1] = React.useState<null | string>(null);\r\n  const [answer2, setAnswer2] = React.useState<null | string>(null);\r\n\r\n  const [trackers, setTrackers] = React.useState<Map<string, string>>(\r\n    new Map()\r\n  );\r\n\r\n  const [selected, setSelected] = React.useState<null | string>(null);\r\n\r\n  const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer1((event.target as HTMLInputElement).value);\r\n  };\r\n  const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer2((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const map: Map<string, string> = new Map();\r\n    map.set(`stopwatch`, `Recommended`);\r\n    map.set(`counter`, `Possible`);\r\n    map.set(`rater`, `Possible`);\r\n    map.set(`checker`, ``);\r\n\r\n    setTrackers(map);\r\n\r\n    return () => {\r\n      setStep(1);\r\n      setLine(`obj`);\r\n      setAnswer1(null);\r\n      setAnswer2(null);\r\n      setSelected(null);\r\n    };\r\n  }, [props]);\r\n\r\n  const handleToggle = (event: any) => {\r\n    if (event.target.closest(\".obj\")) {\r\n      setLine(`obj`);\r\n    }\r\n    if (event.target.closest(\".subj\")) {\r\n      setLine(`subj`);\r\n    }\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    const map: Map<string, string> = new Map();\r\n\r\n    if (step === 4) {\r\n      props.onFinish(selected!);\r\n      return;\r\n    }\r\n\r\n    if (step === 3) {\r\n      if (answer2 === `yes`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, `Recommended`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`counter`);\r\n      } else {\r\n        map.set(`stopwatch`, `Possible`);\r\n        map.set(`counter`, `Possible`);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Recommended`);\r\n\r\n        setSelected(`checker`);\r\n      }\r\n      setStep(4);\r\n    }\r\n\r\n    if (step === 2) {\r\n      if (answer1 === `yes`) {\r\n        map.set(`stopwatch`, `Recommended`);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, ``);\r\n        map.set(`checker`, `Possible`);\r\n\r\n        setSelected(`stopwatch`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(3);\r\n      }\r\n    }\r\n\r\n    if (step === 1) {\r\n      if (line === `subj`) {\r\n        map.set(`stopwatch`, ``);\r\n        map.set(`counter`, ``);\r\n        map.set(`rater`, `Recommended`);\r\n        map.set(`checker`, ``);\r\n\r\n        setSelected(`rater`);\r\n        setStep(4);\r\n      } else {\r\n        setStep(2);\r\n      }\r\n    }\r\n\r\n    setTrackers(map);\r\n  };\r\n\r\n  const backHandler = () => {\r\n    if (step === 4) {\r\n      if (line === `subj`) {\r\n        setStep(1);\r\n      } else {\r\n        setStep(answer1 === `yes` ? 2 : 3);\r\n      }\r\n    } else {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const checkNext = () => {\r\n    let disabled: boolean;\r\n\r\n    switch (step) {\r\n      case 1:\r\n        disabled = !line;\r\n        break;\r\n      case 2:\r\n        disabled = !answer1;\r\n        break;\r\n      case 3:\r\n        disabled = !answer2;\r\n        break;\r\n      case 4:\r\n        disabled = !selected;\r\n        break;\r\n      default:\r\n        disabled = true;\r\n        break;\r\n    }\r\n\r\n    return disabled!;\r\n  };\r\n\r\n  let explanetion: string;\r\n\r\n  switch (line) {\r\n    case \"obj\":\r\n      explanetion = `i.e. Something that also an outsider looking at me could have measured`;\r\n      break;\r\n    case \"subj\":\r\n      explanetion = `i.e. Somebody looking from the outside couldn't tell, only i can know`;\r\n      break;\r\n    default:\r\n      explanetion = `Please select one`;\r\n  }\r\n\r\n  let body: any;\r\n\r\n  switch (step) {\r\n    case 1:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <div className={classes.Toggle}>\r\n            <h5>I want to track something</h5>\r\n            <div onClick={handleToggle} className={classes.Togglegroup}>\r\n              <button\r\n                style={{\r\n                  borderRadius: `10px 0px 0px 10px`,\r\n                  backgroundColor:\r\n                    line === `obj` ? `rgb(81, 229, 255)` : `white`,\r\n                }}\r\n                className=\"obj\"\r\n              >\r\n                objective\r\n              </button>\r\n              <div></div>\r\n              <button\r\n                style={{\r\n                  borderRadius: `0px 10px 10px 0px`,\r\n                  backgroundColor:\r\n                    line === `subj` ? `rgb(81, 229, 255)` : `white`,\r\n                }}\r\n                className=\"subj\"\r\n              >\r\n                subjective\r\n              </button>\r\n              <svg\r\n                className={classes.Arrow}\r\n                style={{\r\n                  right: line === `subj` ? `50px` : `150px`,\r\n                }}\r\n                width=\"20\"\r\n                height=\"20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <use href={`${icons}#caret-up-fill`} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p style={{ marginTop: `10px` }}>{explanetion}</p>\r\n        </div>\r\n      );\r\n      break;\r\n    case 2:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"fieldset\">\r\n            <h5>Does duration matter?</h5>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"controlled-radio-buttons-group\"\r\n              value={answer1}\r\n              onChange={handleChange1}\r\n            >\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's pretty much the same duration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Duration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    case 3:\r\n      body = (\r\n        <div className={classes.Card}>\r\n          <FormControl component=\"div\">\r\n            <h5>\r\n              Does iteration matter? <small>(i.e how many times...)</small>\r\n            </h5>\r\n            <RadioGroup value={answer2} onChange={handleChange2}>\r\n              <div className={classes.RadioOptions}>\r\n                <FormControlLabel\r\n                  value=\"no\"\r\n                  control={<Radio />}\r\n                  label=\"Definitely not.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"neutral\"\r\n                  control={<Radio />}\r\n                  label=\"It's the same iteration every time.\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"yes\"\r\n                  control={<Radio />}\r\n                  label=\"Iteration is exactly what i want to track about it.\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      body = (\r\n        <div className={classes.Card} style={{ boxShadow: `none` }}>\r\n          <h5>Choose a tracker:</h5>\r\n          <div className={classes.Options}>\r\n            {trackersArray.map((type, index) => {\r\n              let color: string;\r\n              let order: number;\r\n              let trackerColor: string;\r\n              let className;\r\n\r\n              switch (trackers.get(type)) {\r\n                case `Recommended`:\r\n                  color = `rgb(3, 219, 57)`;\r\n                  order = 1;\r\n                  className = classes.Recommended;\r\n                  break;\r\n                case `Possible`:\r\n                  color = `rgb(46, 196, 255)`;\r\n                  order = 2;\r\n                  className = classes.Possible;\r\n                  break;\r\n                default:\r\n                  color = `rgb(190, 190, 190)`;\r\n                  order = 4;\r\n                  className = classes.NotRec;\r\n                  break;\r\n              }\r\n\r\n              switch (type) {\r\n                case `stopwatch`:\r\n                  trackerColor = `rgb(152, 29, 135)`;\r\n                  break;\r\n                case `rater`:\r\n                  trackerColor = `rgb(12, 223, 238)`;\r\n                  break;\r\n                case `checker`:\r\n                  trackerColor = `rgb(12, 136, 238)`;\r\n                  break;\r\n                default:\r\n                  trackerColor = `rgb(236, 54, 141)`;\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    order: order,\r\n                    boxShadow:\r\n                      selected === type ? `1px 1px 20px 3px ${color}` : ``,\r\n                  }}\r\n                  onClick={() => setSelected(type)}\r\n                  className={`${classes.Option}  ${className}`}\r\n                >\r\n                  <h5 style={{ color: color }}>{trackers.get(type)}</h5>\r\n                  <FakeTracker\r\n                    type={type}\r\n                    color={trackerColor}\r\n                    name={type.slice(0, 1).toUpperCase() + type.slice(1)}\r\n                    size={0}\r\n                    options={null}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.NewUser}>\r\n      <div className={classes.Header}>\r\n        <h1>New Tracker Guide</h1>\r\n        <p>In just a minute, we'll choose the right Tracker type for you</p>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Body}>{body}</div>\r\n      <Divider />\r\n      <div className={classes.ButtonPanel}>\r\n        <button\r\n          onClick={backHandler}\r\n          disabled={step === 1}\r\n          className={classes.Back}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          disabled={checkNext()}\r\n          onClick={nextHandler}\r\n          className={classes.Next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  userName: state.userName,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  noActiveUser: () => actions.logout(),\r\n  onSignout: () => actions.setUserName(``),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  onClose: () => void;\r\n  onFinish: (type: string) => void;\r\n};\r\n\r\nexport default connector(NewUserGuide);\r\n","import React, { MutableRefObject } from \"react\";\r\nimport classes from \"./NewTracker.module.css\";\r\nimport FakeTracker from \"../TrackersForm/FakeTracker/FakeTracker\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Divider from \"../UI/Divider\";\r\n\r\nconst NewTracker = (props: Props) => {\r\n  const [selected, setSelected] = React.useState<string>(`rater`);\r\n  const [color, setColor] = React.useState<string>(`rgb(12, 223, 238)`);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      setSelected(`rater`);\r\n      setColor(`rgb(12, 223, 238)`);\r\n    };\r\n  }, [props]);\r\n\r\n  const trackers = [\r\n    {\r\n      name: `Rater`,\r\n      type: `rater`,\r\n      color: `rgb(12, 223, 238)`,\r\n    },\r\n    {\r\n      name: `Checker`,\r\n      type: `checker`,\r\n      color: `rgb(12, 136, 238)`,\r\n    },\r\n    {\r\n      name: `Stopwatch`,\r\n      type: `stopwatch`,\r\n      color: `rgb(152, 29, 135)`,\r\n    },\r\n    {\r\n      name: `Counter`,\r\n      type: `counter`,\r\n      color: `rgb(236, 54, 141)`,\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.Modal}>\r\n      <div className={classes.Header}>\r\n        <h1>Choose a Tracker type</h1>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.Options}>\r\n        {trackers.map((tracker) => {\r\n          return (\r\n            <div\r\n              key={tracker.name}\r\n              className={classes.Option}\r\n              onClick={() => {\r\n                setSelected(tracker.type);\r\n                setColor(tracker.color);\r\n              }}\r\n            >\r\n              <div className={classes.Arrow}>\r\n                <svg\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  fill={tracker.color}\r\n                  color={tracker.type === selected ? tracker.color : `white`}\r\n                >\r\n                  <use href={`${icons}#caret-right-fill`} />\r\n                </svg>\r\n              </div>\r\n              <FakeTracker\r\n                type={tracker.type}\r\n                color={tracker.color}\r\n                name={tracker.name}\r\n                size={1}\r\n                options={null}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.NotSure}>\r\n        <div className={classes.Large} style={{ backgroundColor: color }}>\r\n          <button onClick={props.onNotSure} className={classes.Left}>\r\n            Not Sure?\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              // props.colorRef.current = color;\r\n              props.onNext(selected);\r\n            }}\r\n            className={classes.Right}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  onNext: (type: string) => void;\r\n  onNotSure: () => void;\r\n  // colorRef: React.MutableRefObject<string>;\r\n};\r\n\r\nexport default NewTracker;\r\n","import React from \"react\";\r\n// import Auxiliary from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./InputField.module.css\";\r\n\r\nconst InputField = (props: Props) => {\r\n  const [value, setValue] = React.useState<string | number>(``);\r\n  const [touched, setTouched] = React.useState<boolean>(false);\r\n  const [error, setError] = React.useState<string>(``);\r\n\r\n  React.useEffect(() => {\r\n    setValue(props.value);\r\n  }, [props]);\r\n\r\n  const handleChange = (event: any) => {\r\n    setTouched(true);\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    let newError: string;\r\n    props.validators.forEach((validator) => {\r\n      newError = !!validator(newValue) ? validator(newValue) : newError;\r\n    });\r\n\r\n    setError(newError!);\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    props.submitHandler(value);\r\n  };\r\n\r\n  let borderColor: string = `rgb(0, 153, 255)`;\r\n  if (touched && !!error) borderColor = `red`;\r\n  if (props.readOnly) borderColor = `lightgrey`;\r\n\r\n  return (\r\n    <form\r\n      style={{ zIndex: props.readOnly ? 0 : 1 }}\r\n      onSubmit={handleSubmit}\r\n      className={classes.Form}\r\n    >\r\n      {props.type === `textarea` ? (\r\n        <textarea\r\n          style={{\r\n            borderColor: borderColor,\r\n            width: props.width ? props.width : \"max-content\",\r\n          }}\r\n          id={props.name}\r\n          value={value}\r\n          readOnly={props.readOnly}\r\n          onChange={handleChange}\r\n        />\r\n      ) : (\r\n        <input\r\n          style={{\r\n            borderColor: borderColor,\r\n            width: props.width ? props.width : \"\",\r\n          }}\r\n          id={props.name}\r\n          type={props.type}\r\n          value={value}\r\n          readOnly={props.readOnly}\r\n          onChange={handleChange}\r\n        />\r\n      )}\r\n      <div className={classes.Message}>\r\n        <p>{error}</p>\r\n      </div>\r\n      <button\r\n        style={{\r\n          display: props.readOnly ? `none` : `unset`,\r\n          bottom: props.type === `textarea` ? `10px` : `unset`,\r\n          top: props.type !== `textarea` ? `10px` : `unset`,\r\n        }}\r\n        disabled={!!error}\r\n        className={classes.Save}\r\n        type=\"submit\"\r\n      >\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  name: string;\r\n  width: string | undefined;\r\n  description: string;\r\n  type: string;\r\n  value: string | number;\r\n  validators: ((value: string | number) => string)[];\r\n  readOnly: boolean;\r\n  submitHandler: (value: string | number) => void;\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport classes from \"./Box.module.css\";\r\n// import Divider from \"../../UI/Divider\";\r\n\r\nconst Box: React.FC<{\r\n  display: boolean;\r\n  name: string;\r\n  label: string;\r\n  closable: boolean;\r\n  onClose: (name: string) => void;\r\n}> = (props) => {\r\n  if (!props.display) return null;\r\n\r\n  const handleClose = () => {\r\n    props.onClose(props.name);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Box}>\r\n      <button\r\n        style={{ display: props.closable ? `unset` : `none` }}\r\n        onClick={handleClose}\r\n        className={classes.Button}\r\n      >\r\n        x\r\n      </button>\r\n      <h5 className={classes.Label}>{props.label}</h5>\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport classes from \"./ColorPicker.module.css\";\r\nimport { CirclePicker, ChromePicker } from \"react-color\";\r\n\r\nconst ColorPicker = (props: Props) => {\r\n  const [type, setType] = React.useState<number>(0);\r\n\r\n  return (\r\n    <div className={classes.ColorPicker}>\r\n      <div className={classes.Switch}>\r\n        <button\r\n          style={{ backgroundColor: !type ? `rgb(231, 231, 231)` : `unset` }}\r\n          onClick={() => setType(0)}\r\n        >\r\n          Circles\r\n        </button>\r\n        <button\r\n          style={{ backgroundColor: !!type ? `rgb(231, 231, 231)` : `unset` }}\r\n          onClick={() => setType(280)}\r\n        >\r\n          Chrome\r\n        </button>\r\n      </div>\r\n      <div className={classes.Pickers}>\r\n        <div\r\n          className={classes.Slider}\r\n          style={{ transform: `translateX(-${type}px)` }}\r\n        >\r\n          <div className={classes.Picker}>\r\n            <CirclePicker\r\n              onChangeComplete={props.onChange}\r\n              color={props.color}\r\n            />\r\n          </div>\r\n          <div className={classes.Picker}>\r\n            <ChromePicker\r\n              onChangeComplete={props.onChange}\r\n              color={props.color}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  color: string;\r\n  onChange: (color: any) => void;\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport classes from \"./MessageModal.module.css\";\r\n\r\nconst MessageModal = (props: Props) => {\r\n  return (\r\n    <div className={classes.Backdrop}>\r\n      <div className={classes.Modal}>\r\n        <div className={classes.Message}>\r\n          <h2>{props.main}</h2>\r\n          <p>{props.sub}</p>\r\n        </div>\r\n        <div className={classes.ButtonPanel}>\r\n          <button className={classes.No} onClick={props.onNo}>\r\n            Cancel\r\n          </button>\r\n          <button className={classes.Yes} onClick={props.onYes}>\r\n            I'm sure\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  main: string;\r\n  sub: string;\r\n  onYes: () => void;\r\n  onNo: () => void;\r\n};\r\n\r\nexport default MessageModal;\r\n","import React from \"react\";\r\nimport classes from \"./ExpandedTracker.module.css\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport InputField from \"../../FormElements/InputField/InputField\";\r\n// import { CirclePicker } from \"react-color\";\r\nimport Box from \"../../UI/Box/Box\";\r\nimport * as actions from \"../../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DbRef } from \"../../../Types\";\r\nimport DbContext from \"../../../Context/DbContext\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  QuerySnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Tracker, State } from \"../../../Types\";\r\nimport ColorPicker from \"../../FormElements/ColorPicker/ColorPicker\";\r\nimport MessageModal from \"../../UI/MessageModal/MessageModal\";\r\n// const initialBoxs = {\r\n//   description: true,\r\n// };\r\n\r\nconst ExpandedTracker = (props: Props) => {\r\n  // const [boxs, setBoxs] = React.useState<any>(initialBoxs);\r\n  const [fieldInEdit, setFieldInEdit] = React.useState<string>(``);\r\n  const [name, setName] = React.useState<string>(``);\r\n  const [type, setType] = React.useState<string>(``);\r\n  const [description, setDescription] = React.useState<string>(``);\r\n  const [color, setColor] = React.useState<string>(``);\r\n  const [stepSize, setStepSize] = React.useState<number>(1);\r\n  const [displayMessage, setDisplayMessage] = React.useState<boolean>(false);\r\n\r\n  const userDb = React.useContext(DbContext);\r\n\r\n  React.useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const trackersRef = collection(userDb!, \"trackers\");\r\n\r\n    const q = query(trackersRef, where(\"id\", \"==\", props.id));\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot: QuerySnapshot) => {\r\n      snapshot.forEach((doc: any) => {\r\n        // console.log(`once`);\r\n        const tracker: Tracker = doc.data();\r\n\r\n        setName(tracker.name);\r\n        setType(tracker.type);\r\n        setDescription(tracker.description);\r\n        setColor(tracker.color);\r\n        setStepSize(tracker.size);\r\n      });\r\n    });\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [props, userDb]);\r\n\r\n  const handleCloseBox = (name: string) => {\r\n    // setBoxs({\r\n    //   ...boxs,\r\n    //   [name]: !boxs[name],\r\n    // });\r\n  };\r\n\r\n  const editField = (field: string) => {\r\n    setFieldInEdit(field);\r\n  };\r\n\r\n  const handleChangeColor = (color: any) => {\r\n    console.log(color.hex);\r\n    submitChange(`color`, color.hex);\r\n  };\r\n\r\n  const submitChange = (field: string, value: string | number) => {\r\n    props.updateField(userDb!, props.id, field, value);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setFieldInEdit(``);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setDisplayMessage(true);\r\n  };\r\n\r\n  const deleteTracker = () => {\r\n    props.deleteTracker(userDb!, props.id);\r\n    props.deleteEntries(userDb!, props.id);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Modal} style={{ borderColor: color }}>\r\n        <div className={classes.Field}>\r\n          <Box\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            closable={false}\r\n            display={true}\r\n            onClose={handleCloseBox}\r\n          >\r\n            <div className={classes.Header}>\r\n              <InputField\r\n                name=\"Name\"\r\n                value={name}\r\n                width={undefined}\r\n                description=\"the name and stuff\"\r\n                type=\"text\"\r\n                readOnly={fieldInEdit !== `name`}\r\n                submitHandler={(value: string | number) => {\r\n                  submitChange(`name`, value);\r\n                  setFieldInEdit(``);\r\n                }}\r\n                validators={[\r\n                  (value: string | number) => {\r\n                    return value.toString().length < 1\r\n                      ? `Must have a name`\r\n                      : ``;\r\n                  },\r\n                  (value: string | number) => {\r\n                    return value.toString().length > 19\r\n                      ? `Name cannot be longer than 20 characters`\r\n                      : ``;\r\n                  },\r\n                ]}\r\n              />\r\n              <p className={classes.HeaderType}>{type}</p>\r\n              <button className={classes.Pen} onClick={() => editField(`name`)}>\r\n                <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                  <use href={`${icons}#pen`} />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </Box>\r\n          <Box\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            closable={false}\r\n            display={true}\r\n            onClose={handleCloseBox}\r\n          >\r\n            <div className={classes.Description}>\r\n              <InputField\r\n                name=\"Description\"\r\n                value={description}\r\n                width={undefined}\r\n                description=\"the name and stuff\"\r\n                type=\"textarea\"\r\n                readOnly={fieldInEdit !== `description`}\r\n                submitHandler={(value: string | number) => {\r\n                  submitChange(`description`, value);\r\n                  setFieldInEdit(``);\r\n                }}\r\n                validators={[\r\n                  (value: string | number) => {\r\n                    return value.toString().length > 200\r\n                      ? `Description cannot be longer than 200 characters`\r\n                      : ``;\r\n                  },\r\n                ]}\r\n              />\r\n              <button\r\n                className={classes.Pen}\r\n                onClick={() => editField(`description`)}\r\n              >\r\n                <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                  <use href={`${icons}#pen`} />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </Box>\r\n          {type === `counter` ? (\r\n            <Box\r\n              label=\"Step Size\"\r\n              name=\"stepSize\"\r\n              closable={false}\r\n              display={true}\r\n              onClose={handleCloseBox}\r\n            >\r\n              <div className={classes.StepSize}>\r\n                <InputField\r\n                  name=\"Step Size\"\r\n                  value={stepSize}\r\n                  width=\"40px\"\r\n                  description=\"the name and stuff\"\r\n                  type=\"number\"\r\n                  readOnly={fieldInEdit !== `stepSize`}\r\n                  submitHandler={(value: string | number) => {\r\n                    submitChange(`size`, value);\r\n                    setFieldInEdit(``);\r\n                  }}\r\n                  validators={[\r\n                    (value: string | number) => {\r\n                      return value < 1 ? `Step size has to be at least 1` : ``;\r\n                    },\r\n                  ]}\r\n                />\r\n                <button\r\n                  className={classes.Pen}\r\n                  onClick={() => editField(`stepSize`)}\r\n                >\r\n                  <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                    <use href={`${icons}#pen`} />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </Box>\r\n          ) : null}\r\n        </div>\r\n        <Box\r\n          label=\"Color\"\r\n          name=\"actions\"\r\n          closable={false}\r\n          display={true}\r\n          onClose={handleCloseBox}\r\n        >\r\n          <div className={classes.Color}>\r\n            <ColorPicker color={color} onChange={handleChangeColor} />\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          label=\"\"\r\n          name=\"actions\"\r\n          closable={false}\r\n          display={true}\r\n          onClose={handleCloseBox}\r\n        >\r\n          <div className={classes.ButtonPanel}>\r\n            {type === `stopwatch` ? (\r\n              <button\r\n                onClick={() => {\r\n                  props.displayEntries(props.id);\r\n                  props.onClose();\r\n                }}\r\n                className={classes.EntriesButton}\r\n              >\r\n                <svg width=\"16\" height=\"16\" fill=\"currentColor\">\r\n                  <use href={`${icons}#list`} />\r\n                </svg>\r\n                Entries\r\n              </button>\r\n            ) : null}\r\n            <button onClick={handleDelete} className={classes.DeleteButton}>\r\n              Delete Tracker\r\n            </button>\r\n          </div>\r\n        </Box>\r\n        <div\r\n          style={{ display: fieldInEdit === `` ? `none` : `unset` }}\r\n          onClick={cancelEdit}\r\n          className={classes.Backdrop}\r\n        ></div>\r\n        {displayMessage ? (\r\n          <MessageModal\r\n            main=\"Are you Sure?\"\r\n            sub=\"This action cannot be reversed...\"\r\n            onYes={deleteTracker}\r\n            onNo={() => setDisplayMessage(false)}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTracker: (userDb: DbRef, id: string) =>\r\n    actions.deleteTracker(userDb, id),\r\n  deleteEntries: (userDb: DbRef, id: string) =>\r\n    actions.deleteEntries(userDb, id),\r\n  updateField: (\r\n    userDb: DbRef,\r\n    id: string,\r\n    field: string,\r\n    value: string | number\r\n  ) => actions.updateField(userDb, id, field, value),\r\n  displayEntries: (id: string) => actions.displayEntries(id),\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  id: string;\r\n  onClose: () => void;\r\n};\r\n\r\nexport default connector(ExpandedTracker);\r\n","import React, { useState, useContext } from \"react\";\r\nimport TrackersForm from \"../../Components/TrackersForm/TrackersForm\";\r\nimport SurveyFormModal from \"../../Components/SurveyForm/SurveyForm\";\r\nimport classes from \"./Trackers.module.css\";\r\nimport StopwatchElement from \"../../Components/Tracker/Stopwatch/Stopwatch\";\r\nimport RaterElement from \"../../Components/Tracker/Rater/Rater\";\r\nimport CheckerElement from \"../../Components/Tracker/Checker/Checker\";\r\nimport CounterElement from \"../../Components/Tracker/Counter/Counter\";\r\nimport * as types from \"../../Types\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport { useEffect } from \"react\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport NewTrackerGuide from \"../../Components/NewTrackerGuide/NewTrackerGuide\";\r\nimport NewTracker from \"../../Components/NewTracker/NewTracker\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { State } from \"../../Types\";\r\nimport ExpandedTracker from \"../../Components/Tracker/ExpandedTracker/ExpandedTracker\";\r\n\r\nconst Trackers = React.memo((props: Props) => {\r\n  const [modalTrackerDisplay, setModalTrackerDisplay] =\r\n    useState<boolean>(false);\r\n  const [modalSurveyDisplay, setModalSurveyDisplay] = useState<boolean>(false);\r\n  const todaysDate = useContext(DateContext);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n  const [displayNewTracker, setDisplayNewTracker] = useState<boolean>(false);\r\n\r\n  const [type, setType] = useState<string>(``);\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n  const [date, setDate] = useState<Date>(todaysDate!);\r\n  const [expandedModalDisplay, setExpandedModalDiaplay] =\r\n    useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (props.higherIsEmpty) {\r\n      setIsEmpty(true);\r\n      console.log(`is empty`);\r\n    }\r\n  }, [props.higherIsEmpty]);\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDate(todaysDate!);\r\n  }, [todaysDate]);\r\n\r\n  const handleClose = () => {\r\n    setModalTrackerDisplay(false);\r\n  };\r\n\r\n  const selectHandler = (id: string) => {\r\n    setSelected(id);\r\n    setExpandedModalDiaplay(true);\r\n  };\r\n\r\n  const finishGuide = (type: string) => {\r\n    setType(type);\r\n    setIsEmpty(false);\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  const openNewTracker = () => {\r\n    setDisplayNewTracker(true);\r\n  };\r\n\r\n  const handleChooseType = (type: string) => {\r\n    setDisplayNewTracker(false);\r\n    setType(type);\r\n    setSelected(null);\r\n    setModalTrackerDisplay(true);\r\n  };\r\n\r\n  const handleNotSure = () => {\r\n    setDisplayNewTracker(false);\r\n    setIsEmpty(true);\r\n  };\r\n\r\n  const requestedHide = () => {\r\n    props.setValidateModal(\r\n      `You can always return to this guide through NEW TRACKER`,\r\n      () => {\r\n        setIsEmpty(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Trackers}>\r\n      <div className={classes.UpperContainer}>\r\n        <div className={classes.DatePicker}>\r\n          <DatePicker\r\n            maxDate={todaysDate!}\r\n            value={date}\r\n            locale=\"en-EN\"\r\n            onChange={setDate}\r\n            clearIcon={null}\r\n          />\r\n        </div>\r\n        <div className={classes.Container}>\r\n          <button onClick={openNewTracker} className={classes.NewTrackerButton}>\r\n            NEW TRACKER\r\n          </button>\r\n          {props.stopwatches.map((stopwatch) => (\r\n            <StopwatchElement\r\n              key={stopwatch.id}\r\n              stopwatch={stopwatch}\r\n              date={date}\r\n              selector={selectHandler}\r\n            />\r\n          ))}\r\n          {props.raters.map((rater) => (\r\n            <RaterElement\r\n              key={rater.id}\r\n              rater={rater}\r\n              selector={selectHandler}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {props.checkers.map((checker) => (\r\n            <CheckerElement\r\n              selector={selectHandler}\r\n              key={checker.id}\r\n              checker={checker}\r\n              date={date}\r\n            />\r\n          ))}\r\n          {props.counters.map((counter) => (\r\n            <CounterElement\r\n              key={counter.id}\r\n              selector={selectHandler}\r\n              counter={counter}\r\n              date={date}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {modalTrackerDisplay ? (\r\n        <Modal show={true} onHide={handleClose}>\r\n          <TrackersForm onFinish={handleClose} type={type} />\r\n        </Modal>\r\n      ) : null}\r\n      <SurveyFormModal\r\n        show={modalSurveyDisplay}\r\n        closeHandler={() => setModalSurveyDisplay(false)}\r\n        checkers={props.checkers}\r\n        raters={props.raters}\r\n      />\r\n      <Modal show={isEmpty} onHide={requestedHide}>\r\n        <NewTrackerGuide\r\n          onFinish={finishGuide}\r\n          onClose={() => setIsEmpty(false)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        show={displayNewTracker}\r\n        onHide={() => setDisplayNewTracker(false)}\r\n      >\r\n        <NewTracker onNext={handleChooseType} onNotSure={handleNotSure} />\r\n      </Modal>\r\n      {expandedModalDisplay ? (\r\n        <Modal\r\n          show={expandedModalDisplay}\r\n          onHide={() => setExpandedModalDiaplay(false)}\r\n        >\r\n          <ExpandedTracker\r\n            id={selected!}\r\n            onClose={() => setExpandedModalDiaplay(false)}\r\n          />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  errorMessage: state.errorMessage,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setValidateModal: (message: string, func: () => void) =>\r\n    actions.setError(message, func),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  higherIsEmpty: boolean;\r\n};\r\n\r\nexport default connector(Trackers);\r\n","import React from \"react\";\r\nimport classes from \"./Label.module.css\";\r\n\r\nconst Label: React.FC<{\r\n  color: string;\r\n  name: string;\r\n  id: string;\r\n  selected: boolean;\r\n  selectHandler: (stopwatchId: string) => void;\r\n}> = React.memo(({ color, name, selectHandler, id, selected }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectHandler(id)}\r\n      className={classes.Label}\r\n      // style={{ transform: selected ? `translateX(20px)` : `none` }}\r\n    >\r\n      <div\r\n        // className=\"select\"\r\n        style={{\r\n          backgroundColor: selected ? color : `transparent`,\r\n          borderColor: color,\r\n        }}\r\n      ></div>\r\n      <p>{name}</p>\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Label;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./TrackerSelector.module.css\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport Label from \"./Label/Label\";\r\nimport {\r\n  RaterType,\r\n  StopwatchType,\r\n  CheckerType,\r\n  Tracker,\r\n  CounterType,\r\n} from \"../../Types\";\r\n\r\nconst TrackerSelector: React.FC<{\r\n  raters: RaterType[];\r\n  stopwatches: StopwatchType[];\r\n  checkers: CheckerType[];\r\n  counters: CounterType[];\r\n  selectedTrackers: Tracker[];\r\n  handler: (trackerId: string) => void;\r\n}> = React.memo(\r\n  ({ checkers, raters, stopwatches, handler, selectedTrackers, counters }) => {\r\n    const [expanded, setExpanded] = useState<string[]>([\r\n      `stopwatches`,\r\n      `raters`,\r\n      `checkers`,\r\n      `counters`,\r\n    ]);\r\n\r\n    const handleToggle = (event: any, nodeIds: string[]) => {\r\n      setExpanded(nodeIds);\r\n    };\r\n\r\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\r\n      // console.log(nodeIds);\r\n      handler(nodeIds as unknown as string);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.TrackerSelector}>\r\n        <TreeView\r\n          defaultCollapseIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-up`} />\r\n            </svg>\r\n          }\r\n          defaultExpandIcon={\r\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n              <use href={`${icons}#chevron-down`} />\r\n            </svg>\r\n          }\r\n          expanded={expanded}\r\n          selected={selectedTrackers.map((tracker) => tracker.id)}\r\n          onNodeToggle={handleToggle}\r\n          onNodeSelect={handleSelect}\r\n        >\r\n          <TreeItem nodeId=\"raters\" label=\"Raters\">\r\n            {raters.map((rater) => (\r\n              <Label\r\n                key={rater.id}\r\n                color={rater.color}\r\n                name={rater.name}\r\n                id={rater.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(rater.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!raters.length ? <p>no raters yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"stopwatches\" label=\"Stopwatches\">\r\n            {stopwatches.map((stopwatch) => (\r\n              <Label\r\n                key={stopwatch.id}\r\n                color={stopwatch.color}\r\n                name={stopwatch.name}\r\n                id={stopwatch.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(stopwatch.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!stopwatches.length ? <p>no stopwatches yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"checkers\" label=\"Checkers\">\r\n            {checkers.map((checker) => (\r\n              <Label\r\n                key={checker.id}\r\n                color={checker.color}\r\n                name={checker.name}\r\n                id={checker.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(checker.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!checkers.length ? <p>no checkers yet...</p> : null}\r\n          </TreeItem>\r\n          <TreeItem nodeId=\"counters\" label=\"Counters\">\r\n            {counters.map((counter) => (\r\n              <Label\r\n                key={counter.id}\r\n                color={counter.color}\r\n                name={counter.name}\r\n                id={counter.id}\r\n                selected={selectedTrackers\r\n                  .map((tracker) => tracker.id)\r\n                  .includes(counter.id)}\r\n                selectHandler={handler}\r\n              />\r\n            ))}\r\n            {!counters.length ? <p>no counters yet...</p> : null}\r\n          </TreeItem>\r\n        </TreeView>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrackerSelector;\r\n","import React from \"react\";\r\nimport classes from \"./RangeSelector.module.css\";\r\n// import { Tabs, Tab } from \"react-bootstrap\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n// import { StopwatchType } from \"../../../../Types\";\r\n\r\nconst RangeSelector: React.FC<{\r\n  dateRange: Date[];\r\n  setDateRange: (Dates: Date[]) => void;\r\n  todaysDate: Date;\r\n}> = React.memo(({ dateRange, setDateRange, todaysDate }) => {\r\n  return (\r\n    <div className={classes.Selector} style={{ zIndex: 10000 }}>\r\n      <DateRangePicker\r\n        value={dateRange}\r\n        maxDate={todaysDate}\r\n        locale=\"en-EN\"\r\n        onChange={setDateRange}\r\n        clearIcon={null}\r\n        // className={classes.Calender}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RangeSelector;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport * as types from \"../../../Types\";\r\nimport DateContext from \"../../../Context/DateContext\";\r\nimport BarLineChart from \"./BarLineChart\";\r\nimport { createFakeLastEntry } from \"../../../HalperFunctions/ArrangeEntries\";\r\nimport hexRgb from \"hex-rgb\";\r\n\r\n// import Checks from \"../../Checks/Checks\";\r\n\r\nconst BarLineChartPreAmp: React.FC<{\r\n  dateStrings: string[];\r\n  stopwatches: types.StopwatchType[];\r\n  stopwatchEntries: Map<string, types.StopwatchEntry[]>;\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  counterEntries: Map<string, types.CounterEntry[]>;\r\n  checkerEntries: Map<string, types.CheckerEntry[]>;\r\n  selectedTrackers: types.Tracker[];\r\n  raterEntries: Map<string, types.RaterEntry[]>;\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    selectedTrackers,\r\n    stopwatchEntries,\r\n    raters,\r\n    raterEntries,\r\n    dateStrings,\r\n    checkers,\r\n    counters,\r\n    counterEntries,\r\n    checkerEntries,\r\n  }) => {\r\n    const [trackerDatasets, setTrackerDatasets] = useState<\r\n      types.BarChartDataset[]\r\n    >([]);\r\n\r\n    const [options, setOptions] = useState<any>({});\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    useEffect(() => {\r\n      const newOptions: any = {\r\n        elements: {\r\n          point: {\r\n            radius: 1,\r\n          },\r\n        },\r\n        interaction: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        stacked: false,\r\n        scales: {\r\n          y: {\r\n            type: \"linear\",\r\n            display: false,\r\n            position: \"left\",\r\n            title: {\r\n              display: false,\r\n            },\r\n          },\r\n          y1: {\r\n            suggestedMax: 5,\r\n            ticks: {\r\n              stepSize: 1,\r\n            },\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"right\",\r\n            title: {\r\n              display: true,\r\n              text: `Rating`,\r\n            },\r\n            grid: {\r\n              drawOnChartArea: true,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            enabled: false,\r\n            displayColors: false,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      if (!selectedTrackers.length) {\r\n        setTrackerDatasets([\r\n          {\r\n            data: [0, 0, 0, 0, 0, 0, 0],\r\n            backgroundColor: `black`,\r\n            borderColor: `black`,\r\n            type: `bar`,\r\n            stepped: false,\r\n            order: 1,\r\n            yAxisID: \"y\",\r\n            tension: 1,\r\n          },\r\n        ]);\r\n        setOptions(newOptions);\r\n        return;\r\n      }\r\n\r\n      const datasets: types.BarChartDataset[] = [];\r\n\r\n      stopwatches.forEach((stopwatch) => {\r\n        if (\r\n          !selectedTrackers.map((tracker) => tracker.id).includes(stopwatch.id)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        newOptions.scales.y.display = true;\r\n        newOptions.scales.y.suggestedMax = 4;\r\n        newOptions.scales.y.title = {\r\n          display: true,\r\n          text: `Hours`,\r\n        };\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        stopwatchEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === stopwatch.id\r\n          );\r\n\r\n          if (filteredEntries.length % 2) {\r\n            const lastEntry: types.StopwatchEntry =\r\n              filteredEntries[filteredEntries.length - 1];\r\n\r\n            const dayOfEntry: Date = new Date(\r\n              lastEntry.year,\r\n              lastEntry.month,\r\n              lastEntry.day\r\n            );\r\n\r\n            const isToday: boolean =\r\n              dayOfEntry.getTime() === todaysDate!.getTime();\r\n\r\n            if (!isToday) {\r\n              const fakeLastEntry: types.StopwatchEntry =\r\n                createFakeLastEntry(lastEntry);\r\n              filteredEntries.push(fakeLastEntry);\r\n            }\r\n\r\n            if (isToday) {\r\n              filteredEntries.push({\r\n                ...lastEntry,\r\n                timestamp: Date.now(),\r\n              });\r\n            }\r\n          }\r\n\r\n          let accum: number = 0;\r\n\r\n          filteredEntries.forEach((entry, index) => {\r\n            if (index % 2 === 0) {\r\n              accum -= entry.timestamp;\r\n            } else {\r\n              accum += entry.timestamp;\r\n            }\r\n          });\r\n\r\n          const hours: number = accum / (1000 * 60 * 60);\r\n\r\n          // days.unshift(key);\r\n          totals.unshift(hours);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: stopwatch.color,\r\n          borderColor: stopwatch.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      raters.forEach((rater) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(rater.id))\r\n          return;\r\n\r\n        const totals: (number | null)[] = [];\r\n\r\n        raterEntries.forEach((entries) => {\r\n          const filteredEntries = entries.filter(\r\n            (entry) => entry.trackerId === rater.id\r\n          );\r\n\r\n          const value: number | undefined =\r\n            filteredEntries[filteredEntries.length - 1]?.value;\r\n          totals.unshift(value ? value : null);\r\n        });\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: rater.color,\r\n          borderColor: rater.color,\r\n          type: `line`,\r\n          stepped: false,\r\n          order: 0,\r\n          yAxisID: \"y1\",\r\n          tension: 0.4,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      checkers.forEach((checker) => {\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(checker.id))\r\n          return;\r\n        newOptions.scales.y.display = false;\r\n        newOptions.scales.y1.grid.drawOnChartArea = true;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        checkerEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === checker.id\r\n          )[0];\r\n          // days.unshift(key);\r\n          totals.unshift(filteredEntry?.checked ? 1 : 0);\r\n        });\r\n\r\n        const rgb = hexRgb(checker.color);\r\n        // console.log(rgb);\r\n\r\n        const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: color,\r\n          borderColor: checker.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n      counters.forEach((counter) => {\r\n        newOptions.scales.y.display = true;\r\n\r\n        if (!selectedTrackers.map((tracker) => tracker.id).includes(counter.id))\r\n          return;\r\n        newOptions.scales.y.suggestedMax = counter.size;\r\n        newOptions.scales.y.title.text = `Count`;\r\n        newOptions.scales.y1.grid.drawOnChartArea = false;\r\n\r\n        // const days: string[] = [];\r\n        const totals: number[] = [];\r\n\r\n        counterEntries.forEach((entries) => {\r\n          const filteredEntry = entries.filter(\r\n            (entry) => entry.trackerId === counter.id\r\n          )[0];\r\n          const count: number | undefined = filteredEntry?.count;\r\n          totals.unshift(count ? count : 0);\r\n        });\r\n\r\n        // const rgb = hexRgb(counter.color);\r\n        // // console.log(rgb);\r\n\r\n        // const color: string = `rgba(${rgb.red}, ${rgb.green}, ${rgb.blue}, 0.6)`;\r\n\r\n        const dataset: types.BarChartDataset = {\r\n          data: totals,\r\n          backgroundColor: counter.color,\r\n          borderColor: counter.color,\r\n          type: `bar`,\r\n          stepped: false,\r\n          order: 1,\r\n          yAxisID: \"y\",\r\n          tension: 1,\r\n        };\r\n\r\n        datasets.push(dataset);\r\n      });\r\n\r\n      setTrackerDatasets(datasets);\r\n      setOptions(newOptions);\r\n    }, [\r\n      stopwatchEntries,\r\n      selectedTrackers,\r\n      stopwatches,\r\n      raterEntries,\r\n      raters,\r\n      checkers,\r\n      checkerEntries,\r\n      counters,\r\n      counterEntries,\r\n      todaysDate,\r\n    ]);\r\n\r\n    return (\r\n      <div style={{ display: `flex`, flexFlow: `column` }}>\r\n        <BarLineChart\r\n          datasets={trackerDatasets}\r\n          labels={dateStrings}\r\n          options={options}\r\n          width=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BarLineChartPreAmp;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport * as types from \"../../Types\";\r\nimport DbContext from \"../../Context/DbContext\";\r\nimport BarLineChartPreAmp from \"./BarLineChart/BarLineChartPreAmp\";\r\nimport DateContext from \"../../Context/DateContext\";\r\nimport {\r\n  getEntries,\r\n  createDatesFromRange,\r\n} from \"../../HalperFunctions/ArrangeEntries\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst ChartSelect: React.FC<{\r\n  dateRange: Date[];\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n  selectedTrackers: types.Tracker[];\r\n}> = React.memo(\r\n  ({\r\n    stopwatches,\r\n    checkers,\r\n    raters,\r\n    selectedTrackers,\r\n    dateRange,\r\n    counters,\r\n  }) => {\r\n    const [stopwatchEntries, setStopwatchEntries] = useState<\r\n      Map<string, types.StopwatchEntry[]>\r\n    >(new Map());\r\n    const [checkerEntries, setCheckerEntries] = useState<\r\n      Map<string, types.CheckerEntry[]>\r\n    >(new Map());\r\n    const [raterEntries, setRaterEntries] = useState<\r\n      Map<string, types.RaterEntry[]>\r\n    >(new Map());\r\n    const [counterEntries, setCounterEntries] = useState<\r\n      Map<string, types.CounterEntry[]>\r\n    >(new Map());\r\n    const [dateStrings, setDateStrings] = useState<string[]>([]);\r\n    // const [barLineChart, setBarLineChart] = useState({\r\n    //   display: true,\r\n    //   disabled: false,\r\n    // });\r\n    // const [pieChart, setPieChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n    // const [areaChart] = useState({\r\n    //   display: false,\r\n    //   disabled: true,\r\n    // });\r\n\r\n    const userDb = useContext(DbContext);\r\n    const todaysDate = useContext(DateContext);\r\n\r\n    console.log(`rendering chart selector`);\r\n\r\n    // useEffect(() => {\r\n    //   const fromTimestamp: number = dateRange[0].getTime();\r\n    //   const toTimestamp: number = dateRange[1].getTime();\r\n    //   const dayLengthInMilli: number = 24 * 60 * 60 * 1000;\r\n\r\n    //   if (fromTimestamp + dayLengthInMilli > toTimestamp) {\r\n    //     setPieChart({\r\n    //       display: true,\r\n    //       disabled: false,\r\n    //     });\r\n    //   } else {\r\n    //     setPieChart({\r\n    //       display: false,\r\n    //       disabled: true,\r\n    //     });\r\n    //   }\r\n    // }, [dateRange]);\r\n\r\n    useEffect(() => {\r\n      const dates = createDatesFromRange(dateRange);\r\n      const dateStrings = dates.map((date) => `${date.day}/${date.month + 1}`);\r\n\r\n      setDateStrings(dateStrings.reverse());\r\n\r\n      const weekMapStopwatch: Map<string, types.StopwatchEntry[]> = new Map();\r\n      const weekMapRater: Map<string, types.RaterEntry[]> = new Map();\r\n      const weekMapChecker: Map<string, types.CheckerEntry[]> = new Map();\r\n      const weekMapCounter: Map<string, types.CounterEntry[]> = new Map();\r\n\r\n      getEntries(userDb, dates).then((res) => {\r\n        res.forEach((day: any[], index) => {\r\n          const stopwatchEntries: types.StopwatchEntry[] = [];\r\n          const raterEntries: types.RaterEntry[] = [];\r\n          const checkerEntries: types.CheckerEntry[] = [];\r\n          const counterEntries: types.CounterEntry[] = [];\r\n\r\n          day.forEach((doc) => {\r\n            const entry: types.Entry = doc.data();\r\n\r\n            switch (entry.type) {\r\n              case `stopwatchEntry`:\r\n                stopwatchEntries.push(entry as types.StopwatchEntry);\r\n                break;\r\n              case `raterEntry`:\r\n                raterEntries.push(entry as types.RaterEntry);\r\n                break;\r\n              case `counterEntry`:\r\n                counterEntries.push(entry as types.CounterEntry);\r\n                break;\r\n              default:\r\n                checkerEntries.push(entry as types.CheckerEntry);\r\n                break;\r\n            }\r\n          });\r\n\r\n          weekMapStopwatch.set(dateStrings[index], stopwatchEntries);\r\n          weekMapRater.set(dateStrings[index], raterEntries);\r\n          weekMapChecker.set(dateStrings[index], checkerEntries);\r\n          weekMapCounter.set(dateStrings[index], counterEntries);\r\n        });\r\n\r\n        setStopwatchEntries(weekMapStopwatch);\r\n        setRaterEntries(weekMapRater);\r\n        setCheckerEntries(weekMapChecker);\r\n        setCounterEntries(weekMapCounter);\r\n      });\r\n    }, [todaysDate, userDb, dateRange]);\r\n\r\n    return (\r\n      <div style={{ marginLeft: `4px` }}>\r\n        {/* <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={barLineChart.display}\r\n                disabled={barLineChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: barLineChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"barLineChart\"\r\n              />\r\n            }\r\n            label=\"Bar Line Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={pieChart.display}\r\n                disabled={pieChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: pieChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"pieChart\"\r\n              />\r\n            }\r\n            label=\"Pie Chart\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={areaChart.display}\r\n                disabled={areaChart.disabled}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setBarLineChart({\r\n                    display: areaChart.display ? false : true,\r\n                    disabled: false,\r\n                  });\r\n                }}\r\n                name=\"areaChart\"\r\n              />\r\n            }\r\n            label=\"Area Chart\"\r\n          />\r\n        </FormGroup> */}\r\n        <BarLineChartPreAmp\r\n          stopwatchEntries={stopwatchEntries}\r\n          checkerEntries={checkerEntries}\r\n          raterEntries={raterEntries}\r\n          counterEntries={counterEntries}\r\n          stopwatches={stopwatches}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          selectedTrackers={selectedTrackers}\r\n          dateStrings={dateStrings}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ChartSelect;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport classes from \"./DataPanel.module.css\";\r\nimport * as types from \"../../Types\";\r\n\r\nimport TrackerSelector from \"../../Components/TrackerSelector/TrackerSelector\";\r\nimport RangeSelector from \"../../Components/TimeRange/RangeSelector\";\r\nimport ChartSelect from \"../../Components/Charts/ChartSelect\";\r\nimport DateContext from \"../../Context/DateContext\";\r\n// import icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\n\r\nconst DataPanel: React.FC<{\r\n  stopwatches: types.StopwatchType[];\r\n  raters: types.RaterType[];\r\n  checkers: types.CheckerType[];\r\n  counters: types.CounterType[];\r\n}> = React.memo(({ stopwatches, raters, checkers, counters }) => {\r\n  const todaysDate = useContext(DateContext);\r\n  // console.log(checkers);\r\n  // const [position, setPosition] = useState<string>(`left`);\r\n\r\n  const [selectedTrackers, setSelectedTrackers] = useState<types.Tracker[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!stopwatches.length || !raters.length) return;\r\n\r\n    setSelectedTrackers([raters[0], stopwatches[0]]);\r\n  }, [stopwatches, raters]);\r\n\r\n  // console.log(selectedTrackers);\r\n  const [dateRange, setDateRange] = useState<Date[]>([new Date(), new Date()]);\r\n\r\n  console.log(`rendering DataPanel`);\r\n\r\n  // const changePosition = () => {\r\n  //   const newPosition = position === `left` ? `right` : `left`;\r\n\r\n  //   setPosition(newPosition);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (!todaysDate) return;\r\n    setDateRange([\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate() - 7\r\n      ),\r\n      new Date(\r\n        todaysDate!.getFullYear(),\r\n        todaysDate!.getMonth(),\r\n        todaysDate!.getDate()\r\n      ),\r\n    ]);\r\n  }, [todaysDate]);\r\n\r\n  const selectTracker = (trackerId: string) => {\r\n    // console.log(trackerId);\r\n    let isSelected: boolean = false;\r\n    let newTrackers: types.Tracker[] = [];\r\n\r\n    const allTrackers: types.Tracker[] = [\r\n      ...stopwatches,\r\n      ...raters,\r\n      ...checkers,\r\n      ...counters,\r\n    ];\r\n\r\n    const tracker: types.Tracker = allTrackers.filter(\r\n      (tracker) => trackerId === tracker.id\r\n    )[0];\r\n\r\n    // console.log(tracker);\r\n\r\n    if (!tracker) return;\r\n\r\n    selectedTrackers.forEach((tracker) => {\r\n      if (tracker.id === trackerId) isSelected = true;\r\n    });\r\n\r\n    if (isSelected) {\r\n      newTrackers = selectedTrackers.filter(\r\n        (selected) => selected.id !== trackerId\r\n      );\r\n    }\r\n    if (!isSelected) {\r\n      newTrackers = [...selectedTrackers, tracker];\r\n\r\n      if (tracker.type === `stopwatch`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) => tracker.type !== `checker` && tracker.type !== `counter`\r\n        );\r\n      }\r\n\r\n      if (tracker.type === `checker`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `counter`\r\n        );\r\n      }\r\n      if (tracker.type === `counter`) {\r\n        newTrackers = newTrackers.filter(\r\n          (tracker) =>\r\n            tracker.type !== `stopwatch` && tracker.type !== `checker`\r\n        );\r\n      }\r\n    }\r\n    setSelectedTrackers(newTrackers);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.DataPanel}>\r\n      <RangeSelector\r\n        todaysDate={todaysDate!}\r\n        dateRange={dateRange}\r\n        setDateRange={setDateRange}\r\n      />\r\n      <div className={classes.Main}>\r\n        <TrackerSelector\r\n          raters={raters}\r\n          stopwatches={stopwatches}\r\n          checkers={checkers}\r\n          counters={counters}\r\n          handler={selectTracker}\r\n          selectedTrackers={selectedTrackers}\r\n        />\r\n        <ChartSelect\r\n          dateRange={dateRange}\r\n          stopwatches={stopwatches}\r\n          selectedTrackers={selectedTrackers}\r\n          raters={raters}\r\n          checkers={checkers}\r\n          counters={counters}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DataPanel;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Trackers from \"./Containers/TrackerContainer/TrackerContainer\";\r\nimport { collection, onSnapshot, QuerySnapshot } from \"firebase/firestore\";\r\nimport DataPanel from \"./Containers/DataPanel/DataPanel\";\r\nimport classes from \"./Components/UI/General.module.css\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport { State } from \"./Types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Rater,\r\n  Stopwatch,\r\n  Checker,\r\n  Counter,\r\n  // trackerConverter,\r\n} from \"./HalperFunctions/CreateTrackers\";\r\nimport DbContext from \"./Context/DbContext\";\r\nimport DateContext from \"./Context/DateContext\";\r\nimport * as types from \"./Types\";\r\n// import Footer from \"./Components/Footer/Footer\"\r\n// import LoginModal from \"./Components/AuthModals/LoginModal/LoginModal\";\r\n\r\nconst Control = (props: PropsFromRedux) => {\r\n  const [stopwatches, setStopwatches] = useState<Stopwatch[]>([]);\r\n  const [raters, setRaters] = useState<Rater[]>([]);\r\n  const [checkers, setCheckers] = useState<Checker[]>([]);\r\n  const [counters, setCounters] = useState<Counter[]>([]);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(false);\r\n\r\n  const userDb = useContext(DbContext);\r\n  const todaysDate = useContext(DateContext);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    if (!userDb) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(userDb!, \"trackers\"),\r\n      {},\r\n      (snapshot: QuerySnapshot) => {\r\n        const stopwatches: Stopwatch[] = [];\r\n        const raters: Rater[] = [];\r\n        const checkers: Checker[] = [];\r\n        const counters: Counter[] = [];\r\n\r\n        // console.log(snapshot.empty);\r\n        if (snapshot.empty) {\r\n          setIsEmpty(true);\r\n        }\r\n\r\n        snapshot.forEach((doc: any) => {\r\n          const tracker: types.Tracker = doc.data();\r\n\r\n          switch (tracker.type) {\r\n            case `stopwatch`:\r\n              stopwatches.push(tracker);\r\n              break;\r\n            case `rater`:\r\n              raters.push(tracker);\r\n              break;\r\n            case `counter`:\r\n              counters.push(tracker);\r\n              break;\r\n            default:\r\n              checkers.push(tracker);\r\n              break;\r\n          }\r\n        });\r\n        setStopwatches(stopwatches);\r\n        setCheckers(checkers);\r\n        setRaters(raters);\r\n        setCounters(counters);\r\n      }\r\n    );\r\n\r\n    if (!props.user) unsubscribe();\r\n\r\n    return unsubscribe;\r\n  }, [userDb, props.user]);\r\n\r\n  let dataPanel = null;\r\n  let trackersEl = null;\r\n\r\n  if (!!todaysDate && props.user) {\r\n    dataPanel = (\r\n      <DataPanel\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n      />\r\n    );\r\n    trackersEl = (\r\n      <Trackers\r\n        stopwatches={stopwatches}\r\n        raters={raters}\r\n        checkers={checkers}\r\n        counters={counters}\r\n        higherIsEmpty={isEmpty}\r\n      />\r\n    );\r\n  }\r\n\r\n  let view = trackersEl;\r\n\r\n  if (props.selectedView === `data`) view = dataPanel;\r\n\r\n  return (\r\n    <Aux>\r\n      <div className={classes.Background}>{view}</div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  selectedView: state.selectedView,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Control);\r\n"],"sourceRoot":""}