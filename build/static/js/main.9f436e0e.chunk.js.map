{"version":3,"sources":["Components/LoginModal/LoginModal.tsx","HalperFunctions/General.tsx","Components/MainMenu/MainMenu.module.css","Components/Spinner/Spinner.module.css","Components/MainMenu/MainMenu.tsx","Components/Watch/Watch.tsx","Components/Navigation/Toolbar/Toolbar.tsx","Components/Layouts/Layout.tsx","Components/Spinner/Spinner.tsx","App.tsx","Store/Reducer.tsx","Provider/DbProvider.tsx","Provider/DateProvider.tsx","index.tsx","Store/Actions/AuthActions.tsx","Firebase.tsx","Store/Actions/ActionTypes.tsx","Context/DateContext.tsx","hoc/Auxiliary.tsx","Components/LoginModal/Login.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Context/DbContext.tsx"],"names":["mapDispatchToProps","onLogin","data","actions","connector","connect","props","emailRef","useRef","passwordRef","show","onHide","handleClose","Body","className","classes","Form","onSubmit","event","preventDefault","loginData","email","current","value","password","Group","controlId","Control","placeholder","type","ref","variant","timeStringFromTimestamp","timestamp","date","Date","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","stringPlusDayToTimestamp","hour","minute","second","stringOfDay","getFullYear","getMonth","getDate","getTime","calcEndOfDay","now","year","month","day","module","exports","activeUser","noActiveUser","state","user","useState","anchorEl","setAnchorEl","displayMenu","setDisplayMenu","modalDisplay","setModalDisplay","MainMenu","onClick","currentTarget","width","height","fill","href","icons","Menu","keepMounted","open","onClose","MenuItem","auth","signOut","then","window","location","catch","err","console","log","LoginModal","Watch","React","memo","time","setTime","dateString","setDateString","useContext","DateContext","tick","useCallback","timeUTC","outputString","useEffect","toDateString","interval","setInterval","clearInterval","style","display","flexDirection","margin","marginRight","fontFamily","fontWeight","Toolbar","Header","Layout","children","Spinner","Loader","lazy","LandingPage","fallback","path","component","exact","initialState","reducer","action","actionTypes","userDb","setUserDb","onAuthStateChanged","db","collection","doc","uid","DbContext","Provider","DateProvider","setDate","milliSecs","setTimeout","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","loginAsync","dispatch","firebase","signInWithEmailAndPassword","userCredential","error","code","loginSuccess","logout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","firestore","LOGIN","LOGOUT","createContext","Auxiliary"],"mappings":"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","file":"static/js/main.9f436e0e.chunk.js","sourcesContent":["import React, { useRef, useContext } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Form, Button, Modal } from \"react-bootstrap\";\r\nimport classes from \"./Login.module.css\";\r\nimport { LoginData } from \"../../Types\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\n// import DbContext from \"../../Context/DbContext\";\r\n\r\nconst Login = (props: Props) => {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  // const userDb = useContext(DbContext);\r\n\r\n  // console.log(props.show);\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const loginData = {\r\n      email: emailRef.current!.value,\r\n      password: passwordRef.current!.value,\r\n    };\r\n\r\n    props.onLogin(loginData);\r\n  };\r\n\r\n  // if (!!userDb) return null;\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n      <Modal.Body>\r\n        <Form className={classes.Form} onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\" className={classes.Control}>\r\n            <Form.Control\r\n              placeholder=\"Your Email address\"\r\n              type=\"text\"\r\n              ref={emailRef}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\" className={classes.Control}>\r\n            <Form.Control\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: (data: LoginData) => actions.loginAsync(data),\r\n};\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  show: boolean;\r\n  handleClose: () => void;\r\n};\r\n\r\nexport default connector(Login);\r\n","export const setDate = () => {\r\n  const now = new Date(Date.now());\r\n  const day = now.getDate().toString().padStart(2, `0`);\r\n  const month = now.getMonth().toString().padStart(2, `0`);\r\n  const year = now.getFullYear().toString();\r\n\r\n  return day + month + year;\r\n};\r\n\r\nexport const timeStringFromTimestamp = (timestamp: number) => {\r\n  const date: Date = new Date(timestamp);\r\n  const hours: string = date.getHours().toString().padStart(2, `0`);\r\n  const minutes: string = date.getMinutes().toString().padStart(2, `0`);\r\n  const seconds: string = date.getSeconds().toString().padStart(2, `0`);\r\n\r\n  return `${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\nexport const stringPlusDayToTimestamp = (\r\n  hour: number,\r\n  minute: number,\r\n  second: number,\r\n  timestamp: number\r\n) => {\r\n  const stringOfDay: Date = new Date(timestamp);\r\n\r\n  // console.log(hour, minute, second);\r\n\r\n  const date: Date = new Date(\r\n    stringOfDay.getFullYear(),\r\n    stringOfDay.getMonth(),\r\n    stringOfDay.getDate(),\r\n    hour,\r\n    minute,\r\n    second\r\n  );\r\n\r\n  // console.log(date);\r\n\r\n  const newTimestamp: number = date.getTime();\r\n  return newTimestamp;\r\n};\r\n\r\nexport const calcEndOfDay = () => {\r\n  const date: Date = new Date(Date.now());\r\n\r\n  const year: number = date.getFullYear();\r\n  const month: number = date.getMonth();\r\n  const day: number = date.getDate() + 1;\r\n\r\n  const newDate: Date = new Date(year, month, day);\r\n\r\n  return newDate.getTime();\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__2_ibR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3QyOO\",\"load2\":\"Spinner_load2__1ANmD\"};","import React, { useState } from \"react\";\r\nimport { auth } from \"../../Firebase\";\r\nimport icons from \"url:../../bootstrap-icons/bootstrap-icons.svg\";\r\nimport classes from \"./MainMenu.module.css\";\r\n// import DbContext from \"../../Context/DbContext\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as actions from \"../../Store/Actions/ActionsIndex\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\nimport { State } from \"../../Types\";\r\n\r\nconst MainMenu = (props: PropsFromRedux) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [displayMenu, setDisplayMenu] = useState<boolean>(false);\r\n  const [modalDisplay, setModalDisplay] = useState<boolean>(false);\r\n\r\n  // const userDb = useContext(DbContext);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setDisplayMenu(true);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    // console.log(`signout 1`);\r\n    props.noActiveUser();\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        // console.log(`signout complete 3`);\r\n        window.location.href = \"/\";\r\n        setDisplayMenu(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // console.log(`login`);\r\n    setDisplayMenu(false);\r\n    setModalDisplay(true);\r\n  };\r\n\r\n  return (\r\n    <Aux>\r\n      <button className={classes.MainMenu} onClick={handleClick}>\r\n        <svg\r\n          // style={{ color: userDb ? `rgb(0, 185, 56)` : `rgb(48, 48, 48)` }}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <use href={`${icons}#list`} />\r\n        </svg>\r\n      </button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={displayMenu}\r\n        onClose={() => setDisplayMenu(false)}\r\n      >\r\n        {!props.user ? (\r\n          <MenuItem onClick={handleLogin}>Login</MenuItem>\r\n        ) : (\r\n          <MenuItem onClick={handleSignout}>Sign Out</MenuItem>\r\n        )}\r\n      </Menu>\r\n      <LoginModal\r\n        handleClose={() => setModalDisplay(false)}\r\n        show={modalDisplay}\r\n      />\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  activeUser: () => actions.loginSuccess(),\r\n  noActiveUser: () => actions.logout(),\r\n};\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(MainMenu);\r\n","import React, { useCallback, useState, useEffect, useContext } from \"react\";\r\nimport DateContext from \"../../Context/DateContext\";\r\n\r\nconst Watch: React.FC = React.memo(() => {\r\n  const [time, setTime] = useState<string>(``);\r\n  const [dateString, setDateString] = useState<string>(``);\r\n\r\n  const date: Date | null = useContext(DateContext);\r\n\r\n  const tick = useCallback(() => {\r\n    const now: number = Date.now();\r\n\r\n    const timeUTC: Date = new Date(now);\r\n\r\n    const seconds: string = timeUTC.getSeconds().toString().padStart(2, `0`);\r\n    const minutes: string = timeUTC.getMinutes().toString().padStart(2, `0`);\r\n    const hours: string = timeUTC.getHours().toString().padStart(2, `0`);\r\n\r\n    const outputString = `${hours}:${minutes}:${seconds}`;\r\n\r\n    setTime(outputString);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!date) return;\r\n    const dateString: string = date.toDateString();\r\n    setDateString(dateString);\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(function () {\r\n      tick();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [tick]);\r\n\r\n  return (\r\n    <div style={{ display: `flex`, flexDirection: `row`, margin: `0px 10px` }}>\r\n      <h5\r\n        style={{\r\n          marginRight: `30px`,\r\n          fontFamily: \"arial\",\r\n          fontWeight: \"lighter\",\r\n        }}\r\n      >\r\n        {time}\r\n      </h5>\r\n      <h5>{dateString}</h5>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Watch;\r\n","import React from \"react\";\r\n// import { Navbar } from \"react-bootstrap\";\r\n// import Login from \"../../LoginModal/LoginModal\";\r\nimport MainMenu from \"../../MainMenu/MainMenu\";\r\nimport Watch from \"../../Watch/Watch\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { State } from \"../../../Types\";\r\n\r\nconst Toolbar = (props: PropsFromRedux) => {\r\n  return (\r\n    <div className={classes.Toolbar}>\r\n      <h2 className={classes.Header}>Self Track</h2>\r\n      {props.user ? <Watch /> : null}\r\n      <MainMenu />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Toolbar);\r\n","import React from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\n// import Footer from \"../Footer/Footer\";\r\n\r\nconst Layout: React.FC = (props) => {\r\n  return (\r\n    <Aux>\r\n      <Toolbar />\r\n      <main>{props.children}</main>\r\n      {/* <Footer /> */}\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import React, { Suspense } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Layout from \"./Components/Layouts/Layout\";\n// import Control from \"./Control\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { State } from \"./Types\";\n// import LandingPage from \"./Containers/LandingPage/LandingPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Spinner from \"./Components/Spinner/Spinner\";\n\nconst Control = React.lazy(() => import(\"./Control\"));\nconst LandingPage = React.lazy(\n  () => import(\"./Containers/LandingPage/LandingPage\")\n);\n\nconst App = (props: PropsFromRedux) => {\n  // const view = props.user ? <Control /> : <LandingPage />;\n\n  return (\n    <div className=\"App\" style={{ height: `100vh` }}>\n      <Layout>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route path=\"/app\" component={Control} exact />\n            <Route path=\"/\" component={LandingPage} exact />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  user: state.user,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(App);\n","// import { Reducer } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\nimport * as types from \"../Types\";\r\nimport * as actionTypes from \"./Actions/ActionTypes\";\r\n\r\nconst initialState: types.State = {\r\n  user: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return {\r\n        ...state,\r\n        user: true,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport DbContext from \"../Context/DbContext\";\r\nimport { auth, db } from \"../Firebase\";\r\nimport * as types from \"../Types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport * as actions from \"../Store/Actions/ActionsIndex\";\r\n\r\nconst DbProvider = (props: Props) => {\r\n  const [userDb, setUserDb] = useState<types.DbRef>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      // console.log(`detecting change`, user);\r\n      if (!user) {\r\n        props.noActiveUser();\r\n      } else {\r\n        const userDb = db.collection(`users`).doc(user!.uid);\r\n        setUserDb(userDb);\r\n        props.activeUser();\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [props]);\r\n\r\n  return (\r\n    <DbContext.Provider value={userDb}>{props.children}</DbContext.Provider>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  activeUser: () => actions.loginSuccess(),\r\n  noActiveUser: () => actions.logout(),\r\n};\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  children: any;\r\n};\r\n\r\nexport default connector(DbProvider);\r\n","import { useEffect, useState } from \"react\";\r\nimport DateContext from \"../Context/DateContext\";\r\nimport { calcEndOfDay } from \"../HalperFunctions/General\";\r\n// import { auth, db } from \"../Firebase\";\r\n// import * as types from \"../Types\";\r\n\r\nconst DateProvider: React.FC = ({ children }) => {\r\n  const [date, setDate] = useState<Date | null>(\r\n    new Date(\r\n      new Date(Date.now()).getFullYear(),\r\n      new Date(Date.now()).getMonth(),\r\n      new Date(Date.now()).getDate()\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    const endOfDay: number = calcEndOfDay();\r\n\r\n    const milliSecs: number = endOfDay - Date.now();\r\n\r\n    setTimeout(() => {\r\n      setDate(\r\n        new Date(\r\n          new Date(Date.now()).getFullYear(),\r\n          new Date(Date.now()).getMonth(),\r\n          new Date(Date.now()).getDate()\r\n        )\r\n      );\r\n    }, milliSecs);\r\n  }, [date]);\r\n\r\n  return <DateContext.Provider value={date}>{children}</DateContext.Provider>;\r\n};\r\n\r\nexport default DateProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./Store/Reducer\";\nimport DbProvider from \"./Provider/DbProvider\";\nimport DateProvider from \"./Provider/DateProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <DbProvider>\n      <DateProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </DateProvider>\n    </DbProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nexport type AppDispatch = typeof store.dispatch;\n","import { LoginData } from \"../../Types\";\r\nimport * as firebase from \"../../Firebase\";\r\nimport * as actionTypes from \"./ActionTypes\";\r\n// import * as types from \"../../Types\";\r\nimport type { AppDispatch } from \"../../index\";\r\n\r\nexport const loginAsync = (data: LoginData) => {\r\n  return (dispatch: AppDispatch) => {\r\n    firebase.auth\r\n      .signInWithEmailAndPassword(data.email, data.password)\r\n      .then((userCredential) => {\r\n        // const user = userCredential.user;\r\n        window.location.href = `/app`;\r\n        // dispatch(loginSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === \"auth/wrong-password\") {\r\n          console.log(`err1`);\r\n        } else {\r\n          console.log(`err2`);\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const loginSuccess = () => {\r\n  return {\r\n    type: actionTypes.LOGIN,\r\n    // user: user,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n};\r\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\n// import { setPersistence, browserSessionPersistence } from \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCkfEb7hWwjUsl_2sevK0Ei4H6Pl06w6jE\",\r\n  authDomain: \"self-track-44917.firebaseapp.com\",\r\n  databaseURL: \"https://self-track-44917-default-rtdb.firebaseio.com\",\r\n  projectId: \"self-track-44917\",\r\n  storageBucket: \"self-track-44917.appspot.com\",\r\n  //   messagingSenderId: \"988020024317\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\n// setPersistence(auth, browserSessionPersistence)\r\n//   .then()\r\n//   .catch((err) => console.log(err));\r\n\r\nexport const db = firebase.firestore();\r\n","export const LOGIN = `LOGIN`;\r\nexport const LOGOUT = `LOGOUT`;\r\n","import React from \"react\";\r\n// import firebase from \"firebase/app\";\r\n// import * as types from \"../Types\";\r\n\r\nconst DateContext = React.createContext<Date | null>(null);\r\n\r\nexport default DateContext;\r\n","import { ReactNode } from \"react\";\r\n\r\nconst Auxiliary = ({ children }: { children: ReactNode }) =>\r\n  children as unknown as JSX.Element;\r\n// const Auxiliary: React.FC = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__kHiDd\",\"Form\":\"Login_Form__1MCoP\",\"Control\":\"Login_Control__2cxBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1Lnqz\",\"Header\":\"Toolbar_Header__3N-uk\"};","import React from \"react\";\r\n// import firebase from \"firebase/app\";\r\nimport * as types from \"../Types\";\r\n\r\nconst DbContext = React.createContext<types.DbRef | null>(null);\r\n\r\nexport default DbContext;\r\n"],"sourceRoot":""}