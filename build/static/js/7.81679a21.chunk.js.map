{"version":3,"sources":["Components/Account/CompleteSignup.tsx"],"names":["connector","connect","state","user","props","useEffect","actionCode","name","lengthOfParam","length","search","window","location","i","slice","startIndex","j","indexOfEnd","getParameterByName","applyActionCode","auth","then","href","catch","err","console","log","style","display","justifyContent","alignItems"],"mappings":"gHAAA,0DA8DMA,EAAYC,aAJM,SAACC,GAAD,MAAmB,CACzCC,KAAMD,EAAMC,SAOCH,aApCQ,SAACI,GAetB,OAdAC,qBAAU,WACR,GAAKD,EAAMD,KAAX,CAEA,IAAMG,EA1BiB,SAACC,GAI1B,IAHA,IAAMC,EAAwBD,EAAKE,OAC7BC,EAAiBC,OAAOC,SAASF,OAE9BG,EAAI,EAAGA,EAAIH,EAAOD,OAASD,EAAeK,IAEjD,GADeH,EAAOI,MAAMD,EAAGA,EAAIL,KACpBD,EAAM,CAGnB,IAFA,IAAMQ,EAAqBF,EAAIL,EAAgB,EAEtCQ,EAAID,EAAa,EAAGC,EAAIN,EAAOD,OAAQO,IAC9C,GAAI,MAAAN,EAAOM,GAAY,CACrB,IAAMC,EAAqBD,EAE3B,OADsBN,EAAOI,MAAMC,EAAYE,GAInD,MAGJ,OAAO,KAO6BC,CAAmB,WAE/CZ,GACJa,YAAgBC,IAAMd,GACnBe,MAAK,WACJV,OAAOC,SAASU,KAAO,UAExBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SAE/B,CAACpB,EAAMD,OAGR,qBACEwB,MAAO,CACLC,QAAS,OACTC,eAAe,eACfC,WAAY,UAJhB,SAOE,cAAC,IAAD","file":"static/js/7.81679a21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { State } from \"../../Types\";\r\nimport { auth } from \"../../Firebase\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { applyActionCode } from \"firebase/auth\";\r\n\r\nconst getParameterByName = (name: string) => {\r\n  const lengthOfParam: number = name.length;\r\n  const search: string = window.location.search;\r\n\r\n  for (let i = 0; i < search.length - lengthOfParam; i++) {\r\n    const string = search.slice(i, i + lengthOfParam);\r\n    if (string === name) {\r\n      const startIndex: number = i + lengthOfParam + 1;\r\n\r\n      for (let j = startIndex + 1; j < search.length; j++) {\r\n        if (search[j] === `&`) {\r\n          const indexOfEnd: number = j;\r\n          const param: string = search.slice(startIndex, indexOfEnd);\r\n          return param;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst CompleteSignup = (props: PropsFromRedux) => {\r\n  useEffect(() => {\r\n    if (!props.user) return;\r\n\r\n    const actionCode: string | null = getParameterByName(\"oobCode\");\r\n\r\n    if (!!actionCode) {\r\n      applyActionCode(auth, actionCode)\r\n        .then(() => {\r\n          window.location.href = \"/app\";\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [props.user]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: `space-around`,\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Spinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CompleteSignup);\r\n"],"sourceRoot":""}